{"ast":null,"code":"import * as React from 'react';\nimport { useFluentContext, useTelemetry, useStyles, useAccessibility, getElementType, useUnhandledProps } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes, childrenExist } from '../../utils';\nexport var avatarIconClassName = 'ui-avatar__icon';\n/**\n * A AvatarIcon provides a status icon for the Avatar.\n */\n\nexport var AvatarIcon = /*#__PURE__*/function () {\n  var AvatarIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    var context = useFluentContext();\n    var _useTelemetry = useTelemetry(AvatarIcon.displayName, context.telemetry),\n      setStart = _useTelemetry.setStart,\n      setEnd = _useTelemetry.setEnd;\n    setStart();\n    var className = props.className,\n      children = props.children,\n      design = props.design,\n      styles = props.styles,\n      variables = props.variables,\n      size = props.size,\n      square = props.square,\n      content = props.content;\n    var _useStyles = useStyles(AvatarIcon.displayName, {\n        className: avatarIconClassName,\n        mapPropsToStyles: function mapPropsToStyles() {\n          return {\n            size: size,\n            square: square\n          };\n        },\n        mapPropsToInlineStyles: function mapPropsToInlineStyles() {\n          return {\n            className: className,\n            design: design,\n            styles: styles,\n            variables: variables\n          };\n        },\n        rtl: context.rtl\n      }),\n      classes = _useStyles.classes;\n    var getA11Props = useAccessibility(props.accessibility, {\n      debugName: AvatarIcon.displayName,\n      rtl: context.rtl\n    });\n    var ElementType = getElementType(props);\n    var unhandledProps = useUnhandledProps(AvatarIcon.handledProps, props);\n    var element = /*#__PURE__*/React.createElement(ElementType, getA11Props('root', Object.assign({\n      className: classes.root,\n      ref: ref\n    }, unhandledProps)), childrenExist(children) ? children : content);\n    setEnd();\n    return element;\n  });\n  AvatarIcon.displayName = 'AvatarIcon';\n  AvatarIcon.propTypes = Object.assign({}, commonPropTypes.createCommon(), {\n    square: PropTypes.bool,\n    size: customPropTypes.size\n  });\n  AvatarIcon.handledProps = Object.keys(AvatarIcon.propTypes);\n  AvatarIcon.defaultProps = {\n    as: 'span'\n  };\n  AvatarIcon.shorthandConfig = {\n    mappedProp: 'content'\n  };\n  return AvatarIcon;\n}();","map":{"version":3,"names":["React","useFluentContext","useTelemetry","useStyles","useAccessibility","getElementType","useUnhandledProps","customPropTypes","PropTypes","commonPropTypes","childrenExist","avatarIconClassName","AvatarIcon","forwardRef","props","ref","context","_useTelemetry","displayName","telemetry","setStart","setEnd","className","children","design","styles","variables","size","square","content","_useStyles","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","element","createElement","Object","assign","root","propTypes","createCommon","bool","keys","defaultProps","as","shorthandConfig","mappedProp"],"sources":["C:\\Users\\Administrator\\frontendapp\\communicationapp\\node_modules\\@azure\\communication-react\\node_modules\\@fluentui\\react-northstar\\dist\\es\\components\\Avatar\\components\\Avatar\\AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport {\n  commonPropTypes,\n  UIComponentProps,\n  SizeValue,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  childrenExist,\n} from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport interface AvatarIconProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /** The avatar icon can have a square shape. */\n  square?: boolean;\n\n  /** Size multiplier. */\n  size?: SizeValue;\n}\n\nexport type AvatarIconStylesProps = Required<Pick<AvatarIconProps, 'size' | 'square'>>;\nexport const avatarIconClassName = 'ui-avatar__icon';\n\n/**\n * A AvatarIcon provides a status icon for the Avatar.\n */\nexport const AvatarIcon = (React.forwardRef<HTMLSpanElement, AvatarIconProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AvatarIcon.displayName, context.telemetry);\n  setStart();\n\n  const { className, children, design, styles, variables, size, square, content } = props;\n\n  const { classes } = useStyles<AvatarIconStylesProps>(AvatarIcon.displayName, {\n    className: avatarIconClassName,\n    mapPropsToStyles: () => ({\n      size,\n      square,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: AvatarIcon.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(AvatarIcon.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, AvatarIconProps> &\n  FluentComponentStaticProps<AvatarIconProps>;\n\nAvatarIcon.displayName = 'AvatarIcon';\nAvatarIcon.propTypes = {\n  ...commonPropTypes.createCommon(),\n  square: PropTypes.bool,\n  size: customPropTypes.size,\n};\nAvatarIcon.handledProps = Object.keys(AvatarIcon.propTypes) as any;\nAvatarIcon.defaultProps = {\n  as: 'span',\n};\n\nAvatarIcon.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,gBADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,gBAJF,EAKEC,cALF,EAMEC,iBANF,QAQO,0BARP;AASA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SACEC,eADF,EAMEC,aANF,QAOO,aAPP;AAuBA,OAAO,IAAMC,mBAAmB,GAAG,iBAA5B;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,UAAN;EAAA,IAAMA,UAAU,gBAAIZ,KAAK,CAACa,UAAN,CAAmD,UAACC,KAAD,EAAQC,GAAR,EAAgB;IAC5F,IAAMC,OAAO,GAAGf,gBAAgB,EAAhC;IACA,IAAAgB,aAAA,GAA6Bf,YAAY,CAACU,UAAU,CAACM,WAAZ,EAAyBF,OAAO,CAACG,SAAjC,CAAzC;MAAQC,QAAR,GAAAH,aAAA,CAAQG,QAAR;MAAkBC,MAAlB,GAAAJ,aAAA,CAAkBI,MAAlB;IACAD,QAAQ;IAER,IAAQE,SAAR,GAAkFR,KAAlF,CAAQQ,SAAR;MAAmBC,QAAnB,GAAkFT,KAAlF,CAAmBS,QAAnB;MAA6BC,MAA7B,GAAkFV,KAAlF,CAA6BU,MAA7B;MAAqCC,MAArC,GAAkFX,KAAlF,CAAqCW,MAArC;MAA6CC,SAA7C,GAAkFZ,KAAlF,CAA6CY,SAA7C;MAAwDC,IAAxD,GAAkFb,KAAlF,CAAwDa,IAAxD;MAA8DC,MAA9D,GAAkFd,KAAlF,CAA8Dc,MAA9D;MAAsEC,OAAtE,GAAkFf,KAAlF,CAAsEe,OAAtE;IAEA,IAAAC,UAAA,GAAoB3B,SAAS,CAAwBS,UAAU,CAACM,WAAnC,EAAgD;QAC3EI,SAAS,EAAEX,mBADgE;QAE3EoB,gBAAgB,EAAE,SAAAA,iBAAA;UAAA,OAAO;YACvBJ,IAAI,EAAJA,IADuB;YAEvBC,MAAM,EAANA;UAFuB,CAAP;QAAA,CAFyD;QAM3EI,sBAAsB,EAAE,SAAAA,uBAAA;UAAA,OAAO;YAC7BV,SAAS,EAATA,SAD6B;YAE7BE,MAAM,EAANA,MAF6B;YAG7BC,MAAM,EAANA,MAH6B;YAI7BC,SAAS,EAATA;UAJ6B,CAAP;QAAA,CANmD;QAY3EO,GAAG,EAAEjB,OAAO,CAACiB;MAZ8D,CAAhD,CAA7B;MAAQC,OAAR,GAAAJ,UAAA,CAAQI,OAAR;IAeA,IAAMC,WAAW,GAAG/B,gBAAgB,CAACU,KAAK,CAACsB,aAAP,EAAsB;MACxDC,SAAS,EAAEzB,UAAU,CAACM,WADkC;MAExDe,GAAG,EAAEjB,OAAO,CAACiB;IAF2C,CAAtB,CAApC;IAKA,IAAMK,WAAW,GAAGjC,cAAc,CAACS,KAAD,CAAlC;IACA,IAAMyB,cAAc,GAAGjC,iBAAiB,CAACM,UAAU,CAAC4B,YAAZ,EAA0B1B,KAA1B,CAAxC;IAEA,IAAM2B,OAAO,gBACXzC,KAAA,CAAA0C,aAAA,CAACJ,WAAD,EAAiBH,WAAW,CAAC,MAAD,EAAAQ,MAAA,CAAAC,MAAA;MAAWtB,SAAS,EAAEY,OAAO,CAACW,IAA9B;MAAoC9B,GAAG,EAAHA;IAApC,GAA4CwB,cAA5C,EAA5B,EACG7B,aAAa,CAACa,QAAD,CAAb,GAA0BA,QAA1B,GAAqCM,OADxC,CADF;IAKAR,MAAM;IAEN,OAAOoB,OAAP;EACD,CAtC0B,CAApB;EAyCP7B,UAAU,CAACM,WAAX,GAAyB,YAAzB;EACAN,UAAU,CAACkC,SAAX,GAAAH,MAAA,CAAAC,MAAA,KACKnC,eAAe,CAACsC,YAAhB,EADL;IAEEnB,MAAM,EAAEpB,SAAS,CAACwC,IAFpB;IAGErB,IAAI,EAAEpB,eAAe,CAACoB;EAHxB;EAKAf,UAAU,CAAC4B,YAAX,GAA0BG,MAAM,CAACM,IAAP,CAAYrC,UAAU,CAACkC,SAAvB,CAA1B;EACAlC,UAAU,CAACsC,YAAX,GAA0B;IACxBC,EAAE,EAAE;EADoB,CAA1B;EAIAvC,UAAU,CAACwC,eAAX,GAA6B;IAC3BC,UAAU,EAAE;EADe,CAA7B;EApDO,OAAMzC,UAAN;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}