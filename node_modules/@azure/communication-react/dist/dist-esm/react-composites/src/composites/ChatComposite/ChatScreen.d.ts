/// <reference types="react" />
import { CommunicationParticipant, MessageProps, MessageRenderer, MessageThreadStyles, ParticipantMenuItemsCallback, SendBoxStylesProps, TypingIndicatorStylesProps } from "../../../../react-components/src";
import { AvatarPersonaDataCallback } from '../common/AvatarPersona';
import { ChatCompositeOptions } from './ChatComposite';
import { FileDownloadHandler } from "../../../../react-components/src";
import { FileUploadHandler } from './file-sharing';
/**
 * @private
 */
export declare type ChatScreenProps = {
    options?: ChatCompositeOptions;
    onFetchAvatarPersonaData?: AvatarPersonaDataCallback;
    onRenderMessage?: (messageProps: MessageProps, defaultOnRender?: MessageRenderer) => JSX.Element;
    onRenderTypingIndicator?: (typingUsers: CommunicationParticipant[]) => JSX.Element;
    onFetchParticipantMenuItems?: ParticipantMenuItemsCallback;
    styles?: ChatScreenStyles;
    hasFocusOnMount?: 'sendBoxTextField';
    fileSharing?: FileSharingOptions;
    formFactor?: 'desktop' | 'mobile';
};
/**
 * @private
 */
export declare type ChatScreenStyles = {
    messageThread?: MessageThreadStyles;
    sendBox?: SendBoxStylesProps;
    typingIndicator?: TypingIndicatorStylesProps;
};
/**
 * Properties for configuring the File Sharing feature.
 * @beta
 */
export interface FileSharingOptions {
    /**
     * A string containing the comma separated list of accepted file types.
     * Similar to the `accept` attribute of the `<input type="file" />` element.
     * Accepts any type of file if not specified.
     * @beta
     */
    accept?: string;
    /**
     * Allows multiple files to be selected if set to `true`.
     * Similar to the `multiple` attribute of the `<input type="file" />` element.
     * @defaultValue false
     * @beta
     */
    multiple?: boolean;
    /**
     * A function of type {@link FileUploadHandler} for handling file uploads.
     * @beta
     */
    uploadHandler: FileUploadHandler;
    /**
     * A function of type {@link FileDownloadHandler} for handling file downloads.
     * If the function is not specified, the file's `url` will be opened in a new tab to
     * initiate the download.
     */
    downloadHandler?: FileDownloadHandler;
}
/**
 * @private
 */
export declare const ChatScreen: (props: ChatScreenProps) => JSX.Element;
//# sourceMappingURL=ChatScreen.d.ts.map