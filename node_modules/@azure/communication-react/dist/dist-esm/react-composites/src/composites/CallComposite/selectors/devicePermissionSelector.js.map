{"version":3,"file":"devicePermissionSelector.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/selectors/devicePermissionSelector.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD;;GAEG;AACH,MAAM,CAAC,MAAM,wBAAwB,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,EAAE,aAAa,CAAC,EAAE;IAClG,OAAO;QACL,KAAK,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;QAChF,KAAK,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;KACjF,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as reselect from 'reselect';\nimport { getDeviceManager } from './baseSelectors';\n\n/**\n * @private\n */\nexport const devicePermissionSelector = reselect.createSelector([getDeviceManager], deviceManager => {\n  return {\n    video: deviceManager.deviceAccess ? deviceManager.deviceAccess.video : undefined,\n    audio: deviceManager.deviceAccess ? deviceManager.deviceAccess.audio : undefined\n  };\n});"]}