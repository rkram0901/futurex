{"version":3,"file":"MoreDrawer.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallWithChatComposite/components/MoreDrawer.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { useCallback } from 'react';\nimport { OptionsDevice, _DrawerMenu as DrawerMenu, _DrawerMenuItemProps as DrawerMenuItemProps, _DrawerMenuItemProps } from '@internal/react-components';\nimport { AudioDeviceInfo } from '@azure/communication-calling';\nimport { CallWithChatControlOptions } from '../CallWithChatComposite';\nimport { isDisabled } from '../../CallComposite/utils';\n\n/** @private */\nexport interface MoreDrawerStrings {\n  /**\n   * Label for people drawerMenuItem.\n   */\n  peopleButtonLabel: string;\n  /**\n   * Label for audio device drawerMenuItem.\n   *\n   * @remarks This replaces the microphoneMenuTitle speakers can not be enumerated\n   *\n   */\n  audioDeviceMenuTitle?: string;\n  /**\n   * Label for microphone drawerMenuItem.\n   *\n   * @remarks Only displayed when speakers can be enumerated otherwise audioDeviceMenuTitle is used\n   *\n   */\n  microphoneMenuTitle: string;\n  /**\n   * Label for speaker drawerMenuItem.\n   *\n   * @remarks Only displayed when speakers can be enumerated\n   *\n   */\n  speakerMenuTitle: string;\n}\n\n/** @private */\nexport interface MoreDrawerDevicesMenuProps {\n  /**\n   * Available microphones for selection\n   */\n  microphones?: OptionsDevice[];\n  /**\n   * Available speakers for selection\n   */\n  speakers?: OptionsDevice[];\n  /**\n   * Microphone that is shown as currently selected\n   */\n  selectedMicrophone?: OptionsDevice;\n  /**\n   * Speaker that is shown as currently selected\n   */\n  selectedSpeaker?: OptionsDevice;\n  /**\n   * Speaker when a speaker is selected\n   */\n  onSelectSpeaker: (device: AudioDeviceInfo) => Promise<void>;\n  /**\n   * Callback when a microphone is selected\n   */\n  onSelectMicrophone: (device: AudioDeviceInfo) => Promise<void>;\n}\n\n/** @private */\nexport interface MoreDrawerProps extends MoreDrawerDevicesMenuProps {\n  onLightDismiss: () => void;\n  onPeopleButtonClicked: () => void;\n  callControls?: boolean | CallWithChatControlOptions;\n  onClickShowDialpad?: () => void;\n  strings: MoreDrawerStrings;\n  disableButtonsForHoldScreen?: boolean;\n}\nconst inferCallWithChatControlOptions = (callWithChatControls?: boolean | CallWithChatControlOptions): CallWithChatControlOptions | false => {\n  if (callWithChatControls === false) {\n    return false;\n  }\n  const options = callWithChatControls === true || callWithChatControls === undefined ? {} : callWithChatControls;\n  return options;\n};\n\n/** @private */\nexport const MoreDrawer = (props: MoreDrawerProps): JSX.Element => {\n  const drawerMenuItems: DrawerMenuItemProps[] = [];\n  const {\n    speakers,\n    onSelectSpeaker,\n    onLightDismiss\n  } = props;\n  const onSpeakerItemClick = useCallback((_ev, itemKey) => {\n    const selected = speakers?.find(speaker => speaker.id === itemKey);\n    if (selected) {\n      // This is unsafe - we're only passing in part of the argument to the handler.\n      // But this is a known issue in our state.\n      onSelectSpeaker((selected as AudioDeviceInfo));\n    }\n    onLightDismiss();\n  }, [speakers, onSelectSpeaker, onLightDismiss]);\n  const drawerSelectionOptions = inferCallWithChatControlOptions(props.callControls);\n  if (props.speakers && props.speakers.length > 0) {\n    drawerMenuItems.push({\n      itemKey: 'speakers',\n      disabled: props.disableButtonsForHoldScreen,\n      text: props.strings.speakerMenuTitle,\n      iconProps: {\n        iconName: 'MoreDrawerSpeakers'\n      },\n      subMenuProps: props.speakers.map(speaker => ({\n        itemKey: speaker.id,\n        iconProps: {\n          iconName: isDeviceSelected(speaker, props.selectedSpeaker) ? 'MoreDrawerSelectedSpeaker' : 'MoreDrawerSpeakers'\n        },\n        text: speaker.name,\n        onItemClick: onSpeakerItemClick,\n        secondaryIconProps: isDeviceSelected(speaker, props.selectedSpeaker) ? {\n          iconName: 'Accept'\n        } : undefined\n      })),\n      secondaryText: props.selectedSpeaker?.name\n    });\n  }\n  const {\n    microphones,\n    onSelectMicrophone\n  } = props;\n  const onMicrophoneItemClick = useCallback((_ev, itemKey) => {\n    const selected = microphones?.find(mic => mic.id === itemKey);\n    if (selected) {\n      // This is unsafe - we're only passing in part of the argument to the handler.\n      // But this is a known issue in our state.\n      onSelectMicrophone((selected as AudioDeviceInfo));\n    }\n    onLightDismiss();\n  }, [microphones, onSelectMicrophone, onLightDismiss]);\n  if (props.microphones && props.microphones.length > 0) {\n    // Set props as Microphone if speakers can be enumerated else set as Audio Device\n    const speakersAvailable = props.speakers && props.speakers.length > 0;\n    const itemKey = speakersAvailable ? 'microphones' : 'audioDevices';\n    const text = speakersAvailable ? props.strings.microphoneMenuTitle : props.strings.audioDeviceMenuTitle;\n    const iconName = speakersAvailable ? 'MoreDrawerMicrophones' : 'MoreDrawerSpeakers';\n    const selectedIconName = speakersAvailable ? 'MoreDrawerSelectedMicrophone' : 'MoreDrawerSelectedSpeaker';\n    drawerMenuItems.push({\n      itemKey: itemKey,\n      disabled: props.disableButtonsForHoldScreen,\n      text: text,\n      iconProps: {\n        iconName: iconName\n      },\n      subMenuProps: props.microphones.map(mic => ({\n        itemKey: mic.id,\n        iconProps: {\n          iconName: isDeviceSelected(mic, props.selectedMicrophone) ? selectedIconName : iconName\n        },\n        text: mic.name,\n        onItemClick: onMicrophoneItemClick,\n        secondaryIconProps: isDeviceSelected(mic, props.selectedMicrophone) ? {\n          iconName: 'Accept'\n        } : undefined,\n        disabled: drawerSelectionOptions !== false ? isDisabled(drawerSelectionOptions.microphoneButton) : undefined\n      })),\n      secondaryText: props.selectedMicrophone?.name\n    });\n  }\n  if (drawerSelectionOptions !== false && isEnabled(drawerSelectionOptions?.peopleButton)) {\n    drawerMenuItems.push({\n      itemKey: 'people',\n      text: props.strings.peopleButtonLabel,\n      iconProps: {\n        iconName: 'MoreDrawerPeople'\n      },\n      onItemClick: props.onPeopleButtonClicked,\n      disabled: drawerSelectionOptions !== false ? isDisabled(drawerSelectionOptions.peopleButton) : undefined\n    });\n  }\n  return <DrawerMenu items={drawerMenuItems} onLightDismiss={props.onLightDismiss} />;\n};\nconst isDeviceSelected = (speaker: OptionsDevice, selectedSpeaker?: OptionsDevice): boolean => !!selectedSpeaker && speaker.id === selectedSpeaker.id;\nconst isEnabled = (option: unknown): boolean => option !== false;\"../../../../../react-components/src\""]}