{"version":3,"file":"CallWithChatPane.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-composites/src/composites/CallWithChatComposite/CallWithChatPane.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Stack } from '@fluentui/react';\nimport { _DrawerMenu, _DrawerMenuItemProps, _useContainerHeight, _useContainerWidth, ParticipantMenuItemsCallback, useTheme } from '@internal/react-components';\nimport React, { useMemo, useState } from 'react';\nimport { CallAdapter } from '../CallComposite';\nimport { CallAdapterProvider } from '../CallComposite/adapter/CallAdapterProvider';\nimport { ChatAdapter, ChatComposite, ChatCompositeProps } from '../ChatComposite';\nimport { AvatarPersonaDataCallback } from '../common/AvatarPersona';\nimport { paneBodyContainer, scrollableContainer, scrollableContainerContents } from '../common/styles/ParticipantContainer.styles';\nimport { SidePaneHeader } from '../common/SidePaneHeader';\nimport { useCallWithChatCompositeStrings } from './hooks/useCallWithChatCompositeStrings';\nimport { ModalLocalAndRemotePIP } from '../common/ModalLocalAndRemotePIP';\nimport { PeoplePaneContent } from '../common/PeoplePaneContent';\nimport { TabHeader } from '../common/TabHeader';\nimport { _ICoordinates } from '@internal/react-components';\nimport { _pxToRem } from '@internal/acs-ui-common';\nimport { getPipStyles } from '../common/styles/ModalLocalAndRemotePIP.styles';\nimport { useMinMaxDragPosition } from '../common/utils';\nimport { availableSpaceStyles, hiddenStyles, sidePaneStyles, sidePaneTokens } from '../common/styles/Pane.styles';\nimport { CallWithChatControlOptions } from './CallWithChatComposite';\nimport { isDisabled } from '../CallComposite/utils';\nimport { drawerContainerStyles } from '../CallComposite/styles/CallComposite.styles';\n\n/**\n * Pane that is used to store chat and people for CallWithChat composite\n * @private\n */\nexport const CallWithChatPane = (props: {\n  chatCompositeProps: Partial<ChatCompositeProps>;\n  callAdapter: CallAdapter;\n  chatAdapter: ChatAdapter;\n  onClose: () => void;\n  onFetchAvatarPersonaData?: AvatarPersonaDataCallback;\n  onFetchParticipantMenuItems?: ParticipantMenuItemsCallback;\n  onChatButtonClicked?: () => void;\n  onPeopleButtonClicked?: () => void;\n  modalLayerHostId: string;\n  activePane: CallWithChatPaneOption;\n  mobileView?: boolean;\n  inviteLink?: string;\n  rtl?: boolean;\n  callControls?: CallWithChatControlOptions;\n}): JSX.Element => {\n  const [drawerMenuItems, setDrawerMenuItems] = useState<_DrawerMenuItemProps[]>([]);\n  const hidden = props.activePane === 'none';\n  const paneStyles = hidden ? hiddenStyles : props.mobileView ? availableSpaceStyles : sidePaneStyles;\n  const callWithChatStrings = useCallWithChatCompositeStrings();\n  const theme = useTheme();\n  const header = props.activePane === 'none' ? null : props.mobileView ? <TabHeader {...props} strings={callWithChatStrings} activeTab={props.activePane} disableChatButton={isDisabled(props.callControls?.chatButton)} disablePeopleButton={isDisabled(props.callControls?.peopleButton)} /> : <SidePaneHeader {...props} strings={callWithChatStrings} headingText={props.activePane === 'chat' ? callWithChatStrings.chatPaneTitle : props.activePane === 'people' ? callWithChatStrings.peoplePaneTitle : ''} />;\n  const chatContent = <ChatComposite {...props.chatCompositeProps} adapter={props.chatAdapter} fluentTheme={theme} options={{\n    topic: false\n  }} onFetchAvatarPersonaData={props.onFetchAvatarPersonaData} />;\n\n  /**\n   * In a CallWithChat when a participant is removed, we must remove them from both\n   * the call and the chat thread.\n   */\n  const removeParticipantFromCallWithChat = async (participantId: string): Promise<void> => {\n    await props.callAdapter.removeParticipant(participantId);\n    await props.chatAdapter.removeParticipant(participantId);\n  };\n  const peopleContent = <CallAdapterProvider adapter={props.callAdapter}>\n      <PeoplePaneContent active={props.activePane === 'people'} {...props} onRemoveParticipant={removeParticipantFromCallWithChat} setDrawerMenuItems={setDrawerMenuItems} strings={callWithChatStrings} />\n    </CallAdapterProvider>;\n  const minMaxDragPosition = useMinMaxDragPosition(props.modalLayerHostId, props.rtl);\n  const pipStyles = useMemo(() => getPipStyles(theme), [theme]);\n  const dataUiId = props.activePane === 'chat' ? 'call-with-chat-composite-chat-pane' : props.activePane === 'people' ? 'call-with-chat-composite-people-pane' : '';\n  return <Stack verticalFill grow styles={paneStyles} data-ui-id={dataUiId} tokens={props.mobileView ? {} : sidePaneTokens}>\n      {header}\n      <Stack.Item verticalFill grow styles={paneBodyContainer}>\n        <Stack horizontal styles={scrollableContainer}>\n          <Stack.Item verticalFill styles={scrollableContainerContents}>\n            <Stack styles={props.activePane === 'chat' ? availableSpaceStyles : hiddenStyles}>{chatContent}</Stack>\n            {props.activePane === 'people' && peopleContent}\n          </Stack.Item>\n        </Stack>\n      </Stack.Item>\n      {props.mobileView && <CallAdapterProvider adapter={props.callAdapter}>\n          <ModalLocalAndRemotePIP modalLayerHostId={props.modalLayerHostId} hidden={hidden} styles={pipStyles} minDragPosition={minMaxDragPosition.minDragPosition} maxDragPosition={minMaxDragPosition.maxDragPosition} />\n        </CallAdapterProvider>}\n      {drawerMenuItems.length > 0 && <Stack styles={drawerContainerStyles()}>\n          <_DrawerMenu onLightDismiss={() => setDrawerMenuItems([])} items={drawerMenuItems} />\n        </Stack>}\n    </Stack>;\n};\n\n/**\n * Active tab option type for {@link CallWithChatPane} component\n * @private\n */\nexport type CallWithChatPaneOption = 'none' | 'chat' | 'people';\"../../../../react-components/src\"\"../../../../acs-ui-common/src\""]}