/// <reference types="react" />
import { ParticipantMenuItemsCallback } from "../../../../react-components/src";
import { CallAdapter } from '../CallComposite';
import { ChatAdapter, ChatCompositeProps } from '../ChatComposite';
import { AvatarPersonaDataCallback } from '../common/AvatarPersona';
import { CallWithChatControlOptions } from './CallWithChatComposite';
/**
 * Pane that is used to store chat and people for CallWithChat composite
 * @private
 */
export declare const CallWithChatPane: (props: {
    chatCompositeProps: Partial<ChatCompositeProps>;
    callAdapter: CallAdapter;
    chatAdapter: ChatAdapter;
    onClose: () => void;
    onFetchAvatarPersonaData?: AvatarPersonaDataCallback;
    onFetchParticipantMenuItems?: ParticipantMenuItemsCallback;
    onChatButtonClicked?: () => void;
    onPeopleButtonClicked?: () => void;
    modalLayerHostId: string;
    activePane: CallWithChatPaneOption;
    mobileView?: boolean;
    inviteLink?: string;
    rtl?: boolean;
    callControls?: CallWithChatControlOptions;
}) => JSX.Element;
/**
 * Active tab option type for {@link CallWithChatPane} component
 * @private
 */
export declare type CallWithChatPaneOption = 'none' | 'chat' | 'people';
//# sourceMappingURL=CallWithChatPane.d.ts.map