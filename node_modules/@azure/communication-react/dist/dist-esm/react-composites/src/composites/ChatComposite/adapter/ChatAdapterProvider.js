// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import React, { createContext, useContext } from 'react';
const ChatAdapterContext = createContext(undefined);
/**
 * @private
 */
export const ChatAdapterProvider = (props) => {
    const { adapter } = props;
    return React.createElement(ChatAdapterContext.Provider, { value: adapter }, props.children);
};
/**
 * @private
 */
export const useAdapter = () => {
    const adapter = useContext(ChatAdapterContext);
    if (!adapter) {
        throw 'Cannot find adapter please initialize before usage.';
    }
    return adapter;
};
/**
 * @private
 */
export const useFileUploadAdapter = () => {
    // A stub that short-circuits all logic because none of the fields are available.
    return {
        registerActiveFileUploads() {
            return [];
        },
        registerCompletedFileUploads() {
            return [];
        },
        cancelFileUpload() {
            // noop
        },
        clearFileUploads() {
            // noop
        },
        updateFileUploadErrorMessage() {
            // noop
        },
        updateFileUploadProgress() {
            // noop
        },
        updateFileUploadMetadata() {
            // noop
        }
    };
};
//# sourceMappingURL=ChatAdapterProvider.js.map