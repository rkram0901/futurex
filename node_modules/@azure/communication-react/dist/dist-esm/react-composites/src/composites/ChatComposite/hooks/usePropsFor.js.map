{"version":3,"file":"usePropsFor.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/ChatComposite/hooks/usePropsFor.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,uDAAuD;AAEvD,OAAO,EAAE,eAAe,EAAiC,mDAA0C;AACnG,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAI1D;;GAEG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,CAAiD,SAAoB,EAAiK,EAAE;IACjQ,MAAM,QAAQ,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;IAC5C,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;KACjG;IACD,uCACK,kBAAkB,CAAE,QAAqB,CAAC,GAC1C,WAAW,CAAC,SAAS,CAAC,EACzB;AACJ,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { getChatSelector, ChatHandlers, GetChatSelector } from '@internal/chat-component-bindings';\nimport { useHandlers } from './useHandlers';\nimport { useAdaptedSelector } from './useAdaptedSelector';\nimport { Common } from '@internal/acs-ui-common';\ntype Selector = (state: any, props: any) => any;\n\n/**\n * @private\n */\nexport const usePropsFor = <Component extends (props: any) => JSX.Element,>(component: Component): GetChatSelector<Component> extends Selector ? ReturnType<GetChatSelector<Component>> & Common<ChatHandlers, Parameters<Component>[0]> : Record<string, never> => {\n  const selector = getChatSelector(component);\n  if (!selector) {\n    throw new Error(\"Can't find the selector for component, please check supported component list\");\n  }\n  return {\n    ...useAdaptedSelector((selector as Selector)),\n    ...useHandlers(component)\n  };\n};\"../../../../../chat-component-bindings/src\"\"../../../../../acs-ui-common/src\""]}