// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { _useContainerHeight, _useContainerWidth } from "../../../../react-components/src";
import { useMemo, useRef } from 'react';
import { MODAL_PIP_DEFAULT_PX } from './styles/ModalLocalAndRemotePIP.styles';
/**
 * @private
 */
// Use document.getElementById until Fluent's Stack supports componentRef property: https://github.com/microsoft/fluentui/issues/20410
export const useMinMaxDragPosition = (modalLayerHostId, rtl) => {
    const modalHostRef = useRef(document.getElementById(modalLayerHostId));
    const modalHostWidth = _useContainerWidth(modalHostRef);
    const modalHostHeight = _useContainerHeight(modalHostRef);
    const minDragPosition = useMemo(() => modalHostWidth === undefined ? undefined : {
        x: rtl ? -1 * MODAL_PIP_DEFAULT_PX.rightPositionPx : MODAL_PIP_DEFAULT_PX.rightPositionPx - modalHostWidth + MODAL_PIP_DEFAULT_PX.widthPx,
        y: -1 * MODAL_PIP_DEFAULT_PX.topPositionPx
    }, [modalHostWidth, rtl]);
    const maxDragPosition = useMemo(() => modalHostWidth === undefined || modalHostHeight === undefined ? undefined : {
        x: rtl ? modalHostWidth - MODAL_PIP_DEFAULT_PX.rightPositionPx - MODAL_PIP_DEFAULT_PX.widthPx : MODAL_PIP_DEFAULT_PX.rightPositionPx,
        y: modalHostHeight - MODAL_PIP_DEFAULT_PX.topPositionPx - MODAL_PIP_DEFAULT_PX.heightPx
    }, [modalHostHeight, modalHostWidth, rtl]);
    return {
        minDragPosition: minDragPosition,
        maxDragPosition: maxDragPosition
    };
};
//# sourceMappingURL=utils.js.map