{"version":3,"file":"CallWithChatAdapterState.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallWithChatComposite/state/CallWithChatAdapterState.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AA4DlC;;GAEG;AACH,MAAM,UAAU,yCAAyC,CAAC,WAAwB,EAAE,WAAwB;IAC1G,MAAM,gBAAgB,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;IAChD,MAAM,gBAAgB,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;IAChD,OAAO;QACL,IAAI,EAAE,gBAAgB,CAAC,IAAI;QAC3B,IAAI,EAAE,gBAAgB,CAAC,MAAM;QAC7B,MAAM,EAAE,gBAAgB,CAAC,MAAM;QAC/B,IAAI,EAAE,gBAAgB,CAAC,IAAI;QAC3B,WAAW,EAAE,gBAAgB,CAAC,WAAW;QACzC,OAAO,EAAE,gBAAgB,CAAC,OAAO;QACjC,+BAA+B,EAAE,gBAAgB,CAAC,+BAA+B;QACjF,WAAW,EAAE,gBAAgB,CAAC,WAAW;QACzC,gBAAgB,EAAE,gBAAgB,CAAC,YAAY;QAC/C,gBAAgB,EAAE,gBAAgB,CAAC,YAAY;KAChD,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,iDAAiD,CAAC,gCAA0D,EAAE,gBAAkC;IAC9J,uCACK,gCAAgC,KACnC,IAAI,EAAE,gBAAgB,CAAC,MAAM,EAC7B,gBAAgB,EAAE,gBAAgB,CAAC,YAAY,IAC/C;AACJ,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,iDAAiD,CAAC,gCAA0D,EAAE,gBAAkC;IAC9J,uCACK,gCAAgC,KACnC,MAAM,EAAE,gBAAgB,CAAC,MAAM,EAC/B,IAAI,EAAE,gBAAgB,CAAC,IAAI,EAC3B,WAAW,EAAE,gBAAgB,CAAC,WAAW,EACzC,OAAO,EAAE,gBAAgB,CAAC,OAAO,EACjC,IAAI,EAAE,gBAAgB,CAAC,IAAI,EAC3B,+BAA+B,EAAE,gBAAgB,CAAC,+BAA+B,EACjF,WAAW,EAAE,gBAAgB,CAAC,WAAW,EACzC,gBAAgB,EAAE,gBAAgB,CAAC,YAAY,IAC/C;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CommunicationIdentifierKind } from '@azure/communication-common';\nimport { CallState, DeviceManagerState } from '@internal/calling-stateful-client';\nimport { ChatThreadClientState } from '@internal/chat-stateful-client';\nimport { CallAdapter, CallAdapterState, CallCompositePage } from '../../CallComposite';\nimport { ChatAdapter, ChatAdapterState } from '../../ChatComposite';\nimport { AdapterErrors } from '../../common/adapters';\n/**\n * UI state pertaining to the {@link CallWithChatComposite}.\n *\n * @public\n */\nexport interface CallWithChatAdapterUiState {\n  /**\n   * Microphone state before a call has joined.\n   *\n   * @public\n   */\n  isLocalPreviewMicrophoneEnabled: boolean;\n  /**\n   * Current page of the Composite.\n   *\n   * @public\n   */\n  page: CallCompositePage;\n}\n\n/**\n * State from the backend services that drives {@link CallWithChatComposite}.\n *\n * @public\n */\nexport interface CallWithChatClientState {\n  /** ID of the call participant using this CallWithChatAdapter. */\n  userId: CommunicationIdentifierKind;\n  /** Display name of the participant using this CallWithChatAdapter. */\n  displayName: string | undefined;\n  /** State of the current call. */\n  call?: CallState;\n  /** State of the current chat. */\n  chat?: ChatThreadClientState;\n  /** Latest call error encountered for each operation performed via the adapter. */\n  latestCallErrors: AdapterErrors;\n  /** Latest chat error encountered for each operation performed via the adapter. */\n  latestChatErrors: AdapterErrors;\n  /** State of available and currently selected devices */\n  devices: DeviceManagerState;\n  /** State of whether the active call is a Teams interop call */\n  isTeamsCall: boolean;\n}\n\n/**\n * CallWithChat State is a combination of Stateful Chat and Stateful Calling clients with some\n * state specific to the CallWithChat Composite only.\n *\n * @public\n */\nexport interface CallWithChatAdapterState extends CallWithChatAdapterUiState, CallWithChatClientState {}\n\n/**\n * @private\n */\nexport function callWithChatAdapterStateFromBackingStates(callAdapter: CallAdapter, chatAdapter: ChatAdapter): CallWithChatAdapterState {\n  const callAdapterState = callAdapter.getState();\n  const chatAdapterState = chatAdapter.getState();\n  return {\n    call: callAdapterState.call,\n    chat: chatAdapterState.thread,\n    userId: callAdapterState.userId,\n    page: callAdapterState.page,\n    displayName: callAdapterState.displayName,\n    devices: callAdapterState.devices,\n    isLocalPreviewMicrophoneEnabled: callAdapterState.isLocalPreviewMicrophoneEnabled,\n    isTeamsCall: callAdapterState.isTeamsCall,\n    latestCallErrors: callAdapterState.latestErrors,\n    latestChatErrors: chatAdapterState.latestErrors\n  };\n}\n\n/**\n * @private\n */\nexport function mergeChatAdapterStateIntoCallWithChatAdapterState(existingCallWithChatAdapterState: CallWithChatAdapterState, chatAdapterState: ChatAdapterState): CallWithChatAdapterState {\n  return {\n    ...existingCallWithChatAdapterState,\n    chat: chatAdapterState.thread,\n    latestChatErrors: chatAdapterState.latestErrors\n  };\n}\n\n/**\n * @private\n */\nexport function mergeCallAdapterStateIntoCallWithChatAdapterState(existingCallWithChatAdapterState: CallWithChatAdapterState, callAdapterState: CallAdapterState): CallWithChatAdapterState {\n  return {\n    ...existingCallWithChatAdapterState,\n    userId: callAdapterState.userId,\n    page: callAdapterState.page,\n    displayName: callAdapterState.displayName,\n    devices: callAdapterState.devices,\n    call: callAdapterState.call,\n    isLocalPreviewMicrophoneEnabled: callAdapterState.isLocalPreviewMicrophoneEnabled,\n    isTeamsCall: callAdapterState.isTeamsCall,\n    latestCallErrors: callAdapterState.latestErrors\n  };\n}\"../../../../../calling-stateful-client/src\"\"../../../../../chat-stateful-client/src\""]}