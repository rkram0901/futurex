{"version":3,"file":"AzureCommunicationCallAdapter.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/adapter/AzureCommunicationCallAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { _isInCall, _isInLobbyOrConnecting } from '@internal/calling-component-bindings';\nimport { CallClientState, CallError, CallState, createStatefulCallClient, StatefulCallClient, StatefulDeviceManager, TeamsCall, TeamsCallAgent as BetaTeamsCallAgent } from '@internal/calling-stateful-client';\nimport { CallCommon } from '@internal/calling-stateful-client';\nimport { AudioOptions, CallAgent, GroupCallLocator, TeamsMeetingLinkLocator, LocalVideoStream as SDKLocalVideoStream, AudioDeviceInfo, VideoDeviceInfo, RemoteParticipant, PermissionConstraints, PropertyChangedEvent, StartCallOptions, VideoOptions, Call } from '@azure/communication-calling';\nimport { EventEmitter } from 'events';\nimport { CommonCallAdapter, CallEndedListener, CallIdChangedListener, CallAdapterState, DisplayNameChangedListener, IsMutedChangedListener, IsLocalScreenSharingActiveChangedListener, IsSpeakingChangedListener, ParticipantsJoinedListener, ParticipantsLeftListener, DiagnosticChangedEventListner, CallAdapterCallEndedEvent, CallAdapter } from './CallAdapter';\nimport { getCallCompositePage, IsCallEndedPage, isCameraOn, isValidIdentifier } from '../utils';\nimport { CreateVideoStreamViewResult, VideoStreamOptions } from '@internal/react-components';\nimport { toFlatCommunicationIdentifier, _toCommunicationIdentifier } from '@internal/acs-ui-common';\nimport { CommunicationTokenCredential, CommunicationUserIdentifier, isCommunicationUserIdentifier, isPhoneNumberIdentifier, UnknownIdentifier, PhoneNumberIdentifier, CommunicationIdentifier, MicrosoftTeamsUserIdentifier } from '@azure/communication-common';\nimport { ParticipantSubscriber } from './ParticipantSubcriber';\nimport { AdapterError } from '../../common/adapters';\nimport { DiagnosticsForwarder } from './DiagnosticsForwarder';\nimport { useEffect, useRef, useState } from 'react';\nimport { CallHandlersOf, createHandlers } from './createHandlers';\ntype CallTypeOf<AgentType extends CallAgent | BetaTeamsCallAgent> = AgentType extends CallAgent ? Call : TeamsCall;\n\n/** Context of call, which is a centralized context for all state updates */\nclass CallContext {\n  private emitter: EventEmitter = new EventEmitter();\n  private state: CallAdapterState;\n  private callId: string | undefined;\n  constructor(clientState: CallClientState, isTeamsCall: boolean, options?: {\n    maxListeners?: number;\n  }) {\n    this.state = {\n      isLocalPreviewMicrophoneEnabled: false,\n      userId: clientState.userId,\n      displayName: clientState.callAgent?.displayName,\n      devices: clientState.deviceManager,\n      call: undefined,\n      page: 'configuration',\n      latestErrors: clientState.latestErrors,\n      isTeamsCall\n    };\n    this.emitter.setMaxListeners(options?.maxListeners ?? 50);\n    this.bindPublicMethods();\n  }\n  private bindPublicMethods(): void {}\n  public onStateChange(handler: (_uiState: CallAdapterState) => void): void {\n    this.emitter.on('stateChanged', handler);\n  }\n  public offStateChange(handler: (_uiState: CallAdapterState) => void): void {\n    this.emitter.off('stateChanged', handler);\n  }\n  public setState(state: CallAdapterState): void {\n    this.state = state;\n    this.emitter.emit('stateChanged', this.state);\n  }\n  public getState(): CallAdapterState {\n    return this.state;\n  }\n  public setIsLocalMicrophoneEnabled(isLocalPreviewMicrophoneEnabled: boolean): void {\n    this.setState({\n      ...this.state,\n      isLocalPreviewMicrophoneEnabled\n    });\n  }\n\n  // This is the key to find current call object in client state\n  public setCurrentCallId(callId: string | undefined): void {\n    this.callId = callId;\n  }\n  public onCallEnded(handler: (callEndedData: CallAdapterCallEndedEvent) => void): void {\n    this.emitter.on('callEnded', handler);\n  }\n  public offCallEnded(handler: (callEndedData: CallAdapterCallEndedEvent) => void): void {\n    this.emitter.off('callEnded', handler);\n  }\n  public updateClientState(clientState: CallClientState): void {\n    let call = this.callId ? clientState.calls[this.callId] : undefined;\n    const latestEndedCall = clientState.callsEnded ? findLatestEndedCall(clientState.callsEnded) : undefined;\n    // As the state is transitioning to a new state, trigger appropriate callback events.\n    const oldPage = this.state.page;\n    const newPage = getCallCompositePage(call, latestEndedCall);\n    if (!IsCallEndedPage(oldPage) && IsCallEndedPage(newPage)) {\n      this.emitter.emit('callEnded', {\n        callId: this.callId\n      });\n      // Reset the callId to undefined as the call has ended.\n      this.setCurrentCallId(undefined);\n      // Make sure that the call is set to undefined in the state.\n      call = undefined;\n    }\n    if (this.state.page) {\n      this.setState({\n        ...this.state,\n        userId: clientState.userId,\n        displayName: clientState.callAgent?.displayName,\n        call,\n        page: newPage,\n        endedCall: latestEndedCall,\n        devices: clientState.deviceManager,\n        latestErrors: clientState.latestErrors\n      });\n    }\n  }\n}\nconst findLatestEndedCall = (calls: {\n  [key: string]: CallState;\n}): CallState | undefined => {\n  const callStates = Object.values(calls);\n  if (callStates.length === 0) {\n    return undefined;\n  }\n  let latestCall = callStates[0];\n  for (const call of callStates.slice(1)) {\n    if ((call.endTime?.getTime() ?? 0) > (latestCall.endTime?.getTime() ?? 0)) {\n      latestCall = call;\n    }\n  }\n  return latestCall;\n};\n\n/**\n * @private\n */\nexport class AzureCommunicationCallAdapter<AgentType extends CallAgent | BetaTeamsCallAgent = CallAgent> implements CommonCallAdapter {\n  private callClient: StatefulCallClient;\n  private callAgent: AgentType;\n  private deviceManager: StatefulDeviceManager;\n  private localStream: SDKLocalVideoStream | undefined;\n  private locator: CallAdapterLocator;\n  // Never use directly, even internally. Use `call` property instead.\n  private _call?: CallCommon;\n  private context: CallContext;\n  private diagnosticsForwarder?: DiagnosticsForwarder;\n  private handlers: CallHandlersOf<AgentType>;\n  private participantSubscribers = new Map<string, ParticipantSubscriber>();\n  private emitter: EventEmitter = new EventEmitter();\n  private onClientStateChange: (clientState: CallClientState) => void;\n  private get call(): CallCommon | undefined {\n    return this._call;\n  }\n  private set call(newCall: CallCommon | undefined) {\n    this.resetDiagnosticsForwarder(newCall);\n    this._call = newCall;\n  }\n  constructor(callClient: StatefulCallClient, locator: CallAdapterLocator, callAgent: AgentType, deviceManager: StatefulDeviceManager, options?: AzureCommunicationCallAdapterOptions) {\n    this.bindPublicMethods();\n    this.callClient = callClient;\n    this.callAgent = callAgent;\n    this.locator = locator;\n    this.deviceManager = deviceManager;\n    const isTeamsMeeting = ('meetingLink' in this.locator);\n    this.context = new CallContext(callClient.getState(), isTeamsMeeting, options);\n    this.context.onCallEnded(endCallData => this.emitter.emit('callEnded', endCallData));\n    const onStateChange = (clientState: CallClientState): void => {\n      // unsubscribe when the instance gets disposed\n      if (!this) {\n        callClient.offStateChange(onStateChange);\n        return;\n      }\n\n      // `updateClientState` searches for the current call from all the calls in the state using a cached `call.id`\n      // from the call object. `call.id` can change during a call. We must update the cached `call.id` before\n      // calling `updateClientState` so that we find the correct state object for the call even when `call.id`\n      // has changed.\n      // https://github.com/Azure/communication-ui-library/pull/1820\n      if (this.call?.id) {\n        this.context.setCurrentCallId(this.call.id);\n      }\n      this.context.updateClientState(clientState);\n    };\n    this.handlers = createHandlers(callClient, callAgent, deviceManager, undefined);\n    this.onClientStateChange = onStateChange;\n    this.subscribeDeviceManagerEvents();\n    this.callClient.onStateChange(onStateChange);\n  }\n\n  // TODO: update this to include the 'selectedCameraChanged' when calling adds it to the device manager\n  private subscribeDeviceManagerEvents(): void {\n    this.deviceManager.on('selectedMicrophoneChanged', () => {\n      this.emitter.emit('selectedMicrophoneChanged');\n    });\n    this.deviceManager.on('selectedSpeakerChanged', () => {\n      this.emitter.emit('selectedSpeakerChanged');\n    });\n  }\n  private bindPublicMethods(): void {\n    this.onStateChange.bind(this);\n    this.offStateChange.bind(this);\n    this.getState.bind(this);\n    this.dispose.bind(this);\n    this.joinCall.bind(this);\n    this.leaveCall.bind(this);\n    this.setCamera.bind(this);\n    this.setMicrophone.bind(this);\n    this.setSpeaker.bind(this);\n    this.askDevicePermission.bind(this);\n    this.queryCameras.bind(this);\n    this.queryMicrophones.bind(this);\n    this.querySpeakers.bind(this);\n    this.startCamera.bind(this);\n    this.stopCamera.bind(this);\n    this.mute.bind(this);\n    this.unmute.bind(this);\n    this.startCall.bind(this);\n    this.startScreenShare.bind(this);\n    this.stopScreenShare.bind(this);\n    this.removeParticipant.bind(this);\n    this.createStreamView.bind(this);\n    this.disposeStreamView.bind(this);\n    this.on.bind(this);\n    this.off.bind(this);\n    this.processNewCall.bind(this);\n  }\n  public dispose(): void {\n    this.resetDiagnosticsForwarder();\n    this.callClient.offStateChange(this.onClientStateChange);\n    this.callAgent.dispose();\n  }\n  public async queryCameras(): Promise<VideoDeviceInfo[]> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      return this.deviceManager.getCameras();\n    });\n  }\n  public async queryMicrophones(): Promise<AudioDeviceInfo[]> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      return this.deviceManager.getMicrophones();\n    });\n  }\n  public async querySpeakers(): Promise<AudioDeviceInfo[]> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      return this.deviceManager.isSpeakerSelectionAvailable ? this.deviceManager.getSpeakers() : [];\n    });\n  }\n  public async askDevicePermission(constrain: PermissionConstraints): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.deviceManager.askDevicePermission(constrain);\n    });\n  }\n  public joinCall(microphoneOn?: boolean): CallTypeOf<AgentType> | undefined {\n    if (_isInCall(this.getState().call?.state ?? 'None')) {\n      throw new Error('You are already in the call!');\n    }\n    return this.teeErrorToEventEmitter(() => {\n      const audioOptions: AudioOptions = {\n        muted: !(microphoneOn ?? this.getState().isLocalPreviewMicrophoneEnabled)\n      };\n      // TODO: find a way to expose stream to here\n      const videoOptions = {\n        localVideoStreams: this.localStream ? [this.localStream] : undefined\n      };\n      const call = this._joinCall(audioOptions, videoOptions);\n      this.processNewCall(call);\n      return call;\n    });\n  }\n  private _joinCall(audioOptions: AudioOptions, videoOptions: VideoOptions): CallTypeOf<AgentType> {\n    const isTeamsMeeting = ('meetingLink' in this.locator);\n    if (isTeamsMeeting) {\n      return (this.callAgent.join((this.locator as TeamsMeetingLinkLocator), {\n        audioOptions,\n        videoOptions\n      }) as CallTypeOf<AgentType>);\n    }\n    return (this.callAgent.join((this.locator as GroupCallLocator), {\n      audioOptions,\n      videoOptions\n    }) as CallTypeOf<AgentType>);\n  }\n  public async createStreamView(remoteUserId?: string, options?: VideoStreamOptions): Promise<void | CreateVideoStreamViewResult> {\n    if (remoteUserId === undefined) {\n      return await this.handlers.onCreateLocalStreamView(options);\n    } else {\n      return await this.handlers.onCreateRemoteStreamView(remoteUserId, options);\n    }\n  }\n  public async disposeStreamView(remoteUserId?: string): Promise<void> {\n    if (remoteUserId === undefined) {\n      await this.handlers.onDisposeLocalStreamView();\n    } else {\n      await this.handlers.onDisposeRemoteStreamView(remoteUserId);\n    }\n  }\n  public async leaveCall(forEveryone?: boolean): Promise<void> {\n    await this.handlers.onHangUp(forEveryone);\n    this.unsubscribeCallEvents();\n    this.handlers = createHandlers(this.callClient, this.callAgent, this.deviceManager, undefined);\n    // We set the adapter.call object to undefined immediately when a call is ended.\n    // We do not set the context.callId to undefined because it is a part of the immutable data flow loop.\n    this.call = undefined;\n    this.stopCamera();\n    this.mute();\n  }\n  public async setCamera(device: VideoDeviceInfo, options?: VideoStreamOptions): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.handlers.onSelectCamera(device, options);\n    });\n  }\n  public async setMicrophone(device: AudioDeviceInfo): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.handlers.onSelectMicrophone(device);\n    });\n  }\n  public async setSpeaker(device: AudioDeviceInfo): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      await this.handlers.onSelectSpeaker(device);\n    });\n  }\n  public async startCamera(options?: VideoStreamOptions): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      if (!isCameraOn(this.getState())) {\n        await this.handlers.onToggleCamera(options);\n      }\n    });\n  }\n  public async stopCamera(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      if (isCameraOn(this.getState())) {\n        await this.handlers.onToggleCamera();\n      }\n    });\n  }\n  public async mute(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      this.context.setIsLocalMicrophoneEnabled(false);\n      if (_isInCall(this.call?.state) && !this.call?.isMuted) {\n        await this.handlers.onToggleMicrophone();\n      }\n    });\n  }\n  public async unmute(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      this.context.setIsLocalMicrophoneEnabled(true);\n      if (_isInCall(this.call?.state) && this.call?.isMuted) {\n        await this.handlers.onToggleMicrophone();\n      }\n    });\n  }\n  public async startScreenShare(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      if (!this.call?.isScreenSharingOn) {\n        await this.handlers.onToggleScreenShare();\n      }\n    });\n  }\n  public async stopScreenShare(): Promise<void> {\n    return await this.asyncTeeErrorToEventEmitter(async () => {\n      if (this.call?.isScreenSharingOn) {\n        await this.handlers.onToggleScreenShare();\n      }\n    });\n  }\n  public startCall(participants: string[]\n  /* @conditional-compile-remove(PSTN-calls) */ | CommunicationIdentifier[], options?: StartCallOptions): CallTypeOf<AgentType> | undefined {\n    if (_isInCall(this.getState().call?.state ?? 'None')) {\n      throw new Error('You are already in the call.');\n    }\n    const idsToAdd = participants.map(participant => {\n      // FIXME: `onStartCall` does not allow a Teams user.\n      // Need some way to return an error if a Teams user is provided.\n      const backendId: CommunicationIdentifier = _toCommunicationIdentifier(participant);\n      if (isPhoneNumberIdentifier(backendId)) {\n        if (options?.alternateCallerId === undefined) {\n          throw new Error('Unable to start call, PSTN user present with no alternateCallerId.');\n        }\n        return (backendId as PhoneNumberIdentifier);\n      } else if (isCommunicationUserIdentifier(backendId)) {\n        return (backendId as CommunicationUserIdentifier);\n      }\n      return (backendId as UnknownIdentifier);\n    });\n    const call = (this.handlers.onStartCall(idsToAdd, options) as CallTypeOf<AgentType>);\n    if (!call) {\n      throw new Error('Unable to start call.');\n    }\n    this.processNewCall(call);\n    return call;\n  }\n  private processNewCall(call: CallCommon): void {\n    this.call = call;\n    this.context.setCurrentCallId(call.id);\n\n    // Resync state after callId is set\n    this.context.updateClientState(this.callClient.getState());\n    this.handlers = createHandlers(this.callClient, this.callAgent, this.deviceManager, this.call);\n    this.subscribeCallEvents();\n  }\n  public async removeParticipant(userId: string): Promise<void> {\n    let participant = userId;\n    this.handlers.onRemoveParticipant(participant);\n  }\n  public getState(): CallAdapterState {\n    return this.context.getState();\n  }\n  public onStateChange(handler: (state: CallAdapterState) => void): void {\n    this.context.onStateChange(handler);\n  }\n  public offStateChange(handler: (state: CallAdapterState) => void): void {\n    this.context.offStateChange(handler);\n  }\n  on(event: 'participantsJoined', listener: ParticipantsJoinedListener): void;\n  on(event: 'participantsLeft', listener: ParticipantsLeftListener): void;\n  on(event: 'isMutedChanged', listener: IsMutedChangedListener): void;\n  on(event: 'callIdChanged', listener: CallIdChangedListener): void;\n  on(event: 'isLocalScreenSharingActiveChanged', listener: IsLocalScreenSharingActiveChangedListener): void;\n  on(event: 'displayNameChanged', listener: DisplayNameChangedListener): void;\n  on(event: 'isSpeakingChanged', listener: IsSpeakingChangedListener): void;\n  on(event: 'callEnded', listener: CallEndedListener): void;\n  on(event: 'diagnosticChanged', listener: DiagnosticChangedEventListner): void;\n  on(event: 'selectedMicrophoneChanged', listener: PropertyChangedEvent): void;\n  on(event: 'selectedSpeakerChanged', listener: PropertyChangedEvent): void;\n  on(event: 'error', errorHandler: (e: AdapterError) => void): void;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public on(event: string, listener: (e: any) => void): void {\n    this.emitter.on(event, listener);\n  }\n  private subscribeCallEvents(): void {\n    this.call?.on('remoteParticipantsUpdated', this.onRemoteParticipantsUpdated.bind(this));\n    this.call?.on('isMutedChanged', this.isMyMutedChanged.bind(this));\n    this.call?.on('isScreenSharingOnChanged', this.isScreenSharingOnChanged.bind(this));\n    this.call?.on('idChanged', this.callIdChanged.bind(this));\n  }\n  private unsubscribeCallEvents(): void {\n    for (const subscriber of this.participantSubscribers.values()) {\n      subscriber.unsubscribeAll();\n    }\n    this.participantSubscribers.clear();\n    this.call?.off('remoteParticipantsUpdated', this.onRemoteParticipantsUpdated.bind(this));\n    this.call?.off('isMutedChanged', this.isMyMutedChanged.bind(this));\n    this.call?.off('isScreenSharingOnChanged', this.isScreenSharingOnChanged.bind(this));\n    this.call?.off('idChanged', this.callIdChanged.bind(this));\n  }\n  private isMyMutedChanged = (): void => {\n    this.emitter.emit('isMutedChanged', {\n      participantId: this.getState().userId,\n      isMuted: this.call?.isMuted\n    });\n  };\n  private onRemoteParticipantsUpdated({\n    added,\n    removed\n  }: {\n    added: RemoteParticipant[];\n    removed: RemoteParticipant[];\n  }): void {\n    if (added && added.length > 0) {\n      this.emitter.emit('participantsJoined', added);\n    }\n    if (removed && removed.length > 0) {\n      this.emitter.emit('participantsLeft', removed);\n    }\n    added.forEach(participant => {\n      this.participantSubscribers.set(toFlatCommunicationIdentifier(participant.identifier), new ParticipantSubscriber(participant, this.emitter));\n    });\n    removed.forEach(participant => {\n      const subscriber = this.participantSubscribers.get(toFlatCommunicationIdentifier(participant.identifier));\n      subscriber && subscriber.unsubscribeAll();\n      this.participantSubscribers.delete(toFlatCommunicationIdentifier(participant.identifier));\n    });\n  }\n  private isScreenSharingOnChanged(): void {\n    this.emitter.emit('isLocalScreenSharingActiveChanged', {\n      isScreenSharingOn: this.call?.isScreenSharingOn\n    });\n  }\n  private callIdChanged(): void {\n    this.call?.id && this.emitter.emit('callIdChanged', {\n      callId: this.call.id\n    });\n  }\n  private resetDiagnosticsForwarder(newCall?: CallCommon): void {\n    if (this.diagnosticsForwarder) {\n      this.diagnosticsForwarder.unsubscribe();\n    }\n    if (newCall) {\n      this.diagnosticsForwarder = new DiagnosticsForwarder(this.emitter, newCall);\n    }\n  }\n  off(event: 'participantsJoined', listener: ParticipantsJoinedListener): void;\n  off(event: 'participantsLeft', listener: ParticipantsLeftListener): void;\n  off(event: 'isMutedChanged', listener: IsMutedChangedListener): void;\n  off(event: 'callIdChanged', listener: CallIdChangedListener): void;\n  off(event: 'isLocalScreenSharingActiveChanged', listener: IsLocalScreenSharingActiveChangedListener): void;\n  off(event: 'displayNameChanged', listener: DisplayNameChangedListener): void;\n  off(event: 'isSpeakingChanged', listener: IsSpeakingChangedListener): void;\n  off(event: 'callEnded', listener: CallEndedListener): void;\n  off(event: 'diagnosticChanged', listener: DiagnosticChangedEventListner): void;\n  off(event: 'selectedMicrophoneChanged', listener: PropertyChangedEvent): void;\n  off(event: 'selectedSpeakerChanged', listener: PropertyChangedEvent): void;\n  off(event: 'error', errorHandler: (e: AdapterError) => void): void;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public off(event: string, listener: (e: any) => void): void {\n    this.emitter.off(event, listener);\n  }\n  private async asyncTeeErrorToEventEmitter<T>(f: () => Promise<T>): Promise<T> {\n    try {\n      return await f();\n    } catch (error) {\n      if (isCallError((error as Error))) {\n        this.emitter.emit('error', (error as AdapterError));\n      }\n      throw error;\n    }\n  }\n  private teeErrorToEventEmitter<T>(f: () => T): T {\n    try {\n      return f();\n    } catch (error) {\n      if (isCallError((error as Error))) {\n        this.emitter.emit('error', (error as AdapterError));\n      }\n      throw error;\n    }\n  }\n}\n/**\n * Locator used by {@link createAzureCommunicationCallAdapter} to locate the call to join\n *\n * @public\n */\nexport type CallAdapterLocator = TeamsMeetingLinkLocator | GroupCallLocator;\n\n/**\n * Optional parameters to create {@link AzureCommunicationCallAdapter}\n *\n * @beta\n */\nexport type AzureCommunicationCallAdapterOptions = {};\n\n/**\n * Arguments for creating the Azure Communication Services implementation of {@link CallAdapter}.\n *\n * Note: `displayName` can be a maximum of 256 characters.\n *\n * @public\n */\nexport type AzureCommunicationCallAdapterArgs = {\n  userId: CommunicationUserIdentifier;\n  displayName: string;\n  credential: CommunicationTokenCredential;\n  locator: CallAdapterLocator;\n};\n\n/**\n * Arguments for creating the Azure Communication Services implementation of {@link TeamsCallAdapter}.\n *\n * @beta\n */\nexport type TeamsCallAdapterArgs = {\n  userId: MicrosoftTeamsUserIdentifier;\n  credential: CommunicationTokenCredential;\n  locator: TeamsMeetingLinkLocator;\n};\n\n/**\n * Create a {@link CallAdapter} backed by Azure Communication Services.\n *\n * This is the default implementation of {@link CallAdapter} provided by this library.\n *\n * Note: `displayName` can be a maximum of 256 characters.\n *\n * @public\n */\nexport const createAzureCommunicationCallAdapter = async ({\n  userId,\n  displayName,\n  credential,\n  locator\n}: AzureCommunicationCallAdapterArgs): Promise<CallAdapter> => {\n  if (!isValidIdentifier(userId)) {\n    throw new Error('Invalid identifier. Please provide valid identifier object.');\n  }\n  const callClient = createStatefulCallClient({\n    userId\n  });\n  const callAgent = await callClient.createCallAgent(credential, {\n    displayName\n  });\n  const adapter = createAzureCommunicationCallAdapterFromClient(callClient, callAgent, locator);\n  return adapter;\n};\ntype PartialArgsType<Adapter> = Adapter extends CallAdapter ? Partial<AzureCommunicationCallAdapterArgs> : Partial<TeamsCallAdapterArgs>;\ntype AdapterOf<AdapterKind extends 'AzureCommunication' | 'Teams'> = AdapterKind extends 'AzureCommunication' ? CallAdapter : never;\n\n/**\n * @private\n */\nconst useAzureCommunicationCallAdapterGeneric = <AdapterKind extends 'AzureCommunication' | 'Teams', Adapter extends AdapterOf<AdapterKind>>(args: PartialArgsType<Adapter>, afterCreate?: (adapter: Adapter) => Promise<Adapter>, beforeDispose?: (adapter: Adapter) => Promise<void>, adapterKind: AdapterKind = ('AzureCommunication' as AdapterKind)): Adapter | undefined => {\n  const {\n    credential,\n    locator,\n    userId\n  } = args;\n  const displayName = 'displayName' in args ? args.displayName : undefined;\n  // State update needed to rerender the parent component when a new adapter is created.\n  const [adapter, setAdapter] = useState<Adapter | undefined>(undefined);\n  // Ref needed for cleanup to access the old adapter created asynchronously.\n  const adapterRef = useRef<Adapter | undefined>(undefined);\n  const afterCreateRef = useRef<((adapter: Adapter) => Promise<Adapter>) | undefined>(undefined);\n  const beforeDisposeRef = useRef<((adapter: Adapter) => Promise<void>) | undefined>(undefined);\n  // These refs are updated on *each* render, so that the latest values\n  // are used in the `useEffect` closures below.\n  // Using a Ref ensures that new values for the callbacks do not trigger the\n  // useEffect blocks, and a new adapter creation / distruction is not triggered.\n  afterCreateRef.current = afterCreate;\n  beforeDisposeRef.current = beforeDispose;\n  useEffect(() => {\n    if (!credential || !locator || !userId) {\n      return;\n    }\n    if (adapterKind === 'AzureCommunication' && !displayName) {\n      return;\n    }\n    (async () => {\n      if (adapterRef.current) {\n        // Dispose the old adapter when a new one is created.\n        //\n        // This clean up function uses `adapterRef` because `adapter` can not be added to the dependency array of\n        // this `useEffect` -- we do not want to trigger a new adapter creation because of the first adapter\n        // creation.\n        if (beforeDisposeRef.current) {\n          await beforeDisposeRef.current(adapterRef.current);\n        }\n        adapterRef.current.dispose();\n        adapterRef.current = undefined;\n      }\n      let newAdapter: Adapter | undefined = undefined;\n      if (adapterKind === 'AzureCommunication') {\n        // This is just the type check to ensure that displayName is defined.\n        if (!displayName) {\n          throw new Error('Unreachable code, displayName already checked above.');\n        }\n        newAdapter = (await createAzureCommunicationCallAdapter({\n          credential,\n          displayName: displayName,\n          locator,\n          userId: (userId as CommunicationUserIdentifier)\n        }) as Adapter);\n      } else if (adapterKind === 'Teams') {} else {\n        throw new Error('Unreachable code, unknown adapterKind');\n      }\n      if (!newAdapter) {\n        throw Error('Unreachable code! Get undefined adapter');\n      }\n      if (afterCreateRef.current) {\n        newAdapter = await afterCreateRef.current(newAdapter);\n      }\n      adapterRef.current = newAdapter;\n      setAdapter(newAdapter);\n    })();\n  },\n  // Explicitly list all arguments so that caller doesn't have to memoize the `args` object.\n  [adapterRef, afterCreateRef, beforeDisposeRef, credential, locator, adapterKind, userId, displayName]);\n\n  // Dispose any existing adapter when the component unmounts.\n  useEffect(() => {\n    return () => {\n      (async () => {\n        if (adapterRef.current) {\n          if (beforeDisposeRef.current) {\n            await beforeDisposeRef.current(adapterRef.current);\n          }\n          adapterRef.current.dispose();\n          adapterRef.current = undefined;\n        }\n      })();\n    };\n  }, []);\n  return adapter;\n};\n\n/**\n * A custom React hook to simplify the creation of {@link CallAdapter}.\n *\n * Similar to {@link createAzureCommunicationCallAdapter}, but takes care of asynchronous\n * creation of the adapter internally.\n *\n * Allows arguments to be undefined so that you can respect the rule-of-hooks and pass in arguments\n * as they are created. The adapter is only created when all arguments are defined.\n *\n * Note that you must memoize the arguments to avoid recreating adapter on each render.\n * See storybook for typical usage examples.\n *\n * @public\n */\nexport const useAzureCommunicationCallAdapter = (args: Partial<AzureCommunicationCallAdapterArgs>, afterCreate?: (adapter: CallAdapter) => Promise<CallAdapter>, beforeDispose?: (adapter: CallAdapter) => Promise<void>): CallAdapter | undefined => {\n  return useAzureCommunicationCallAdapterGeneric(args, afterCreate, beforeDispose, 'AzureCommunication');\n};\n/**\n * Create a {@link CallAdapter} using the provided {@link StatefulCallClient}.\n *\n * Useful if you want to keep a reference to {@link StatefulCallClient}.\n * Consider using {@link createAzureCommunicationCallAdapter} for a simpler API.\n *\n * @public\n */\nexport const createAzureCommunicationCallAdapterFromClient: (callClient: StatefulCallClient, callAgent: CallAgent, locator: CallAdapterLocator) => Promise<CallAdapter> = async (callClient: StatefulCallClient, callAgent: CallAgent, locator: CallAdapterLocator, options?): Promise<CallAdapter> => {\n  const deviceManager = (await callClient.getDeviceManager() as StatefulDeviceManager);\n  return new AzureCommunicationCallAdapter(callClient, locator, callAgent, deviceManager);\n};\nconst isCallError = (e: Error): e is CallError => {\n  return e['target'] !== undefined && e['innerError'] !== undefined;\n};\"../../../../../calling-component-bindings/src\"\"../../../../../calling-stateful-client/src\"\"../../../../../react-components/src\"\"../../../../../acs-ui-common/src\""]}