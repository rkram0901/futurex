{"version":3,"file":"dominantRemoteParticipantSelector.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/selectors/dominantRemoteParticipantSelector.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,2BAA2B,EAA2B,mCAAmC,EAAE,sDAA6C;AAEjJ,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,sBAAsB,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAC;AAEhF;;;;;GAKG;AACH,MAAM,CAAC,MAAM,iCAAiC,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,qBAAqB,EAAE,sBAAsB,CAAC,EAAE,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,EAAE;IACpK,MAAM,gBAAgB,GAAG,2BAA2B,CAAC,mBAAmB,CAAC,CAAC;IAC1E,MAAM,yBAAyB,GAAG,kBAAkB,IAAI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,6BAA6B,CAAC,kBAAkB,EAAE,gBAAgB,aAAhB,gBAAgB,cAAhB,gBAAgB,GAAI,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC3L,OAAO,yBAAyB,CAAC,CAAC,CAAC,mCAAmC,CAAC,gCAAgC,CAAC,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AACpK,CAAC,CAAC,CAAC;AACH,MAAM,6BAA6B,GAAG,CAAC,kBAEtC,EAAE,kBAA4B,EAE7B,EAAE;IACF,IAAI,2BAA2B,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAExD,sFAAsF;IACtF,wFAAwF;IACxF,MAAM,oBAAoB,GAAG,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC7D,IAAI,CAAC,2BAA2B,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;QAC/F,2BAA2B,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;KACvD;IACD,OAAO;QACL,2BAA2B,EAAE,kBAAkB,CAAC,2BAA2B,CAAC;KAC7E,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,gCAAgC,GAAG,CAAC,kBAA4C,EAA4B,EAAE;IAClH,OAAO,kBAAkB,CAAC;AAC5B,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { _dominantSpeakersWithFlatId, _isInCall, _isPreviewOn, _videoGalleryRemoteParticipantsMemo } from '@internal/calling-component-bindings';\nimport { RemoteParticipantState } from '@internal/calling-stateful-client';\nimport * as reselect from 'reselect';\nimport { getDominantSpeakerInfo, getRemoteParticipants } from './baseSelectors';\n\n/**\n * Get the most dominant remote participant, if no dominant speaker IDs exist, this uses\n * one of the remote participants with no bias towards which one.\n *\n * @private\n */\nexport const dominantRemoteParticipantSelector = reselect.createSelector([getRemoteParticipants, getDominantSpeakerInfo], (remoteParticipants, dominantSpeakerInfo) => {\n  const dominantSpeakers = _dominantSpeakersWithFlatId(dominantSpeakerInfo);\n  const dominantRemoteParticipant = remoteParticipants && Object.keys(remoteParticipants).length > 0 ? findDominantRemoteParticipant(remoteParticipants, dominantSpeakers ?? []) : undefined;\n  return dominantRemoteParticipant ? _videoGalleryRemoteParticipantsMemo(updateUserDisplayNamesTrampoline(Object.values(dominantRemoteParticipant)))[0] : undefined;\n});\nconst findDominantRemoteParticipant = (remoteParticipants: {\n  [keys: string]: RemoteParticipantState;\n}, dominantSpeakerIds: string[]): {\n  dominantRemoteParticipantId: RemoteParticipantState;\n} => {\n  let dominantRemoteParticipantId = dominantSpeakerIds[0];\n\n  // Fallback to using the first remote participant if there are no dominant speaker IDs\n  // or if the dominant speaker is no longer available in the list of remoteParticipantIds\n  const remoteParticipantIds = Object.keys(remoteParticipants);\n  if (!dominantRemoteParticipantId || !remoteParticipantIds.includes(dominantRemoteParticipantId)) {\n    dominantRemoteParticipantId = remoteParticipantIds[0];\n  }\n  return {\n    dominantRemoteParticipantId: remoteParticipants[dominantRemoteParticipantId]\n  };\n};\nconst updateUserDisplayNamesTrampoline = (remoteParticipants: RemoteParticipantState[]): RemoteParticipantState[] => {\n  return remoteParticipants;\n};\"../../../../../calling-component-bindings/src\"\"../../../../../calling-stateful-client/src\""]}