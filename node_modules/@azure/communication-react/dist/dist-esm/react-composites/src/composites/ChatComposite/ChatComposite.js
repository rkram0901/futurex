// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import React from 'react';
import { BaseProvider } from '../common/BaseComposite';
import { ChatAdapterProvider } from './adapter/ChatAdapterProvider';
import { chatScreenContainerStyle } from './styles/Chat.styles';
import { ChatScreen } from './ChatScreen';
/**
 * A customizable UI composite for the chat experience.
 *
 * @remarks Chat composite min width and height are respectively 17.5rem and 20rem (280px and 320px, with default rem at 16px)
 *
 * @public
 */
export const ChatComposite = (props) => {
    const { adapter, options, onFetchAvatarPersonaData, onRenderTypingIndicator, onRenderMessage, onFetchParticipantMenuItems } = props;
    const formFactor = props['formFactor'] || 'desktop';
    /**
     * @TODO Remove this function and pass the props directly when file-sharing is promoted to stable.
     * @private
     */
    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
    const fileSharingOptions = () => {
        return {};
    };
    return React.createElement("div", { className: chatScreenContainerStyle },
        React.createElement(BaseProvider, Object.assign({}, props),
            React.createElement(ChatAdapterProvider, { adapter: adapter },
                React.createElement(ChatScreen, Object.assign({ formFactor: formFactor, options: options, onFetchAvatarPersonaData: onFetchAvatarPersonaData, onRenderTypingIndicator: onRenderTypingIndicator, onRenderMessage: onRenderMessage, onFetchParticipantMenuItems: onFetchParticipantMenuItems }, fileSharingOptions())))));
};
//# sourceMappingURL=ChatComposite.js.map