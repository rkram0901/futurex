{"version":3,"file":"Buttons.styles.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/styles/Buttons.styles.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,eAAe,EAAoD,MAAM,iBAAiB,CAAC;AAEpG,MAAM,+BAA+B,GAAG,CAAC,CAAC;AAE1C,eAAe;AACf,MAAM,CAAC,MAAM,yBAAyB,GAAW;IAC/C,UAAU,EAAE,SAAS;IACrB,aAAa,EAAE,SAAS;IACxB,4HAA4H;IAC5H,SAAS,EAAE;;;GAGV;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAAG;IACvC,IAAI,EAAE;QACJ,MAAM,EAAE,UAAU;QAClB,YAAY,EAAE,CAAC;QACf,MAAM,EAAE,WAAW;QACnB,KAAK,EAAE,WAAW;KACnB;IACD,aAAa,EAAE;QACb,QAAQ,EAAE,KAAK;KAChB;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,mCAAmC,GAAG;IACjD,IAAI,EAAE;QACJ,MAAM,EAAE,GAAG;QACX,YAAY,EAAE,QAAQ;KACvB;IACD,aAAa,EAAE;QACb,QAAQ,EAAE,KAAK;KAChB;CACF,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,MAAM,+BAA+B,GAA8B;IACxE,IAAI,EAAE;QACJ,MAAM,EAAE,GAAG,+BAA+B,KAAK;QAC/C,UAAU,EAAE,GAAG,+BAA+B,KAAK;QACnD,SAAS,EAAE,OAAO;KACnB;IACD,WAAW,EAAE;QACX,MAAM,EAAE,GAAG,+BAA+B,KAAK;QAC/C,UAAU,EAAE,GAAG,+BAA+B,KAAK;QACnD,SAAS,EAAE,OAAO;KACnB;IACD,IAAI,EAAE;QACJ,SAAS,EAAE,OAAO;QAClB,SAAS,EAAE,QAAQ;KACpB;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,0CAA0C,GAA6B;IAClF,UAAU,EAAE;QACV,cAAc,EAAE,+BAA+B;QAC/C,qBAAqB,EAAE;YACrB,qBAAqB,EAAE;gBACrB,IAAI,EAAE;oBACJ,MAAM,EAAE,GAAG,+BAA+B,KAAK;iBAChD;gBACD,6BAA6B,EAAE,+BAA+B;aAC/D;SACF;KACF;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,sCAAsC,GAAwB;IACzE,UAAU,EAAE;QACV,cAAc,EAAE,+BAA+B;KAChD;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAkB;IACnD,KAAK,EAAE;QACL,QAAQ,EAAE,SAAS;KACpB;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,GAAG,MAAuB,EAAiB,EAAE;IAClF,IAAI,MAAM,GAAG,sBAAsB,CAAC;IACpC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACrB,MAAM,GAAG,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { concatStyleSets, IButtonStyles, IContextualMenuItemStyles, IStyle } from '@fluentui/react';\nimport { DevicesButtonStyles, ParticipantsButtonStyles } from '@internal/react-components';\nconst MINIMUM_TOUCH_TARGET_HEIGHT_REM = 3;\n\n/** @private */\nexport const controlBarContainerStyles: IStyle = {\n  paddingTop: '0.25rem',\n  paddingBottom: '0.25rem',\n  // @TODO: this should be exposed through a custom CallComposite Theme API that extends the fluent theme with semantic values\n  boxShadow: `\n    0px 6.400000095367432px 14.399999618530273px 0px #00000021;\n    0px 1.2000000476837158px 3.5999999046325684px 0px #0000001A;\n  `\n};\n\n/**\n * @private\n */\nexport const groupCallLeaveButtonStyle = {\n  root: {\n    border: '0.125rem',\n    borderRadius: 2,\n    height: '2.1875rem',\n    width: '6.5625rem'\n  },\n  flexContainer: {\n    flexFlow: 'row'\n  }\n};\n\n/**\n * @private\n */\nexport const groupCallLeaveButtonCompressedStyle = {\n  root: {\n    border: '0',\n    borderRadius: '0.5rem'\n  },\n  flexContainer: {\n    flexFlow: 'row'\n  }\n};\n\n/**\n * Styles that can be applied to ensure flyout items have the minimum touch target size.\n *\n * @private\n */\nexport const buttonFlyoutIncreasedSizeStyles: IContextualMenuItemStyles = {\n  root: {\n    height: `${MINIMUM_TOUCH_TARGET_HEIGHT_REM}rem`,\n    lineHeight: `${MINIMUM_TOUCH_TARGET_HEIGHT_REM}rem`,\n    maxHeight: 'unset'\n  },\n  linkContent: {\n    height: `${MINIMUM_TOUCH_TARGET_HEIGHT_REM}rem`,\n    lineHeight: `${MINIMUM_TOUCH_TARGET_HEIGHT_REM}rem`,\n    maxHeight: 'unset'\n  },\n  icon: {\n    maxHeight: 'unset',\n    textAlign: 'center'\n  }\n};\n\n/**\n * @private\n */\nexport const participantButtonWithIncreasedTouchTargets: ParticipantsButtonStyles = {\n  menuStyles: {\n    menuItemStyles: buttonFlyoutIncreasedSizeStyles,\n    participantListStyles: {\n      participantItemStyles: {\n        root: {\n          height: `${MINIMUM_TOUCH_TARGET_HEIGHT_REM}rem`\n        },\n        participantSubMenuItemsStyles: buttonFlyoutIncreasedSizeStyles\n      }\n    }\n  }\n};\n\n/**\n * @private\n */\nexport const devicesButtonWithIncreasedTouchTargets: DevicesButtonStyles = {\n  menuStyles: {\n    menuItemStyles: buttonFlyoutIncreasedSizeStyles\n  }\n};\n\n/**\n * @private\n */\nexport const controlButtonBaseStyle: IButtonStyles = {\n  label: {\n    minWidth: '2.25rem'\n  }\n};\n\n/**\n * @private\n */\nexport const concatButtonBaseStyles = (...styles: IButtonStyles[]): IButtonStyles => {\n  let result = controlButtonBaseStyle;\n  styles.forEach(style => {\n    result = concatStyleSets(result, style);\n  });\n  return result;\n};\"../../../../../react-components/src\""]}