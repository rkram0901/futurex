/// <reference types="react" />
import { OnRenderAvatarCallback } from "../../../../../react-components/src";
import { AvatarPersonaDataCallback } from '../../common/AvatarPersona';
/**
 * @private
 */
export interface MediaGalleryProps {
    isVideoStreamOn?: boolean;
    isMicrophoneChecked?: boolean;
    onStartLocalVideo: () => Promise<void>;
    onRenderAvatar?: OnRenderAvatarCallback;
    onFetchAvatarPersonaData?: AvatarPersonaDataCallback;
    isMobile?: boolean;
    drawerMenuHostId?: string;
}
/**
 * @private
 */
export declare const MediaGallery: (props: MediaGalleryProps) => JSX.Element;
/**
 * @private
 *
 * `shouldTransition` is an extra predicate that controls whether this hooks actually transitions the call.
 * The rule of hooks disallows calling the hook conditionally, so this predicate can be used to make the decision.
 */
export declare const useLocalVideoStartTrigger: (isLocalVideoAvailable: boolean, shouldTransition?: boolean | undefined) => void;
//# sourceMappingURL=MediaGallery.d.ts.map