import * as reselect from 'reselect';
/**
 * Picture in picture in picture needs to display the most-dominant remote speaker, as well as the local participant video.
 * @private
 */
export declare const localAndRemotePIPSelector: reselect.OutputSelector<import("..").CallAdapterState, {
    localParticipant: {
        displayName: string | undefined;
        videoStream: {
            isAvailable: boolean;
            isMirrored: boolean | undefined;
            renderElement: HTMLElement | undefined;
        };
    };
    dominantRemoteParticipant: import("../../../../../react-components/src").VideoGalleryRemoteParticipant | undefined;
}, (res1: string | undefined, res2: import("../../../../../react-components/src").VideoGalleryRemoteParticipant | undefined, res3: {
    isAvailable: boolean;
    isMirrored: boolean | undefined;
    renderElement: HTMLElement | undefined;
}) => {
    localParticipant: {
        displayName: string | undefined;
        videoStream: {
            isAvailable: boolean;
            isMirrored: boolean | undefined;
            renderElement: HTMLElement | undefined;
        };
    };
    dominantRemoteParticipant: import("../../../../../react-components/src").VideoGalleryRemoteParticipant | undefined;
}>;
//# sourceMappingURL=localAndRemotePIPSelector.d.ts.map