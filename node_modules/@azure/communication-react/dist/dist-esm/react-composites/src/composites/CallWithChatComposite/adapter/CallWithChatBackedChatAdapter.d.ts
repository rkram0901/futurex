import { CallWithChatAdapter } from './CallWithChatAdapter';
import { ChatAdapter, ChatAdapterState } from '../../ChatComposite';
import { ErrorBarStrings } from "../../../../../react-components/src";
/**
 * Facade around the CallWithChatAdapter to satisfy the chat adapter interface.
 *
 * @private
 */
export declare class CallWithChatBackedChatAdapter implements ChatAdapter {
    private callWithChatAdapter;
    private eventStore;
    constructor(callWithChatAdapter: CallWithChatAdapter);
    fetchInitialData: () => Promise<void>;
    sendMessage: (content: string) => Promise<void>;
    sendReadReceipt: (chatMessageId: string) => Promise<void>;
    sendTypingIndicator: () => Promise<void>;
    removeParticipant: (userId: string) => Promise<void>;
    loadPreviousChatMessages: (messagesToLoad: number) => Promise<boolean>;
    dispose: () => void;
    onStateChange: (handler: (state: ChatAdapterState) => void) => void;
    offStateChange: (handler: (state: ChatAdapterState) => void) => void;
    getState: () => ChatAdapterState;
    on: (event: any, listener: any) => void;
    off: (event: any, listener: any) => void;
    updateMessage: (messageId: string, content: string, metadata?: Record<string, string> | undefined) => Promise<void>;
    deleteMessage: (messageId: string) => Promise<void>;
    clearErrors: (errorTypes: (keyof ErrorBarStrings)[]) => void;
    setTopic: (topicName: string) => Promise<void>;
}
//# sourceMappingURL=CallWithChatBackedChatAdapter.d.ts.map