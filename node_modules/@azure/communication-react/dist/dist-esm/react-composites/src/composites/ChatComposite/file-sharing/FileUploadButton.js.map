{"version":3,"file":"FileUploadButton.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/ChatComposite/file-sharing/FileUploadButton.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAClC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3E,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AA0BvD;;GAEG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,KAA4B,EAAe,EAAE;IAC5E,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAmB,IAAI,CAAC,CAAC;IACtD,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;IACzB,MAAM,EACJ,MAAM,EACN,QAAQ,GAAG,KAAK,EAChB,QAAQ,EACT,GAAG,KAAK,CAAC;IACV,MAAM,yBAAyB,GAAG,WAAW,CAAC;QAC5C,KAAK,EAAE,QAAQ;QACf,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE;YACR,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;SAC9C;KACF,CAAC,CAAC;IACH,MAAM,mBAAmB,GAAG,WAAW,CAAC;QACtC,KAAK,EAAE,OAAO;QACd,KAAK,EAAE,QAAQ;QACf,MAAM,EAAE,QAAQ;QAChB,QAAQ,EAAE;YACR,KAAK,EAAE,OAAO;YACd,UAAU,EAAE,aAAa;SAC1B;KACF,CAAC,CAAC;IACH,OAAO;QACH,oBAAC,KAAK,IAAC,aAAa,EAAC,QAAQ,EAAC,eAAe,EAAC,QAAQ,EAAC,SAAS,EAAE,yBAAyB,EAAE,OAAO,EAAE,GAAG,EAAE;;gBAC3G,MAAA,QAAQ,CAAC,OAAO,0CAAE,KAAK,EAAE,CAAC;YAC5B,CAAC;YACG,oBAAC,UAAU,IAAC,SAAS,EAAE,mBAAmB,EAAE,SAAS,EAAE,gCAAgC,EAAE;gBACvF,oBAAC,+BAA+B,OAAG,CACxB,CACP;QACR,+BAAO,GAAG,EAAE,QAAQ,EAAE,MAAM,QAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC,MAAM,EAAC,OAAO,EAAE,CAAC,CAAC,EAAE;gBAC1F,4EAA4E;gBAC5E,CAAC,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;YAC7B,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE;gBACf,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC9C,CAAC,GAAI,CACF,CAAC;AACR,CAAC,CAAC;AACF,MAAM,+BAA+B,GAAG,GAAgB,EAAE;IACxD,+DAA+D;IAC/D,OAAO,oBAAC,iBAAiB,IAAC,QAAQ,EAAC,eAAe,GAAG,CAAC;AACxD,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,KAAsE,EAAe,EAAE;IAC7H,OAAO,yCAEF,CAAC;AACR,CAAC,CAAC;AACF,MAAM,gCAAgC,GAAG,GAAW,EAAE;IACpD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { IconButton, mergeStyles, Stack, useTheme } from '@fluentui/react';\nimport React from 'react';\nimport { ChatCompositeIcon } from '../../common/icons';\n/**\n * Props for {@link FileUploadButton} component.\n * @internal\n */\nexport interface FileUploadButtonProps {\n  /**\n   * A string containing the comma separated list of accepted file types.\n   * Similar to the `accept` attribute of the `<input type=\"file\" />` element.\n   */\n  accept?: string;\n  /**\n   * Allows multiple files to be selected if set to `true`.\n   * Default value is `false`.\n   * Similar to the `multiple` attribute of the `<input type=\"file\" />` element.\n   */\n  multiple?: boolean;\n  /**\n   * onChange handler for the file upload button.\n   * Similar to the `onChange` attribute of the `<input type=\"file\" />` element.\n   * Called every time files are selected through the file upload button with a {@link FileList}\n   * of selected files.\n   */\n  onChange?: (files: FileList | null) => void;\n}\n\n/**\n * @internal\n */\nexport const FileUploadButton = (props: FileUploadButtonProps): JSX.Element => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const theme = useTheme();\n  const {\n    accept,\n    multiple = false,\n    onChange\n  } = props;\n  const fileUploadButtonClassName = mergeStyles({\n    width: '1.5rem',\n    height: '1.5rem',\n    cursor: 'pointer',\n    padding: '0.15rem',\n    ':hover': {\n      backgroundColor: theme.palette.neutralLighter\n    }\n  });\n  const iconButtonClassName = mergeStyles({\n    color: 'unset',\n    width: '1.5rem',\n    height: '1.5rem',\n    ':hover': {\n      color: 'unset',\n      background: 'transparent'\n    }\n  });\n  return <>\n      <Stack verticalAlign=\"center\" horizontalAlign=\"center\" className={fileUploadButtonClassName} onClick={() => {\n      inputRef.current?.click();\n    }}>\n        <IconButton className={iconButtonClassName} ariaLabel={uploadFileButtonStringTrampoline()}>\n          <SendBoxAttachFileIconTrampoline />\n        </IconButton>\n      </Stack>\n      <input ref={inputRef} hidden multiple={multiple} accept={accept} type=\"file\" onClick={e => {\n      // To ensure that `onChange` is fired even if the same file is picked again.\n      e.currentTarget.value = '';\n    }} onChange={e => {\n      onChange && onChange(e.currentTarget.files);\n    }} />\n    </>;\n};\nconst SendBoxAttachFileIconTrampoline = (): JSX.Element => {\n  // Return _some_ available icon, as the real icon is beta-only.\n  return <ChatCompositeIcon iconName=\"EditBoxCancel\" />;\n};\n\n/**\n * A wrapper to return {@link FileUploadButton} component conditionally.\n * It will return `<></>` for stable builds.\n * @internal\n */\nexport const FileUploadButtonWrapper = (props: Pick<FileUploadButtonProps, 'accept' | 'multiple' | 'onChange'>): JSX.Element => {\n  return <>\n      {}\n    </>;\n};\nconst uploadFileButtonStringTrampoline = (): string => {\n  return '';\n};"]}