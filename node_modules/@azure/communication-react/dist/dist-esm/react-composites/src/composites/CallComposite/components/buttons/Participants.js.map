{"version":3,"file":"Participants.js","sourceRoot":"","sources":["../../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/components/buttons/Participants.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAwD,kBAAkB,EAAE,+CAAmC;AACtH,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AAEtD,OAAO,EAAE,sBAAsB,EAAE,0CAA0C,EAAE,MAAM,6BAA6B,CAAC;AAEjH,eAAe;AACf,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,KAY5B,EAAe,EAAE;IAChB,MAAM,uBAAuB,GAAG,WAAW,CAAC,kBAAkB,CAAC,CAAC;IAChE,MAAM,wBAAwB,GAAG,OAAO,CAAC,GAAG,EAAE,WAAC,OAAA,sBAAsB,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC,EAAE,EAAE,MAAA,KAAK,CAAC,MAAM,mCAAI,EAAE,CAAC,CAAA,EAAA,EAAE,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACzN,OAAO,oBAAC,kBAAkB,gCAAY,oCAAoC,IAAK,uBAAuB,IAAE,SAAS,EAAE,KAAK,CAAC,WAAW,KAAK,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,iBAAiB,EAAE,2BAA2B,EAAE,KAAK,CAAC,2BAA2B,EAAE,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,wBAAwB,EAAE,8BAA8B,EAAE,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC;AAC9Y,CAAC,CAAC;AACF,MAAM,UAAU,GAAG,CAAC,MAEnB,EAAW,EAAE;IACZ,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,EAAE;QAC/D,OAAO,KAAK,CAAC;KACd;IACD,OAAO,MAAM,CAAC,QAAQ,CAAC;AACzB,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ControlBarButtonStyles, ParticipantMenuItemsCallback, ParticipantsButton } from '@internal/react-components';\nimport React, { useMemo } from 'react';\nimport { usePropsFor } from '../../hooks/usePropsFor';\nimport { CallControlDisplayType } from '../../types/CallControlOptions';\nimport { concatButtonBaseStyles, participantButtonWithIncreasedTouchTargets } from '../../styles/Buttons.styles';\n\n/** @private */\nexport const Participants = (props: {\n  // The value of `CallControlOptions.participantsButton`.\n  option?: boolean | {\n    disabled: boolean;\n  };\n  callInvitationURL?: string;\n  onFetchParticipantMenuItems?: ParticipantMenuItemsCallback;\n  displayType?: CallControlDisplayType;\n  increaseFlyoutItemSize?: boolean;\n  styles?: ControlBarButtonStyles;\n  isMobile?: boolean;\n  disabled?: boolean;\n}): JSX.Element => {\n  const participantsButtonProps = usePropsFor(ParticipantsButton);\n  const participantsButtonStyles = useMemo(() => concatButtonBaseStyles(props.increaseFlyoutItemSize ? participantButtonWithIncreasedTouchTargets : {}, props.styles ?? {}), [props.increaseFlyoutItemSize, props.styles]);\n  return <ParticipantsButton data-ui-id=\"call-composite-participants-button\" {...participantsButtonProps} showLabel={props.displayType !== 'compact'} callInvitationURL={props.callInvitationURL} onFetchParticipantMenuItems={props.onFetchParticipantMenuItems} disabled={isDisabled(props.option) || props.disabled} styles={participantsButtonStyles} showParticipantOverflowTooltip={!props.isMobile} />;\n};\nconst isDisabled = (option?: boolean | {\n  disabled: boolean;\n}): boolean => {\n  if (option === undefined || option === true || option === false) {\n    return false;\n  }\n  return option.disabled;\n};\"../../../../../../react-components/src\""]}