{"version":3,"file":"localPreviewSelector.js","sourceRoot":"","sources":["../../../../../../../preprocess-dist/react-composites/src/composites/CallComposite/selectors/localPreviewSelector.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD;;GAEG;AACH,MAAM,CAAC,MAAM,oBAAoB,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,EAAE,aAAa,CAAC,EAAE;IAC9F,iHAAiH;IACjH,gFAAgF;IAChF,MAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;QAC7C,6EAA6E;QAC7E,aAAa,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAClF,OAAO;QACL,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;KAC9C,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as reselect from 'reselect';\nimport { getDeviceManager } from './baseSelectors';\n\n/**\r\n * @private\r\n */\nexport const localPreviewSelector = reselect.createSelector([getDeviceManager], deviceManager => {\n  // TODO: we should take in a LocalVideoStream that developer wants to use as their 'Preview' view. We should also\n  // handle cases where 'Preview' view is in progress and not necessary completed.\n  const view = deviceManager.cameras.length > 0 &&\n  // This ensures that the video stream is reset if camera devices are removed.\n  deviceManager.unparentedViews.length > 0 && deviceManager.unparentedViews[0].view;\n  return {\n    videoStreamElement: view ? view.target : null\n  };\n});"]}