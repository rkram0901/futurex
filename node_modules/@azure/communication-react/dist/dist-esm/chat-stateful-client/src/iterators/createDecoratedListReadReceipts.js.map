{"version":3,"file":"createDecoratedListReadReceipts.js","sourceRoot":"","sources":["../../../../../preprocess-dist/chat-stateful-client/src/iterators/createDecoratedListReadReceipts.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EAAE,uBAAuB,EAAE,2BAA2B,EAAE,MAAM,2BAA2B,CAAC;AAGjG;;GAEG;AACH,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAAC,gBAAkC,EAAE,OAAoB,EAA+G,EAAE;IACvN,MAAM,cAAc,GAAG,CAAC,WAAmC,EAAE,OAAoB,EAAQ,EAAE;QACzF,OAAO,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,oBAC3C,WAAW,EACd,CAAC;IACL,CAAC,CAAC;IACF,OAAO,uBAAuB,CAAC,2BAA2B,CAAC,OAAO,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,mCAAmC,CAAC,EAAE,OAAO,EAAE,mCAAmC,CAAC,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;AAClQ,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ChatThreadClient, ChatMessageReadReceipt, RestListReadReceiptsOptions } from '@azure/communication-chat';\nimport { ChatContext } from '../ChatContext';\nimport { createDecoratedIterator, createErrorHandlingIterator } from './createDecoratedIterator';\nimport { PagedAsyncIterableIterator } from '@azure/core-paging';\n\n/**\n * @private\n */\nexport const createDecoratedListReadReceipts = (chatThreadClient: ChatThreadClient, context: ChatContext): ((options?: RestListReadReceiptsOptions | undefined) => PagedAsyncIterableIterator<ChatMessageReadReceipt>) => {\n  const setReadReceipt = (readReceipt: ChatMessageReadReceipt, context: ChatContext): void => {\n    context.addReadReceipt(chatThreadClient.threadId, {\n      ...readReceipt\n    });\n  };\n  return createDecoratedIterator(createErrorHandlingIterator(context.withErrorTeedToState(chatThreadClient.listReadReceipts.bind(chatThreadClient), 'ChatThreadClient.listReadReceipts'), context, 'ChatThreadClient.listReadReceipts'), context, setReadReceipt);\n};"]}