{"version":3,"file":"areEqual.js","sourceRoot":"","sources":["../../../../preprocess-dist/acs-ui-common/src/areEqual.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Compare if two types are equal, result type will be true/false\n *\n * @public\n */\nexport type AreTypeEqual<A, B> = A extends B ? (B extends A ? true : false) : false;\n\n/**\n * Compare if props of 2 react components are equal, result type will be true/false\n *\n * @public\n */\nexport type AreParamEqual<A extends (props: any) => JSX.Element | undefined, B extends (props: any) => JSX.Element | undefined> = AreTypeEqual<Required<Parameters<A>[0]>, Required<Parameters<B>[0]>>;\n\n/**\n * Compare if 2 react components are exact equal, result type will be true/false\n *\n * @public\n */\nexport type AreEqual<A extends (props: any) => JSX.Element | undefined, B extends (props: any) => JSX.Element | undefined> = true extends AreTypeEqual<A, B> & AreParamEqual<A, B> ? true : false;"]}