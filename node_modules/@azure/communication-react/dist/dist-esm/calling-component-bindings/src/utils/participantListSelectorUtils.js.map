{"version":3,"file":"participantListSelectorUtils.js","sourceRoot":"","sources":["../../../../../preprocess-dist/calling-component-bindings/src/utils/participantListSelectorUtils.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAChE,OAAO,EAAE,+BAA+B,EAAE,YAAY,EAAE,mCAAgC;AAExF;;GAEG;AACH,MAAM,CAAC,MAAM,oCAAoC,GAAG,YAAY,CAAC,CAAC,MAAc,EAAE,WAA+B,EAAE,KAA6B,EAAE,OAAgB,EAAE,eAAwB,EAAE,UAAmB,EAAkC,EAAE;IACnP,OAAO,oDAAoD,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;AAChI,CAAC,CAAC,CAAC;AACH,MAAM,oDAAoD,GAAG,CAAC,MAAc,EAAE,WAA+B,EAAE,KAA6B,EAAE,OAAgB,EAAE,eAAwB,EAAE,UAAmB,EAAkC,EAAE;IAC/O,MAAM,UAAU,GAAG,+BAA+B,CAAC,MAAM,CAAC,CAAC;IAC3D,OAAO;QACL,MAAM;QACN,WAAW;QACX,KAAK;QACL,OAAO;QACP,eAAe;QACf,UAAU;QACV,wCAAwC;QACxC,gDAAgD;QAChD,WAAW,EAAE,iBAAiB,CAAC,UAAU,CAAC,CAAC,IAAI,KAAK,mBAAmB,IAAI,iBAAiB,CAAC,UAAU,CAAC,CAAC,IAAI,KAAK,aAAa;KAChI,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RemoteParticipantState } from '@azure/communication-calling';\nimport { getIdentifierKind } from '@azure/communication-common';\nimport { fromFlatCommunicationIdentifier, memoizeFnAll } from '@internal/acs-ui-common';\nimport { CallParticipantListParticipant } from '@internal/react-components';\n/**\n * @private\n */\nexport const memoizedConvertAllremoteParticipants = memoizeFnAll((userId: string, displayName: string | undefined, state: RemoteParticipantState, isMuted: boolean, isScreenSharing: boolean, isSpeaking: boolean): CallParticipantListParticipant => {\n  return convertRemoteParticipantToParticipantListParticipant(userId, displayName, state, isMuted, isScreenSharing, isSpeaking);\n});\nconst convertRemoteParticipantToParticipantListParticipant = (userId: string, displayName: string | undefined, state: RemoteParticipantState, isMuted: boolean, isScreenSharing: boolean, isSpeaking: boolean): CallParticipantListParticipant => {\n  const identifier = fromFlatCommunicationIdentifier(userId);\n  return {\n    userId,\n    displayName,\n    state,\n    isMuted,\n    isScreenSharing,\n    isSpeaking,\n    // ACS users can not remove Teams users.\n    // Removing unknown types of users is undefined.\n    isRemovable: getIdentifierKind(identifier).kind === 'communicationUser' || getIdentifierKind(identifier).kind === 'phoneNumber'\n  };\n};\"../../../acs-ui-common/src\"\"../../../react-components/src\""]}