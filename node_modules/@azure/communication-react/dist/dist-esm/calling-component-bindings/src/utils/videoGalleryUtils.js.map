{"version":3,"file":"videoGalleryUtils.js","sourceRoot":"","sources":["../../../../../preprocess-dist/calling-component-bindings/src/utils/videoGalleryUtils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { DominantSpeakersInfo, RemoteParticipantState as RemoteParticipantConnectionState } from '@azure/communication-calling';\nimport { memoizeFnAll, toFlatCommunicationIdentifier } from '@internal/acs-ui-common';\nimport { RemoteParticipantState, RemoteVideoStreamState } from '@internal/calling-stateful-client';\nimport { VideoGalleryRemoteParticipant, VideoGalleryStream } from '@internal/react-components';\nimport memoizeOne from 'memoize-one';\nimport { checkIsSpeaking } from './SelectorUtils';\n\n/** @internal */\nexport const _dominantSpeakersWithFlatId = (dominantSpeakers?: DominantSpeakersInfo): undefined | string[] => {\n  return dominantSpeakers?.speakersList?.map(toFlatCommunicationIdentifier);\n};\n\n/** @internal */\nexport const _videoGalleryRemoteParticipantsMemo = (remoteParticipants: RemoteParticipantState[] | undefined): VideoGalleryRemoteParticipant[] => {\n  if (!remoteParticipants) {\n    return [];\n  }\n  return memoizedAllConvertRemoteParticipant(memoizedFn => {\n    return Object.values(remoteParticipants).filter((participant: RemoteParticipantState) => {\n      return participant.state !== 'InLobby';\n    }).map((participant: RemoteParticipantState) => {\n      return memoizedFn(toFlatCommunicationIdentifier(participant.identifier), participant.isMuted, checkIsSpeaking(participant), participant.videoStreams, participant.state, participant.displayName);\n    });\n  });\n};\nconst memoizedAllConvertRemoteParticipant = memoizeFnAll((userId: string, isMuted: boolean, isSpeaking: boolean, videoStreams: {\n  [key: number]: RemoteVideoStreamState;\n}, state: RemoteParticipantConnectionState, displayName?: string): VideoGalleryRemoteParticipant => {\n  return convertRemoteParticipantToVideoGalleryRemoteParticipant(userId, isMuted, isSpeaking, videoStreams, state, displayName);\n});\n\n/** @private */\nexport const convertRemoteParticipantToVideoGalleryRemoteParticipant = (userId: string, isMuted: boolean, isSpeaking: boolean, videoStreams: {\n  [key: number]: RemoteVideoStreamState;\n}, state: RemoteParticipantConnectionState, displayName?: string): VideoGalleryRemoteParticipant => {\n  const rawVideoStreamsArray = Object.values(videoStreams);\n  let videoStream: VideoGalleryStream | undefined = undefined;\n  let screenShareStream: VideoGalleryStream | undefined = undefined;\n  if (rawVideoStreamsArray[0]) {\n    if (rawVideoStreamsArray[0].mediaStreamType === 'Video') {\n      videoStream = convertRemoteVideoStreamToVideoGalleryStream(rawVideoStreamsArray[0]);\n    } else {\n      screenShareStream = convertRemoteVideoStreamToVideoGalleryStream(rawVideoStreamsArray[0]);\n    }\n  }\n  if (rawVideoStreamsArray[1]) {\n    if (rawVideoStreamsArray[1].mediaStreamType === 'ScreenSharing') {\n      screenShareStream = convertRemoteVideoStreamToVideoGalleryStream(rawVideoStreamsArray[1]);\n    } else {\n      videoStream = convertRemoteVideoStreamToVideoGalleryStream(rawVideoStreamsArray[1]);\n    }\n  }\n  return {\n    userId,\n    displayName,\n    isMuted,\n    isSpeaking,\n    videoStream,\n    screenShareStream,\n    isScreenSharingOn: screenShareStream !== undefined && screenShareStream.isAvailable\n  };\n};\nconst convertRemoteVideoStreamToVideoGalleryStream = (stream: RemoteVideoStreamState): VideoGalleryStream => {\n  return {\n    id: stream.id,\n    isAvailable: stream.isAvailable,\n    isMirrored: stream.view?.isMirrored,\n    renderElement: stream.view?.target\n  };\n};\n\n/** @private */\nexport const memoizeLocalParticipant = memoizeOne((identifier, displayName, isMuted, isScreenSharingOn, localVideoStream) => ({\n  userId: identifier,\n  displayName: displayName ?? '',\n  isMuted: isMuted,\n  isScreenSharingOn: isScreenSharingOn,\n  videoStream: {\n    isAvailable: !!localVideoStream,\n    isMirrored: localVideoStream?.view?.isMirrored,\n    renderElement: localVideoStream?.view?.target\n  }\n}));\"../../../acs-ui-common/src\"\"../../../calling-stateful-client/src\"\"../../../react-components/src\""]}