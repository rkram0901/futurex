{"version":3,"file":"CallProvider.js","sourceRoot":"","sources":["../../../../../preprocess-dist/calling-component-bindings/src/providers/CallProvider.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,OAAO,CAAC;AAEzD,OAAO,EAAE,UAAU,EAAgB,6CAA0C;AAmB7E;;GAEG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,aAAa,CAA8B,SAAS,CAAC,CAAC;AAEjF;;GAEG;AACH,MAAM,gBAAgB,GAAG,CAAC,KAAwB,EAAe,EAAE;IACjE,MAAM,EACJ,QAAQ,EACR,IAAI,EACL,GAAG,KAAK,CAAC;IACV,MAAM,YAAY,GAAoB;QACpC,IAAI;KACL,CAAC;IACF,OAAO,oBAAC,WAAW,CAAC,QAAQ,IAAC,KAAK,EAAE,YAAY,IAAG,QAAQ,CAAwB,CAAC;AACtF,CAAC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,KAAwB,EAAe,EAAE,CAAC,oBAAC,gBAAgB,oBAAK,KAAK,EAAI,CAAC;AAEvG;;;;;;;;;GASG;AACH,MAAM,CAAC,MAAM,OAAO,GAAG,GAAqB,EAAE;;IAC5C,MAAM,IAAI,GAAG,MAAA,UAAU,CAAC,WAAW,CAAC,0CAAE,IAAI,CAAC;IAC3C,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC7B,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;KAC7E;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { useContext, createContext } from 'react';\nimport { Call } from '@azure/communication-calling';\nimport { _isACSCall, _isTeamsCall } from '@internal/calling-stateful-client';\n\n/**\n * @private\n */\nexport type CallContextType = {\n  call: Call | undefined;\n};\n\n/**\n * Arguments to initialize a {@link CallProvider}.\n *\n * @public\n */\nexport interface CallProviderProps {\n  children: React.ReactNode;\n  call?: Call;\n}\n\n/**\n * @private\n */\nexport const CallContext = createContext<CallContextType | undefined>(undefined);\n\n/**\n * @private\n */\nconst CallProviderBase = (props: CallProviderProps): JSX.Element => {\n  const {\n    children,\n    call\n  } = props;\n  const initialState: CallContextType = {\n    call\n  };\n  return <CallContext.Provider value={initialState}>{children}</CallContext.Provider>;\n};\n\n/**\n * A {@link React.Context} that stores a {@link @azure/communication-calling#Call}.\n *\n * Calling components from this package must be wrapped with a {@link CallProvider}.\n *\n * @public\n */\nexport const CallProvider = (props: CallProviderProps): JSX.Element => <CallProviderBase {...props} />;\n\n/**\n * Hook to obtain {@link @azure/communication-calling#Call} from the provider.\n *\n * Useful when implementing a custom component that utilizes the providers\n * exported from this library.\n *\n * you must have previously used the CallProvider with a Call object to use this hook\n *\n * @public\n */\nexport const useCall = (): Call | undefined => {\n  const call = useContext(CallContext)?.call;\n  if (call && !_isACSCall(call)) {\n    throw new Error('Incorrect call type: Must provide a Regular Call object.');\n  }\n  return call;\n};\"../../../calling-stateful-client/src\""]}