import { toFlatCommunicationIdentifier } from "../../acs-ui-common/src";
/**
 * @private
 */
export const getDeviceManager = (state) => state.deviceManager;
/**
 * @private
 */
export const getCallExists = (state, props) => !!state.calls[props.callId];
/**
 * @private
 */
export const getDominantSpeakers = (state, props) => { var _a; return (_a = state.calls[props.callId]) === null || _a === void 0 ? void 0 : _a.dominantSpeakers; };
/**
 * @private
 */
export const getRemoteParticipants = (state, props) => {
    var _a;
    return (_a = state.calls[props.callId]) === null || _a === void 0 ? void 0 : _a.remoteParticipants;
};
/**
 * @private
 */
export const getIsScreenSharingOn = (state, props) => { var _a; return (_a = state.calls[props.callId]) === null || _a === void 0 ? void 0 : _a.isScreenSharingOn; };
/**
 * @private
 */
export const getIsMuted = (state, props) => { var _a; return (_a = state.calls[props.callId]) === null || _a === void 0 ? void 0 : _a.isMuted; };
/**
 * @private
 */
export const getLocalVideoStreams = (state, props) => { var _a; return (_a = state.calls[props.callId]) === null || _a === void 0 ? void 0 : _a.localVideoStreams; };
/**
 * @private
 */
export const getScreenShareRemoteParticipant = (state, props) => { var _a; return (_a = state.calls[props.callId]) === null || _a === void 0 ? void 0 : _a.screenShareRemoteParticipant; };
/**
 * @private
 */
export const getDisplayName = (state) => { var _a; return (_a = state.callAgent) === null || _a === void 0 ? void 0 : _a.displayName; };
/**
 * @private
 */
export const getIdentifier = (state) => toFlatCommunicationIdentifier(state.userId);
/**
 * @private
 */
export const getLatestErrors = (state) => state.latestErrors;
/**
 * @private
 */
export const getDiagnostics = (state, props) => { var _a; return (_a = state.calls[props.callId]) === null || _a === void 0 ? void 0 : _a.diagnostics; };
/**
 * @private
 */
export const getEnvironmentInfo = (state) => {
    return undefined;
};
//# sourceMappingURL=baseSelectors.js.map