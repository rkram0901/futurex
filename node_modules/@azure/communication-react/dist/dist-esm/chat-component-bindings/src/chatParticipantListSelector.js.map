{"version":3,"file":"chatParticipantListSelector.js","sourceRoot":"","sources":["../../../../preprocess-dist/chat-component-bindings/src/chatParticipantListSelector.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,eAAe,EAAyB,MAAM,iBAAiB,CAAC;AACpG,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,6BAA6B,EAAE,gCAAgC;AAIxE,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAChE,MAAM,kDAAkD,GAAG,CAAC,gBAAmC,EAAgC,EAAE;IAC/H,OAAO,gBAAgB,CAAC,GAAG,CAAC,CAAC,WAA4B,EAAE,EAAE;QAC3D,OAAO;YACL,MAAM,EAAE,6BAA6B,CAAC,WAAW,CAAC,EAAE,CAAC;YACrD,WAAW,EAAE,WAAW,CAAC,WAAW;YACpC,wCAAwC;YACxC,iEAAiE;YACjE,WAAW,EAAE,iBAAiB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,mBAAmB;SAC5E,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,cAAc,GAAG,CAAC,YAA0C,EAAU,EAAE;IAC5E,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACjE,CAAC,CAAC;AAYF;;;;GAIG;AACH,MAAM,CAAC,MAAM,2BAA2B,GAAgC,QAAQ,CAAC,cAAc,CAAC,CAAC,SAAS,EAAE,eAAe,EAAE,cAAc,CAAC,EAAE,CAAC,MAAM,EAAE,gBAEtJ,EAAE,WAAW,EAAE,EAAE;IAChB,IAAI,YAAY,GAAG,kDAAkD,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACvG,IAAI,CAAC,KAAK,YAAY,CAAC,MAAM,EAAE;QAC7B,MAAM,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,CAAC,KAAK,YAAY,EAAE;YACvB,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAClE,IAAI,YAAY,KAAK,SAAS,EAAE;gBAC9B,YAAY,CAAC,YAAY,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;aACtD;iBAAM;gBACL,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;aACxD;SACF;KACF;IACD,OAAO;QACL,QAAQ,EAAE,MAAM;QAChB,YAAY,EAAE,YAAY;KAC3B,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getUserId, getDisplayName, getParticipants, ChatBaseSelectorProps } from './baseSelectors';\nimport * as reselect from 'reselect';\nimport { toFlatCommunicationIdentifier } from '@internal/acs-ui-common';\nimport { ChatParticipant } from '@azure/communication-chat';\nimport { ParticipantListParticipant } from '@internal/react-components';\nimport { ChatClientState } from '@internal/chat-stateful-client';\nimport { getIdentifierKind } from '@azure/communication-common';\nconst convertChatParticipantsToCommunicationParticipants = (chatParticipants: ChatParticipant[]): ParticipantListParticipant[] => {\n  return chatParticipants.map((participant: ChatParticipant) => {\n    return {\n      userId: toFlatCommunicationIdentifier(participant.id),\n      displayName: participant.displayName,\n      // ACS users can not remove Teams users.\n      // Removing phone numbers or unknown types of users is undefined.\n      isRemovable: getIdentifierKind(participant.id).kind === 'communicationUser'\n    };\n  });\n};\n\n/**\n * get the index of moderator to help updating its display name if they are the local user or removing them from list of participants otherwise\n */\nconst moderatorIndex = (participants: ParticipantListParticipant[]): number => {\n  return participants.map(p => p.displayName).indexOf(undefined);\n};\n\n/**\n * Selector type for {@link ParticipantList} component.\n *\n * @public\n */\nexport type ChatParticipantListSelector = (state: ChatClientState, props: ChatBaseSelectorProps) => {\n  myUserId: string;\n  participants: ParticipantListParticipant[];\n};\n\n/**\n * Selector for {@link ParticipantList} component.\n *\n * @public\n */\nexport const chatParticipantListSelector: ChatParticipantListSelector = reselect.createSelector([getUserId, getParticipants, getDisplayName], (userId, chatParticipants: {\n  [key: string]: ChatParticipant;\n}, displayName) => {\n  let participants = convertChatParticipantsToCommunicationParticipants(Object.values(chatParticipants));\n  if (0 !== participants.length) {\n    const moderatorIdx = moderatorIndex(participants);\n    if (-1 !== moderatorIdx) {\n      const userIndex = participants.map(p => p.userId).indexOf(userId);\n      if (moderatorIdx === userIndex) {\n        participants[moderatorIdx].displayName = displayName;\n      } else {\n        participants = participants.filter(p => p.displayName);\n      }\n    }\n  }\n  return {\n    myUserId: userId,\n    participants: participants\n  };\n});\"../../acs-ui-common/src\"\"../../react-components/src\"\"../../chat-stateful-client/src\""]}