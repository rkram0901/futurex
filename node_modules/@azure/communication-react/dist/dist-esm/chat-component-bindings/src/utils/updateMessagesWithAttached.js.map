{"version":3,"file":"updateMessagesWithAttached.js","sourceRoot":"","sources":["../../../../../preprocess-dist/chat-component-bindings/src/utils/updateMessagesWithAttached.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AAE3C;;GAEG;AACH,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,sBAAiC,EAAQ,EAAE;IACpF,sBAAsB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7C,sBAAsB,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE;;QAC1D,IAAI,OAAO,CAAC,WAAW,KAAK,MAAM,EAAE;YAClC,OAAO;SACR;QACD;;;;;WAKG;QACH,IAAI,QAAQ,GAAoC,KAAK,CAAC;QACtD,MAAM,eAAe,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACpE,MAAM,WAAW,GAAG,KAAK,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACpF,MAAM,gBAAgB,GAAG,CAAA,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,WAAW,MAAK,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QACxG,MAAM,YAAY,GAAG,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW,MAAK,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QAC5F,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,mCAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,MAAA,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,SAAS,mCAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QACrH,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,UAAU;QAEhE,IAAI,gBAAgB,KAAK,OAAO,CAAC,QAAQ,EAAE;YACzC,QAAQ,GAAG,OAAO,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;SAC9D;aAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,CAAC,EAAE;YACpC,wGAAwG;YACxG,QAAQ,GAAG,KAAK,CAAC;SAClB;aAAM;YACL,QAAQ,GAAG,OAAO,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;SAChE;QACD,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Message, MessageAttachedStatus } from '@internal/react-components';\nimport { compareMessages } from './compareMessages';\nimport { MINUTE_IN_MS } from './constants';\n\n/**\n * @private\n */\nexport const updateMessagesWithAttached = (chatMessagesWithStatus: Message[]): void => {\n  chatMessagesWithStatus.sort(compareMessages);\n  chatMessagesWithStatus.forEach((message, index, messages) => {\n    if (message.messageType !== 'chat') {\n      return;\n    }\n    /**\n     * Attached === true means it is within a group of messages in the current order\n     * Attached === top/bottom means it is on the top/bottom boundary\n     * Attached === false means it is just a single message\n     * A group of messages: continuous messages that belong to the same sender and not intercepted by other senders.\n     */\n    let attached: boolean | MessageAttachedStatus = false;\n    const previousMessage = index > 0 ? messages[index - 1] : undefined;\n    const nextMessage = index === messages.length - 1 ? undefined : messages[index + 1];\n    const previousSenderId = previousMessage?.messageType === 'chat' ? previousMessage.senderId : undefined;\n    const nextSenderId = nextMessage?.messageType === 'chat' ? nextMessage.senderId : undefined;\n    const timediff = new Date(message?.createdOn ?? '').getTime() - new Date(previousMessage?.createdOn ?? '').getTime();\n    const diffMins = Math.round(timediff / MINUTE_IN_MS); // minutes\n\n    if (previousSenderId !== message.senderId) {\n      attached = message.senderId === nextSenderId ? 'top' : false;\n    } else if (diffMins && diffMins >= 5) {\n      // if there are more than or equal to 5 mins time gap between messages do not attach and show time stamp\n      attached = false;\n    } else {\n      attached = message.senderId === nextSenderId ? true : 'bottom';\n    }\n    message.attached = attached;\n  });\n};\"../../../react-components/src\""]}