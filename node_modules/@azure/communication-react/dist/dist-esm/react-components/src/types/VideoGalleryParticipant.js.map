{"version":3,"file":"VideoGalleryParticipant.js","sourceRoot":"","sources":["../../../../../preprocess-dist/react-components/src/types/VideoGalleryParticipant.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Scaling mode of a {@link VideoGalleryStream}.\n *\n * @public\n */\nexport type ViewScalingMode = 'Stretch' | 'Crop' | 'Fit';\n\n/**\n * Options to control how video streams are rendered.\n *\n * @public\n */\nexport declare interface VideoStreamOptions {\n  /** Whether the video stream is mirrored or not */\n  isMirrored?: boolean;\n  /** Scaling mode. It can be `Stretch`, `Crop` or `Fit` */\n  scalingMode?: ViewScalingMode;\n}\n\n/**\n * The state of a participant in the {@link VideoGallery}.\n *\n * @public\n */\nexport type VideoGalleryParticipant = {\n  /** User ID of participant */\n  userId: string;\n  /** Whether participant is muted */\n  isMuted?: boolean;\n  /** Display name of participant */\n  displayName?: string;\n  /** Video stream of participant */\n  videoStream?: VideoGalleryStream;\n  /** Whether participant is screen sharing or not */\n  isScreenSharingOn?: boolean;\n};\n\n/**\n * Video stream of a participant in {@link VideoGallery}.\n *\n * @public\n */\nexport interface VideoGalleryStream {\n  /** ID of the video stream */\n  id?: number;\n  /** Whether the video stream is available or not */\n  isAvailable?: boolean;\n  /** Whether the video stream is receiving data or not */\n  isReceiving?: boolean;\n  /** Whether the video stream is mirrored or not */\n  isMirrored?: boolean;\n  /** Render element of the video stream */\n  renderElement?: HTMLElement;\n}\n\n/**\n * Object returned after creating a local or remote VideoStream.\n * This contains helper functions to manipulate the render of the stream.\n *\n * @public\n */\nexport interface CreateVideoStreamViewResult {\n  /** View handle of the rendered video stream */\n  view: {\n    /**\n     * Update the scale mode for this view.\n     * @param scalingMode - The new scale mode.\n     */\n    updateScalingMode: (scalingMode: ViewScalingMode) => Promise<void>;\n  };\n}\n\n// set the required attribs in selector. (Further simplifying our component logic) For example\n// isLocalVideoReady can be calculated inside selector.\n/**\n * The state of the local participant in the {@link VideoGallery}.\n *\n * @public\n */\nexport type VideoGalleryLocalParticipant = VideoGalleryParticipant;\n\n/**\n * The state of a remote participant in the {@link VideoGallery}.\n *\n * @public\n */\nexport interface VideoGalleryRemoteParticipant extends VideoGalleryParticipant {\n  /** Whether participant is speaking or not */\n  isSpeaking?: boolean;\n  /** Video stream of shared screen */\n  screenShareStream?: VideoGalleryStream;\n}"]}