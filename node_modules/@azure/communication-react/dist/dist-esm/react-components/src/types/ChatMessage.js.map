{"version":3,"file":"ChatMessage.js","sourceRoot":"","sources":["../../../../../preprocess-dist/react-components/src/types/ChatMessage.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { MessageStatus } from '@internal/acs-ui-common';\nimport { CommunicationParticipant } from './CommunicationParticipant';\n/**\n * Indicate whether a chat message should be displayed merged with the message before / after it.\n *\n * Useful to merge many messages from the same sender into a single message bubble.\n *\n * @public\n */\nexport type MessageAttachedStatus = 'bottom' | 'top' | boolean;\n\n/**\n * Supported types of chat message content.\n *\n * @public\n */\nexport type MessageContentType = 'text' | 'html' | 'richtext/html' | 'unknown';\n\n/**\n * Discriminated union of all messages.\n *\n * The `messageType` field specializes into union variants.\n *\n * @public\n */\nexport type Message = ChatMessage | SystemMessage | CustomMessage;\n\n/**\n * Discriminated union of all system messages.\n *\n * The `systemMessageType` field specializes into union variants.\n *\n * @public\n */\nexport type SystemMessage = ParticipantAddedSystemMessage | ParticipantRemovedSystemMessage | TopicUpdatedSystemMessage | ContentSystemMessage;\n\n/**\n * A chat message.\n *\n * @public\n */\nexport interface ChatMessage extends MessageCommon {\n  messageType: 'chat';\n  content?: string;\n  editedOn?: Date;\n  deletedOn?: Date;\n  senderId?: string;\n  senderDisplayName?: string;\n  status?: MessageStatus;\n  attached?: MessageAttachedStatus;\n  mine?: boolean;\n  clientMessageId?: string;\n  contentType: MessageContentType;\n  /**\n   * A metadata field for the message.\n   * {@link @azure/communication-chat#ChatMessage.metadata}\n   */\n  metadata?: Record<string, string>;\n}\n/**\n * A system message notifying that a participant was added to the chat thread.\n *\n * @public\n */\nexport interface ParticipantAddedSystemMessage extends SystemMessageCommon {\n  systemMessageType: 'participantAdded';\n  participants: CommunicationParticipant[];\n}\n\n/**\n * A system message notifying that a participant was removed from the chat thread.\n *\n * @public\n */\nexport interface ParticipantRemovedSystemMessage extends SystemMessageCommon {\n  systemMessageType: 'participantRemoved';\n  participants: CommunicationParticipant[];\n}\n\n/**\n * A system message notifying that the chat thread topic was updated.\n *\n * @public\n */\nexport interface TopicUpdatedSystemMessage extends SystemMessageCommon {\n  systemMessageType: 'topicUpdated';\n  topic: string;\n}\n\n/**\n * A system message with arbitary content.\n *\n * @public\n */\nexport interface ContentSystemMessage extends SystemMessageCommon {\n  systemMessageType: 'content';\n  content: string;\n}\n\n/**\n * A custom message type.\n *\n * Custom messages are not rendered by default, but applications can provide custom renderers for them.\n *\n * @public\n */\nexport interface CustomMessage extends MessageCommon {\n  messageType: 'custom';\n  content: string;\n}\n\n/**\n * Common properties of all system messages.\n *\n * @public\n */\nexport interface SystemMessageCommon extends MessageCommon {\n  messageType: 'system';\n  iconName: string;\n}\n\n/**\n * Common properties of all message types.\n *\n * @public\n */\nexport interface MessageCommon {\n  messageId: string;\n  // ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`\n  createdOn: Date;\n}\"../../../acs-ui-common/src\""]}