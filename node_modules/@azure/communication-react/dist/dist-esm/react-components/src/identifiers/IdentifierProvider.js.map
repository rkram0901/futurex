{"version":3,"file":"IdentifierProvider.js","sourceRoot":"","sources":["../../../../../preprocess-dist/react-components/src/identifiers/IdentifierProvider.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AA2CzD,MAAM,kBAAkB,GAAiB;IACvC,gBAAgB,EAAE,mBAAmB;IACrC,+BAA+B,EAAE,qCAAqC;IACtE,yBAAyB,EAAE,8BAA8B;IACzD,eAAe,EAAE,kBAAkB;IACnC,2BAA2B,EAAE,gCAAgC;IAC7D,sCAAsC,EAAE,4CAA4C;IACpF,cAAc,EAAE,iBAAiB;IACjC,gBAAgB,EAAE,mBAAmB;IACrC,eAAe,EAAE,kBAAkB;IACnC,YAAY,EAAE,eAAe;IAC7B,SAAS,EAAE,YAAY;IACvB,8BAA8B,EAAE,oCAAoC;IACpE,+BAA+B,EAAE,qCAAqC;CACvE,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,aAAa,CAAe,kBAAkB,CAAC,CAAC;AAgBjF;;;;;;;;GAQG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,KAA+B,EAAe,EAAE;IAClF,MAAM,EACJ,WAAW,EACX,QAAQ,EACT,GAAG,KAAK,CAAC;IACV,OAAO,oBAAC,iBAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,kBAAkB,IAAG,QAAQ,CAA8B,CAAC;AACvH,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,GAAiB,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport React, { createContext, useContext } from 'react';\n\n/**\n * Identifiers that can be used to target specific components in a composite.\n *\n * @experimental\n *\n * These identifiers are assigned as `data-ui-id` HTML attribute of the root element of the targeted component.\n *\n * This API is intended for end to end test automation. As such, they are not covered by the API\n * guarantee of the public API. This will remain perenially experimental and compatibility breaking changes\n * may be made at any point.\n *\n * @internal\n */\nexport interface _Identifiers {\n  /** `data-ui-id` value for `SendBox` Component */\n  sendboxTextField: string;\n  /** `data-ui-id` value for `ParticipantButton` Component's People menu item */\n  participantButtonPeopleMenuItem: string;\n  /** `data-ui-id` value for `ParticipantItem` Component's Menu button */\n  participantItemMenuButton: string;\n  /** `data-ui-id` value for `ParticipantList` Component */\n  participantList: string;\n  /** `data-ui-id` value for `ParticipantList` Component's People Button */\n  participantListPeopleButton: string;\n  /** `data-ui-id` value for `ParticipantList` Component's Remove Participant Button */\n  participantListRemoveParticipantButton: string;\n  /** `data-ui-id` value for `MessageThread` components message content */\n  messageContent: string;\n  /** `data-ui-id` value for `MessageThread` components message timestamp */\n  messageTimestamp: string;\n  /** `data-ui-id` value for `TypingIndicator` Component */\n  typingIndicator: string;\n  /** `data-ui-id` value for `VideoGallery` Component */\n  videoGallery: string;\n  /** `data-ui-id` value for `VideoTile` Component */\n  videoTile: string;\n  /** `data-ui-id` value for `HorizontalGallery` Component's left navigation button */\n  horizontalGalleryLeftNavButton: string;\n  /** `data-ui-id` value for `HorizontalGallery` Component's right navigation button */\n  horizontalGalleryRightNavButton: string;\n}\nconst defaultIdentifiers: _Identifiers = {\n  sendboxTextField: 'sendbox-textfield',\n  participantButtonPeopleMenuItem: 'participant-button-people-menu-item',\n  participantItemMenuButton: 'participant-item-menu-button',\n  participantList: 'participant-list',\n  participantListPeopleButton: 'participant-list-people-button',\n  participantListRemoveParticipantButton: 'participant-list-remove-participant-button',\n  messageContent: 'message-content',\n  messageTimestamp: 'message-timestamp',\n  typingIndicator: 'typing-indicator',\n  videoGallery: 'video-gallery',\n  videoTile: 'video-tile',\n  horizontalGalleryLeftNavButton: 'horizontal-gallery-left-nav-button',\n  horizontalGalleryRightNavButton: 'horizontal-gallery-right-nav-button'\n};\n\n/**\n * @private\n */\nexport const IdentifierContext = createContext<_Identifiers>(defaultIdentifiers);\n\n/**\n * Arguments to Context Provider for {@link _Identifiers}.\n *\n * @experimental\n *\n * See documentation for {@link _Identifiers}.\n *\n * @internal\n */\nexport interface _IdentifierProviderProps {\n  identifiers?: _Identifiers;\n  children: React.ReactNode;\n}\n\n/**\n * React Context provider for {@link _Identifiers}.\n *\n * @experimental\n *\n * See documentation for {@link _Identifiers}.\n *\n * @internal\n */\nexport const _IdentifierProvider = (props: _IdentifierProviderProps): JSX.Element => {\n  const {\n    identifiers,\n    children\n  } = props;\n  return <IdentifierContext.Provider value={identifiers ?? defaultIdentifiers}>{children}</IdentifierContext.Provider>;\n};\n\n/**\n * @private\n */\nexport const useIdentifiers = (): _Identifiers => useContext(IdentifierContext);"]}