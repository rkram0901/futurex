{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../preprocess-dist/react-components/src/components/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { IIconProps, MessageBarType } from '@fluentui/react';\nimport { ActiveErrorMessage, ErrorType } from './ErrorBar';\n\n/**\n * @private\n *\n * @param fileName\n * @param length\n * @returns string\n */\nexport const truncatedFileName = (fileName: string, length: number): string => {\n  return fileName.substring(0, length).trimEnd() + (fileName.length > length ? '... ' : '');\n};\n\n/**\n * @private\n *\n * @param fileName\n * @returns string\n */\nexport const extension = (fileName: string): string => fileName.split('.').pop() || '';\n\n/**\n * @private\n */\nexport interface DismissedError {\n  type: ErrorType;\n  dismissedAt: Date;\n  activeSince?: Date;\n}\n\n/**\n * @private\n * @param dismissedErrors\n * @param toDismiss\n * @returns DismissedError[]\n * Always returns a new Array so that the state variable is updated, trigerring a render.\n */\nexport const dismissError = (dismissedErrors: DismissedError[], toDismiss: ActiveErrorMessage): DismissedError[] => {\n  const now = new Date(Date.now());\n  for (const error of dismissedErrors) {\n    if (error.type === toDismiss.type) {\n      // Bump the timestamp for latest dismissal of this error to now.\n      error.dismissedAt = now;\n      error.activeSince = toDismiss.timestamp;\n      return Array.from(dismissedErrors);\n    }\n  }\n\n  // Record that this error was dismissed for the first time right now.\n  return [...dismissedErrors, {\n    type: toDismiss.type,\n    dismissedAt: now,\n    activeSince: toDismiss.timestamp\n  }];\n};\n\n/**\n * @private\n * @param activeErrorMessages\n * @param dismissedErrors\n * @returns DismissedError[]\n *  Returns a new Array if and only if contents change, to avoid re-rendering when nothing was dropped.\n */\nexport const dropDismissalsForInactiveErrors = (activeErrorMessages: ActiveErrorMessage[], dismissedErrors: DismissedError[]): DismissedError[] => {\n  const active = new Map();\n  for (const message of activeErrorMessages) {\n    active.set(message.type, message);\n  }\n\n  // For an error such that:\n  // * It was previously active, and dismissed.\n  // * It did not have a timestamp associated with it.\n  // * It is no longer active.\n  //\n  // We remove it from dismissals. When it becomes active again next time, it will be shown again on the UI.\n  const shouldDeleteDismissal = (dismissed: DismissedError): boolean => dismissed.activeSince === undefined && active.get(dismissed.type) === undefined;\n  if (dismissedErrors.some(dismissed => shouldDeleteDismissal(dismissed))) {\n    return dismissedErrors.filter(dismissed => !shouldDeleteDismissal(dismissed));\n  }\n  return dismissedErrors;\n};\n\n/**\n * @private\n * @param activeErrorMessages\n * @param dismissedErrors\n * @returns ActiveErrorMessage[]\n */\nexport const errorsToShow = (activeErrorMessages: ActiveErrorMessage[], dismissedErrors: DismissedError[], mountTimestamp?: Date): ActiveErrorMessage[] => {\n  const dismissed: Map<ErrorType, DismissedError> = new Map();\n  for (const error of dismissedErrors) {\n    dismissed.set(error.type, error);\n  }\n  return activeErrorMessages.filter(error => {\n    if (mountTimestamp && error.timestamp && mountTimestamp > error.timestamp) {\n      // Error has a timestamp and it is older than when the component was mounted.\n      return false;\n    }\n    const dismissal = dismissed.get(error.type);\n    if (!dismissal) {\n      // This error was never dismissed.\n      return true;\n    }\n    if (!error.timestamp) {\n      // No timestamp associated with the error. In this case, the existence of a dismissal is enough to suppress the error.\n      return false;\n    }\n    // Error has an associated timestamp, so compare with last dismissal.\n    return error.timestamp > dismissal.dismissedAt;\n  });\n};\n\n/**\n * @private\n * @param errorType\n * @returns MessageBarType\n */\nexport const messageBarType = (errorType: ErrorType): MessageBarType => {\n  switch (errorType) {\n    case 'callNetworkQualityLow':\n    case 'callNoSpeakerFound':\n    case 'callNoMicrophoneFound':\n    case 'callMicrophoneAccessDenied':\n    case 'callMicrophoneAccessDeniedSafari':\n    case 'callMicrophoneMutedBySystem':\n    case 'callMicrophoneUnmutedBySystem':\n    case 'callMacOsMicrophoneAccessDenied':\n    case 'callLocalVideoFreeze':\n    case 'callCameraAccessDenied':\n    case 'callCameraAccessDeniedSafari':\n    case 'callCameraAlreadyInUse':\n    case 'callVideoStoppedBySystem':\n    case 'callVideoRecoveredBySystem':\n    case 'callMacOsCameraAccessDenied':\n    case 'callMacOsScreenShareAccessDenied':\n      return MessageBarType.warning;\n    default:\n      return MessageBarType.error;\n  }\n};\n\n/**\n * @private\n * @param errorType\n * @returns IIconProps | undefined\n */\nexport const messageBarIconProps = (errorType: ErrorType): IIconProps | undefined => {\n  const iconName = customIconName[errorType];\n  return iconName ? {\n    iconName\n  } : undefined;\n};\n\n/**\n * @private\n */\nexport const customIconName: Partial<{ [key in ErrorType]: string }> = {\n  callNetworkQualityLow: 'ErrorBarCallNetworkQualityLow',\n  callNoSpeakerFound: 'ErrorBarCallNoSpeakerFound',\n  callNoMicrophoneFound: 'ErrorBarCallNoMicrophoneFound',\n  callMicrophoneAccessDenied: 'ErrorBarCallMicrophoneAccessDenied',\n  callMicrophoneAccessDeniedSafari: 'ErrorBarCallMicrophoneAccessDenied',\n  callMicrophoneMutedBySystem: 'ErrorBarCallMicrophoneMutedBySystem',\n  callMicrophoneUnmutedBySystem: 'ErrorBarCallMicrophoneUnmutedBySystem',\n  callMacOsMicrophoneAccessDenied: 'ErrorBarCallMacOsMicrophoneAccessDenied',\n  callLocalVideoFreeze: 'ErrorBarCallLocalVideoFreeze',\n  callCameraAccessDenied: 'ErrorBarCallCameraAccessDenied',\n  callCameraAccessDeniedSafari: 'ErrorBarCallCameraAccessDenied',\n  callCameraAlreadyInUse: 'ErrorBarCallCameraAlreadyInUse',\n  callVideoStoppedBySystem: 'ErrorBarCallVideoStoppedBySystem',\n  callVideoRecoveredBySystem: 'ErrorBarCallVideoRecoveredBySystem',\n  callMacOsCameraAccessDenied: 'ErrorBarCallMacOsCameraAccessDenied'\n};\n\n/**\n * @private\n */\nexport const isValidString = (string: string | undefined): string is string => {\n  return !!string && string.length > 0;\n};"]}