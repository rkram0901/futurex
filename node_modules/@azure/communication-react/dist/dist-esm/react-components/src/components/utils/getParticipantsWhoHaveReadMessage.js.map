{"version":3,"file":"getParticipantsWhoHaveReadMessage.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-components/src/components/utils/getParticipantsWhoHaveReadMessage.ts"],"names":[],"mappings":"AAIA;;;;;;;;;;;;;mHAamH;AACnH,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,OAAoB,EAAE,sBAA8C,EAGlH,EAAE;IACJ,OAAO,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAC7C,0IAA0I;QAC1I,6DAA6D;SAC5D,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,eAAe,IAAI,OAAO,CAAC,SAAS,CAAC;QAC/E,gDAAgD;QAChD,6DAA6D;SAC5D,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,WAAW,IAAI,WAAW,CAAC,WAAW,KAAK,EAAE,CAAC;QACxF,iCAAiC;SAChC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;QAC3B,EAAE;QACF,WAAW,EAAE,WAAW,CAAC,WAAW;KACrC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ChatMessage, ReadReceiptsBySenderId } from '../..';\n\n/**\n * @private\n *logic: Looking at message A, how do we know it's read number?\n * Assumption: if user read the latest message, user has read all messages before that\n * ReadReceipt behaviour: read receipt is only sent to the last message\n *\n * If participant read a message that is sent later than message A, then the participant has read message A\n * How do we check if the message is sent later than message A?\n * We compare if the messageID of the last read message is larger than or equal to the message A's id\n * Because messageID is the creation timestamp of each message\n * Timestamps are in epoch time so lecixographical ordering is the same as time ordering.\n *\n * if MessageId of B is larger than message Id of A, then B is created after A\n * if the last read message is created after the message A is sent, then user should have read message A as well */\nexport const getParticipantsWhoHaveReadMessage = (message: ChatMessage, readReceiptsBySenderId: ReadReceiptsBySenderId): {\n  id: string;\n  displayName: string;\n}[] => {\n  return Object.entries(readReceiptsBySenderId)\n  // Filter to only read receipts that match the message OR the participant has read a different message after this message has been created\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  .filter(([_, readReceipt]) => readReceipt.lastReadMessage >= message.messageId)\n  // make sure the person is not removed from chat\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  .filter(([_, readReceipt]) => readReceipt.displayName && readReceipt.displayName !== '')\n  // Map properties to useful array\n  .map(([id, readReceipt]) => ({\n    id,\n    displayName: readReceipt.displayName\n  }));\n};"]}