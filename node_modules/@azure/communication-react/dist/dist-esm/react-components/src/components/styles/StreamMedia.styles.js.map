{"version":3,"file":"StreamMedia.styles.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-components/src/components/styles/StreamMedia.styles.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAkB,WAAW,EAAS,MAAM,iBAAiB,CAAC;AAErE;;GAEG;AACH,MAAM,CAAC,MAAM,SAAS,GAAG,GAAW,EAAE,CAAC,WAAW,CAAC;IACjD,QAAQ,EAAE,UAAU;IACpB,6EAA6E;IAC7E,OAAO,EAAE,UAAU;CACpB,CAAC,CAAC;AAEH;;GAEG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAW,EAAE,CAAC,WAAW,CAAC;IAC/D,6EAA6E;IAC7E,QAAQ,EAAE,UAAU;IACpB,GAAG,EAAE,KAAK;IACV,MAAM,EAAE,GAAG;IACX,IAAI,EAAE,KAAK;IACX,KAAK,EAAE,GAAG;IACV,SAAS,EAAE,uBAAuB;CACnC,CAAC,CAAC;AAEH;;GAEG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAmB;IAC/C,IAAI,EAAE;QACJ,MAAM,EAAE,MAAM,CAAC,gCAAgC;KAChD;IAED,MAAM,EAAE;QACN,SAAS,EAAE,MAAM;QACjB,MAAM,EAAE,KAAK;QACb,KAAK,EAAE,OAAO;QACd,sDAAsD;QACtD,WAAW,EAAE,OAAO;QACpB,mDAAmD;QACnD,WAAW,EAAE,QAAQ;KACtB;CACF,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAY,EAAU,EAAE,CAAC,WAAW,CAAC;IAClE,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,MAAM;IACb,UAAU,EAAE,aAAa;IACzB,OAAO,EAAE,MAAM;IACf,SAAS,EAAE;QACT,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;KAC3C;CACF,CAAC,CAAC;AAEH;;GAEG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,KAAY,EAAU,EAAE,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;IAClG,oEAAoE;IACpE,iFAAiF;IACjF,kEAAkE;IAClE,EAAE;IACF,oCAAoC;IACpC,SAAS,EAAE,iBAAiB;IAC5B,wCAAwC;IACxC,qCAAqC;IACrC,uGAAuG;IACvG,4BAA4B,EAAE;QAC5B,SAAS,EAAE,iBAAiB;KAC7B;CACF,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ISpinnerStyles, mergeStyles, Theme } from '@fluentui/react';\n\n/**\n * @private\n */\nexport const container = (): string => mergeStyles({\n  position: 'relative',\n  // ensures child element's `position: absolute` is relative to this container\n  display: 'contents'\n});\n\n/**\n * @private\n */\nexport const loadingSpinnerContainer = (): string => mergeStyles({\n  // Position centrally on top of content. Parent must have position: relative.\n  position: 'absolute',\n  top: '50%',\n  bottom: '0',\n  left: '50%',\n  right: '0',\n  transform: 'translate(-50%, -50%)'\n});\n\n/**\n * @private\n */\nexport const loadSpinnerStyles: ISpinnerStyles = {\n  root: {\n    height: '100%' // ensure height fills container\n  },\n\n  circle: {\n    maxHeight: '5rem',\n    height: '50%',\n    width: 'unset',\n    // remove default width applied by fluent for spinners\n    aspectRatio: '1 / 1',\n    // make height match width to ensure a circle shape\n    borderWidth: '0.25em'\n  }\n};\n\n/**\n * @private\n */\nexport const mediaContainer = (theme: Theme): string => mergeStyles({\n  position: 'relative',\n  height: '100%',\n  width: '100%',\n  background: 'transparent',\n  display: 'flex',\n  '& video': {\n    borderRadius: theme.effects.roundedCorner4\n  }\n});\n\n/**\n * @private\n */\nexport const invertedVideoInPipStyle = (theme: Theme): string => mergeStyles(mediaContainer(theme), {\n  // The HTMLElement returned by the headless SDK is already inverted.\n  // But in picture-in-picture mode, we do not want to invert the host HTMLElement.\n  // Instead, we need to target the :picture-in-picture pseudoclass.\n  //\n  // First reset the host HTMLElement.\n  transform: 'rotateY(180deg)',\n  // This doesn't work yet on latest Edge.\n  // Probably just not implemented yet.\n  // picture-in-picture API is not yet stable: https://www.w3.org/TR/picture-in-picture/#css-pseudo-class\n  '& video:picture-in-picture': {\n    transform: 'rotateY(180deg)'\n  }\n});"]}