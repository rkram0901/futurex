{"version":3,"file":"DevicePermissionDropdown.js","sourceRoot":"","sources":["../../../../../../preprocess-dist/react-components/src/components/DevicePermissions/DevicePermissionDropdown.tsx"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,QAAQ,EAAoC,KAAK,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAC1F,OAAO,KAAK,MAAM,OAAO,CAAC;AA8D1B;;;;GAIG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,KAAqC,EAAe,EAAE;IAC9F,MAAM,EACJ,IAAI,EACJ,mBAAmB,EACnB,OAAO,EACP,SAAS,EACT,OAAO,EACP,OAAO,EACP,MAAM,EACP,GAAG,KAAK,CAAC;IACV,MAAM,mBAAmB,GAAG,GAAgB,EAAE;QAC5C,OAAO,oBAAC,KAAK,IAAC,UAAU,QAAC,aAAa,EAAC,QAAQ;YAC1C,IAAI;YACL,oBAAC,IAAI,QAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,eAAe,CAAQ,CACjC,CAAC;IACb,CAAC,CAAC;IACF,MAAM,iBAAiB,GAAG,GAAgB,EAAE;QAC1C,OAAO,oBAAC,IAAI,QAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,mBAAmB,CAAQ,CAAC;IACrD,CAAC,CAAC;IACF,OAAO,oBAAC,QAAQ,kBAAa,qBAAqB,EAAE,WAAW,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,eAAe,EAAE,KAAK,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,OAAO,EAAE,GAAG,EAAE;YAC9M,IAAI,mBAAmB,EAAE;gBACvB,mBAAmB,CAAC,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI;oBAC/B,KAAK,EAAE,IAAI;oBACX,KAAK,EAAE,IAAI;iBACZ,CAAC,CAAC;aACJ;YACD,OAAO,aAAP,OAAO,uBAAP,OAAO,EAAI,CAAC;QACd,CAAC,EAAE,OAAO,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,EAAE,MAAM,EAAE,MAAM,GAAI,CAAC;AAChD,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Dropdown, IDropdownOption, IDropdownStyles, Stack, Text } from '@fluentui/react';\nimport React from 'react';\n\n/**\n * Strings of {@link DevicePermissionDropdown} that can be overridden.\n *\n * @internal\n */\nexport interface _DevicePermissionDropdownStrings {\n  /**\n   * dropdown label\n   */\n\n  label?: string;\n  /**\n   * dropdown placeholder\n   */\n  placeHolderText: string;\n  /** string for action button  */\n  actionButtonContent?: string;\n}\n\n/**\n * Props for {@link _DevicePermissionDropdown}.\n *\n * @internal\n */\nexport interface _DevicePermissionDropdownProps {\n  /**\n   * icon shown in dropdown placeholder\n   */\n  icon?: JSX.Element;\n  /**\n   * Dropdown content\n   */\n  options?: IDropdownOption[];\n  /**\n   * Ask for permissions of devices.\n   *\n   * @remarks\n   * Browser permission window will pop up if permissions are not granted yet\n   *\n   * @param constrain - Define constraints for accessing local devices {@link @azure/communication-calling#PermissionConstraints }\n   */\n  askDevicePermission?(constrain: _PermissionConstraints): Promise<void>;\n  /**\n   * Optional callback when component is clicked\n   */\n  onClick?: () => void;\n  /**\n   * Define constraints for accessing local devices  {@link @azure/communication-calling#PermissionConstraints }\n   */\n  constrain?: _PermissionConstraints;\n  /**\n   * Strings for devicepermissiondropdown\n   */\n  strings?: _DevicePermissionDropdownStrings;\n  /**\n   * Styles for devicepermissiondropdown\n   */\n  styles?: Partial<IDropdownStyles>;\n}\n\n/**\n * A dropdown to trigger device permission prompt\n *\n * @internal\n */\nexport const _DevicePermissionDropdown = (props: _DevicePermissionDropdownProps): JSX.Element => {\n  const {\n    icon,\n    askDevicePermission,\n    onClick,\n    constrain,\n    strings,\n    options,\n    styles\n  } = props;\n  const onRenderPlaceholder = (): JSX.Element => {\n    return <Stack horizontal verticalAlign=\"center\">\n        {icon}\n        <Text>{strings?.placeHolderText}</Text>\n      </Stack>;\n  };\n  const onRenderCaretDown = (): JSX.Element => {\n    return <Text>{strings?.actionButtonContent}</Text>;\n  };\n  return <Dropdown data-ui-id={'permission-dropdown'} placeholder={strings?.placeHolderText} label={strings?.label} onRenderPlaceholder={onRenderPlaceholder} onRenderCaretDown={onRenderCaretDown} onClick={() => {\n    if (askDevicePermission) {\n      askDevicePermission(constrain ?? {\n        video: true,\n        audio: true\n      });\n    }\n    onClick?.();\n  }} options={options ?? []} styles={styles} />;\n};\n\n/**\n * Define constraints for accessing local devices  {@link @azure/communication-calling#PermissionConstraints }\n *\n * @internal\n */\nexport type _PermissionConstraints = {\n  audio: boolean;\n  video: boolean;\n};"]}