import { ComponentSlotStyle } from '@fluentui/react-northstar';
import React from 'react';
import { ChatMessage } from '../../types/ChatMessage';
import { MessageThreadStrings } from '../MessageThread';
import { OnRenderAvatarCallback } from '../../types';
import { FileDownloadHandler } from '../FileDownloadCards';
declare type ChatMessageComponentAsMessageBubbleProps = {
    message: ChatMessage;
    messageContainerStyle?: ComponentSlotStyle;
    showDate?: boolean;
    disableEditing?: boolean;
    onEditClick: () => void;
    onRemoveClick?: () => void;
    onResendClick?: () => void;
    strings: MessageThreadStrings;
    userId: string;
    messageStatus?: string;
    /**
     * Whether the status indicator for each message is displayed or not.
     */
    showMessageStatus?: boolean;
    /**
     * Optional callback to render uploaded files in the message component.
     */
    onRenderFileDownloads?: (userId: string, message: ChatMessage) => JSX.Element;
    /**
     * Optional function called when someone clicks on the file download icon.
     */
    fileDownloadHandler?: FileDownloadHandler;
    remoteParticipantsCount?: number;
    onActionButtonClick: (message: ChatMessage, setMessageReadBy: (readBy: {
        id: string;
        displayName: string;
    }[]) => void) => void;
    /**
     * Optional callback to override render of the avatar.
     *
     * @param userId - user Id
     */
    onRenderAvatar?: OnRenderAvatarCallback;
    /**
     * Optional function to provide customized date format.
     * @beta
     */
    onDisplayDateTimeString?: (messageDate: Date) => string;
};
/** @private */
export declare const ChatMessageComponentAsMessageBubble: React.MemoExoticComponent<(props: ChatMessageComponentAsMessageBubbleProps) => JSX.Element>;
export {};
//# sourceMappingURL=ChatMessageComponentAsMessageBubble.d.ts.map