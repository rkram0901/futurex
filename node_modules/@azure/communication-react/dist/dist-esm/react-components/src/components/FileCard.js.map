{"version":3,"file":"FileCard.js","sourceRoot":"","sources":["../../../../../preprocess-dist/react-components/src/components/FileCard.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport {\n// eslint-disable-next-line no-restricted-imports\nIcon, IProgressIndicatorStyleProps, IProgressIndicatorStyles, IStyleFunctionOrObject, mergeStyles, ProgressIndicator, Stack, Text, useTheme } from '@fluentui/react';\nimport { getFileTypeIconProps } from '@fluentui/react-file-type-icons';\nimport React from 'react';\nimport { _pxToRem } from '@internal/acs-ui-common';\nimport { Announcer } from './Announcer';\nimport { useEffect, useState } from 'react';\nimport { _FileUploadCardsStrings } from './FileUploadCards';\nimport { useLocaleFileCardStringsTrampoline } from './utils/common';\n\n/**\n * @internal\n * _FileCard Component Props.\n */\nexport interface _FileCardProps {\n  /**\n   * File name.\n   */\n  fileName: string;\n  /**\n   * Extension of the file used for rendering the file icon.\n   */\n  fileExtension: string;\n  /**\n   * File upload progress percentage between 0 and 1.\n   * File transfer progress indicator is only shown when the value is greater than 0 and less than 1.\n   */\n  progress?: number;\n  /**\n   * Icon to display for actions like download, upload, etc. along the file name.\n   */\n  actionIcon?: JSX.Element;\n  /**\n   * Function that runs when actionIcon is clicked\n   */\n  actionHandler?: () => void;\n  /**\n   * Optional arialabel strings for file cards\n   */\n  strings?: _FileUploadCardsStrings;\n}\n\n/**\n * @internal\n * A component for displaying a file card with file icon and progress bar.\n */\nexport const _FileCard = (props: _FileCardProps): JSX.Element => {\n  const {\n    fileName,\n    fileExtension,\n    progress,\n    actionIcon\n  } = props;\n  const theme = useTheme();\n  const [announcerString, setAnnouncerString] = useState<string | undefined>(undefined);\n  const localeStrings = useLocaleFileCardStringsTrampoline();\n  const uploadStartedString = props.strings?.uploading ?? localeStrings.uploading;\n  const uploadCompletedString = props.strings?.uploadCompleted ?? localeStrings.uploadCompleted;\n  const showProgressIndicator = progress !== undefined && progress > 0 && progress < 1;\n  useEffect(() => {\n    if (showProgressIndicator) {\n      setAnnouncerString(`${uploadStartedString} ${fileName}`);\n    } else if (progress === 1) {\n      setAnnouncerString(`${fileName} ${uploadCompletedString}`);\n    } else {\n      setAnnouncerString(undefined);\n    }\n  }, [progress, showProgressIndicator, fileName, uploadStartedString, uploadCompletedString]);\n  const progressBarThicknessPx = 4;\n  const containerClassName = mergeStyles({\n    width: '12rem',\n    background: theme.palette.neutralLighter,\n    borderRadius: theme.effects.roundedCorner4,\n    border: `${_pxToRem(1)} solid ${theme.palette.neutralQuaternary}`,\n    cursor: 'pointer'\n  });\n  const fileInfoWrapperClassName = mergeStyles({\n    padding: _pxToRem(12),\n    // To make space for the progress indicator.\n    paddingBottom: showProgressIndicator ? _pxToRem(12 - progressBarThicknessPx * 2) : _pxToRem(12)\n  });\n  const fileNameContainerClassName = mergeStyles({\n    paddingLeft: _pxToRem(4),\n    minWidth: '75%',\n    maxWidth: '75%'\n  });\n  const fileNameTextClassName = mergeStyles({\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    lineHeight: 'normal',\n    whiteSpace: 'nowrap',\n    paddingRight: _pxToRem(4)\n  });\n  const actionIconClassName = mergeStyles({\n    cursor: 'pointer'\n  });\n  const progressIndicatorStyles: IStyleFunctionOrObject<IProgressIndicatorStyleProps, IProgressIndicatorStyles> = {\n    itemProgress: {\n      padding: `${_pxToRem(progressBarThicknessPx - 1)} 0`,\n      // item progress height won't apply without an explicit padding\n      // To make the progress indicator border curve along the bottom of file card.\n      borderRadius: `0 0 ${theme.effects.roundedCorner4} ${theme.effects.roundedCorner4}`\n    },\n    progressBar: {\n      height: _pxToRem(progressBarThicknessPx)\n    }\n  };\n  return <div data-is-focusable={true}>\n      <Announcer announcementString={announcerString} ariaLive={'polite'} />\n      <Stack className={containerClassName} onClick={() => {\n      props.actionHandler?.();\n    }}>\n        <Stack horizontal horizontalAlign=\"space-between\" verticalAlign=\"center\" className={fileInfoWrapperClassName}>\n          <Stack>\n            {/* We are not using <ChatCompositeIcon /> here as we currently do not support customizing these filetype icons. */}\n            <Icon data-ui-id={'filetype-icon'} {...getFileTypeIconProps({\n            extension: fileExtension,\n            size: 24,\n            imageFileType: 'svg'\n          })} />\n          </Stack>\n          <Stack className={fileNameContainerClassName}>\n            <Text className={fileNameTextClassName}>{fileName}</Text>\n          </Stack>\n          <Stack verticalAlign=\"center\" className={actionIconClassName}>\n            {actionIcon && actionIcon}\n          </Stack>\n        </Stack>\n        {showProgressIndicator && <ProgressIndicator percentComplete={progress} styles={progressIndicatorStyles} />}\n      </Stack>\n    </div>;\n};\"../../../acs-ui-common/src\""]}