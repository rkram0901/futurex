"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.mountWithProviderAndGetComponent = exports.mountWithProvider = exports.createTestContainer = exports.EmptyThemeProvider = void 0;
var react_bindings_1 = require("@fluentui/react-bindings");
var react_northstar_styles_renderer_1 = require("@fluentui/react-northstar-styles-renderer");
var styles_1 = require("@fluentui/styles");
var enzyme_1 = require("enzyme");
var React = require("react");
var EmptyThemeProvider = function (_a) {
    var children = _a.children, disableAnimations = _a.disableAnimations, _b = _a.renderer, renderer = _b === void 0 ? react_northstar_styles_renderer_1.noopRenderer : _b, telemetry = _a.telemetry, _c = _a.theme, theme = _c === void 0 ? styles_1.emptyTheme : _c, _d = _a.rtl, rtl = _d === void 0 ? false : _d;
    var value = {
        renderer: renderer,
        target: document,
        disableAnimations: disableAnimations,
        rtl: rtl,
        theme: theme,
        telemetry: telemetry,
        performance: {},
    };
    return React.createElement(react_bindings_1.Unstable_FluentContextProvider, { value: value }, children);
};
exports.EmptyThemeProvider = EmptyThemeProvider;
/**
 * Creates a dummy container to be passed as an `attachTo` option into enzyme's `mount` function.
 * Enables actual JSDOM introspection.
 * Make sure you call `removeTestContainer` at the end of your test to clean up after yourself.
 */
function createTestContainer() {
    var testContainer = document.createElement('div');
    document.body.appendChild(testContainer);
    var removeTestContainer = function () {
        if (testContainer && testContainer.parentNode) {
            testContainer.parentNode.removeChild(testContainer);
        }
    };
    return { testContainer: testContainer, removeTestContainer: removeTestContainer };
}
exports.createTestContainer = createTestContainer;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
var mountWithProvider = function (node, options) {
    return enzyme_1.mount(node, __assign({ wrappingComponent: exports.EmptyThemeProvider }, options));
};
exports.mountWithProvider = mountWithProvider;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
var mountWithProviderAndGetComponent = function (Component, elementToMount, options) {
    return exports.mountWithProvider(elementToMount, options).find(Component);
};
exports.mountWithProviderAndGetComponent = mountWithProviderAndGetComponent;
