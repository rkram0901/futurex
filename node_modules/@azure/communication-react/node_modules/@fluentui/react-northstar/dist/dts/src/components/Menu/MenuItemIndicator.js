"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuItemIndicator = exports.menuItemIndicatorClassName = void 0;
var React = require("react");
var react_bindings_1 = require("@fluentui/react-bindings");
var accessibility_1 = require("@fluentui/accessibility");
var PropTypes = require("prop-types");
var utils_1 = require("../../utils");
exports.menuItemIndicatorClassName = 'ui-menu__itemindicator';
/**
 * A MenuItemIndicator allows a user to have a dedicated component that can be targeted from the theme.
 */
exports.MenuItemIndicator = React.forwardRef(function (props, ref) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.MenuItemIndicator.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var className = props.className, children = props.children, design = props.design, styles = props.styles, variables = props.variables, content = props.content, iconOnly = props.iconOnly, vertical = props.vertical, inSubmenu = props.inSubmenu, active = props.active, primary = props.primary, underlined = props.underlined;
    var classes = react_bindings_1.useStyles(exports.MenuItemIndicator.displayName, {
        className: exports.menuItemIndicatorClassName,
        mapPropsToStyles: function () { return ({
            iconOnly: iconOnly,
            vertical: vertical,
            inSubmenu: inSubmenu,
            active: active,
            primary: primary,
            underlined: underlined,
        }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var getA11Props = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.MenuItemIndicator.displayName,
        rtl: context.rtl,
    });
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.MenuItemIndicator.handledProps, props);
    var element = (React.createElement(ElementType, __assign({}, getA11Props('root', __assign({ className: classes.root, ref: ref }, unhandledProps))), react_bindings_1.childrenExist(children) ? children : content));
    setEnd();
    return element;
});
exports.MenuItemIndicator.displayName = 'MenuItemIndicator';
exports.MenuItemIndicator.defaultProps = {
    as: 'span',
    accessibility: accessibility_1.indicatorBehavior,
};
exports.MenuItemIndicator.propTypes = __assign(__assign({}, utils_1.commonPropTypes.createCommon()), { iconOnly: PropTypes.bool, vertical: PropTypes.bool, inSubmenu: PropTypes.bool, active: PropTypes.bool, primary: PropTypes.bool, underlined: PropTypes.bool });
exports.MenuItemIndicator.handledProps = Object.keys(exports.MenuItemIndicator.propTypes);
exports.MenuItemIndicator.shorthandConfig = {
    mappedProp: 'content',
};
