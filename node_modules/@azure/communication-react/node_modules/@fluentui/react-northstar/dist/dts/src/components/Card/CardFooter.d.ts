import { Accessibility } from '@fluentui/accessibility';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import { FluentComponentStaticProps } from '../../types';
import { ChildrenComponentProps, UIComponentProps } from '../../utils';
export interface CardFooterProps extends UIComponentProps, ChildrenComponentProps {
    /**
     * Accessibility behavior if overridden by the user.
     */
    accessibility?: Accessibility<never>;
    /** A footer can be fitted, without any space above or below it. */
    fitted?: boolean;
}
export declare type CardFooterStylesProps = Pick<CardFooterProps, 'fitted'>;
export declare const cardFooterClassName = "ui-card__footer";
/**
 * A CardFooter is used to display data in Card component footer
 */
export declare const CardFooter: (<TExtendedElementType extends React.ElementType<any> = "div">(props: React.RefAttributes<HTMLDivElement> & Omit<import("@fluentui/react-bindings").PropsOfElement<TExtendedElementType>, "as" | keyof CardFooterProps> & {
    as?: TExtendedElementType;
} & CardFooterProps) => JSX.Element) & {
    propTypes?: React.WeakValidationMap<CardFooterProps> & {
        as: React.Requireable<string | ((props: any, context?: any) => any) | (new (props: any, context?: any) => any)>;
    };
    contextTypes?: PropTypes.ValidationMap<any>;
    defaultProps?: Partial<CardFooterProps & {
        as: "div";
    }>;
    displayName?: string;
    readonly __PRIVATE_PROPS?: React.RefAttributes<HTMLDivElement> & Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & {
        ref?: React.Ref<HTMLDivElement>;
    }, "as" | keyof CardFooterProps> & {
        as?: "div";
    } & CardFooterProps;
} & FluentComponentStaticProps<CardFooterProps>;
