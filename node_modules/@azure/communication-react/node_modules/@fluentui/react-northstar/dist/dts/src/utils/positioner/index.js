"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.usePopper = exports.Popper = exports.partitionPopperPropsFromShorthand = exports.getScrollParent = exports.getBasePlacement = exports.createReferenceFromClick = void 0;
__exportStar(require("./types"), exports);
__exportStar(require("./types.internal"), exports);
var createReferenceFromClick_1 = require("./createReferenceFromClick");
Object.defineProperty(exports, "createReferenceFromClick", { enumerable: true, get: function () { return createReferenceFromClick_1.createReferenceFromClick; } });
var getBasePlacement_1 = require("./getBasePlacement");
Object.defineProperty(exports, "getBasePlacement", { enumerable: true, get: function () { return getBasePlacement_1.getBasePlacement; } });
var getScrollParent_1 = require("./getScrollParent");
Object.defineProperty(exports, "getScrollParent", { enumerable: true, get: function () { return getScrollParent_1.getScrollParent; } });
var partitionPopperPropsFromShorthand_1 = require("./partitionPopperPropsFromShorthand");
Object.defineProperty(exports, "partitionPopperPropsFromShorthand", { enumerable: true, get: function () { return partitionPopperPropsFromShorthand_1.partitionPopperPropsFromShorthand; } });
var Popper_1 = require("./Popper");
Object.defineProperty(exports, "Popper", { enumerable: true, get: function () { return Popper_1.Popper; } });
var usePopper_1 = require("./usePopper");
Object.defineProperty(exports, "usePopper", { enumerable: true, get: function () { return usePopper_1.usePopper; } });
