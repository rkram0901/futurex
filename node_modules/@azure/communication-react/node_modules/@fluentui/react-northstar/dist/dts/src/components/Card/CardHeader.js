"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CardHeader = exports.cardHeaderClassName = void 0;
var react_bindings_1 = require("@fluentui/react-bindings");
var PropTypes = require("prop-types");
var React = require("react");
var utils_1 = require("../../utils");
exports.cardHeaderClassName = 'ui-card__header';
/**
 * A CardHeader is used to display data in Card header.
 */
exports.CardHeader = React.forwardRef(function (props, ref) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.CardHeader.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var className = props.className, design = props.design, styles = props.styles, variables = props.variables, children = props.children, fitted = props.fitted;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.CardHeader.handledProps, props);
    var getA11yProps = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.CardHeader.displayName,
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.CardHeader.displayName, {
        className: exports.cardHeaderClassName,
        mapPropsToStyles: function () { return ({ fitted: fitted }); },
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var element = (React.createElement(ElementType, __assign({}, getA11yProps('root', __assign({ className: classes.root, ref: ref }, unhandledProps))), children));
    setEnd();
    return element;
});
exports.CardHeader.displayName = 'CardHeader';
exports.CardHeader.propTypes = __assign(__assign({}, utils_1.commonPropTypes.createCommon()), { fitted: PropTypes.bool });
exports.CardHeader.handledProps = Object.keys(exports.CardHeader.propTypes);
exports.CardHeader.create = utils_1.createShorthandFactory({ Component: exports.CardHeader });
