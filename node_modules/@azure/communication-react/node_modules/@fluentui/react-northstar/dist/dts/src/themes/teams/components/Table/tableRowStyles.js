"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tableRowStyles = void 0;
var getBorderFocusStyles_1 = require("../../getBorderFocusStyles");
exports.tableRowStyles = {
    root: function (_a) {
        var p = _a.props, v = _a.variables, siteVariables = _a.theme.siteVariables;
        var borderFocusStyles = getBorderFocusStyles_1.getBorderFocusStyles({
            variables: siteVariables,
        });
        return __assign(__assign(__assign({ display: 'flex', flexDirection: 'row', alignItems: 'center', fontSize: v.bodyFontSize, height: v.defaultRowHeight, color: v.color, backgroundColor: v.backgroundColor, borderWidth: v.borderWidth, borderStyle: 'solid', borderColor: 'transparent', borderBottomColor: v.rowBorderColor, padding: v.rowPadding, position: 'relative', width: '100%', ':hover': {
                color: v.hoverColor,
                backgroundColor: v.backgroundHoverColor,
                borderColor: v.rowBorderHoverColor,
            } }, borderFocusStyles), (p.header && {
            fontSize: v.headerFontSize,
            ':hover': {
                color: v.color,
                backgroundColor: v.backgroundColor,
            },
        })), (p.compact && {
            height: v.compactRowHeight,
        }));
    },
};
