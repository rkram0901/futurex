"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extraConformanceTests = void 0;
var _ = require("lodash");
var path = require("path");
var parseDocblock_1 = require("@fluentui/scripts/gulp/plugins/util/parseDocblock");
/**
 * northstar-specific tests that run using react-conformance
 */
exports.extraConformanceTests = {
    /** Component has a docblock with 5 to 25 words */
    'has-docblock': function (componentInfo, testInfo) {
        var maxWords = 25;
        var minWords = 5;
        it("has a docblock with " + minWords + " to " + maxWords + " words (has-docblock)", function () {
            var docblock = parseDocblock_1.default(componentInfo.description);
            var description = docblock.description;
            var wordCount = _.words(description).length;
            expect(wordCount).toBeGreaterThanOrEqual(minWords);
            expect(wordCount).toBeLessThanOrEqual(maxWords);
        });
    },
    /** If the component is a subcomponent, ensure its parent has the subcomponent as static property */
    'is-static-property-of-parent': function (componentInfo, testInfo) {
        var componentPath = testInfo.componentPath, displayName = testInfo.displayName, Component = testInfo.Component;
        var componentFolder = componentPath.replace(path.basename(componentPath) + path.extname(componentPath), '');
        var dirName = path.basename(componentFolder).replace(path.extname(componentFolder), '');
        var isParent = displayName === dirName;
        if (isParent) {
            return;
        }
        it("is a static property of its parent (is-static-property-of-parent)", function () {
            var parentComponentFile = require(path.join(componentFolder, dirName));
            var ParentComponent = parentComponentFile.default || parentComponentFile[dirName];
            expect(ParentComponent[displayName]).toBe(Component);
        });
    },
};
