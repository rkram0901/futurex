"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var commonTests_1 = require("test/specs/commonTests");
var Alert_1 = require("src/components/Alert/Alert");
var Box_1 = require("src/components/Box/Box");
var AlertDismissAction_1 = require("src/components/Alert/AlertDismissAction");
var alertImplementsShorthandProp = commonTests_1.implementsShorthandProp(Alert_1.Alert);
describe('Alert', function () {
    commonTests_1.isConformant(Alert_1.Alert, { testPath: __filename, constructorName: 'Alert', autoControlledProps: ['visible'] });
    commonTests_1.handlesAccessibility(Alert_1.Alert, { defaultRootRole: undefined, requiredProps: { content: 'test' } });
    commonTests_1.handlesAccessibility(Alert_1.Alert, {
        defaultRootRole: undefined,
        partSelector: "." + Alert_1.alertSlotClassNames.body,
        requiredProps: { content: 'test' },
    });
    commonTests_1.handlesAccessibility(Alert_1.Alert, {
        defaultRootRole: 'alert',
        partSelector: "." + Alert_1.alertSlotClassNames.body,
        requiredProps: { content: 'test', warning: true },
    });
    alertImplementsShorthandProp('dismissAction', AlertDismissAction_1.AlertDismissAction, {
        mapsValueToProp: 'content',
        requiredProps: { dismissible: true },
    });
    alertImplementsShorthandProp('content', Box_1.Box, { mapsValueToProp: 'children' });
    describe('compliance', function () {
        test('default', function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, commonTests_1.htmlIsAccessibilityCompliant(React.createElement(Alert_1.Alert, { content: "Test" }))];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); });
        test('danger', function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, commonTests_1.htmlIsAccessibilityCompliant(React.createElement(Alert_1.Alert, { danger: true, content: "Test" }))];
                case 1: return [2 /*return*/, _a.sent()];
            }
        }); }); });
    });
});
