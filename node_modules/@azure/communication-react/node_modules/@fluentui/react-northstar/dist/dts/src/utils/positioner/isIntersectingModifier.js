"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isIntersectingModifier = void 0;
var core_1 = require("@popperjs/core");
exports.isIntersectingModifier = {
    name: 'is-intersecting-modifier',
    enabled: true,
    phase: 'main',
    requires: ['preventOverflow'],
    fn: function (_a) {
        var state = _a.state, name = _a.name;
        var popperRect = state.rects.popper;
        var popperAltOverflow = core_1.detectOverflow(state, { altBoundary: true });
        var isIntersectingTop = popperAltOverflow.top < popperRect.height && popperAltOverflow.top > 0;
        var isIntersectingBottom = popperAltOverflow.bottom < popperRect.height && popperAltOverflow.bottom > 0;
        var isIntersecting = isIntersectingTop || isIntersectingBottom;
        state.modifiersData[name] = {
            isIntersecting: isIntersecting,
        };
        state.attributes.popper = __assign(__assign({}, state.attributes.popper), { 'data-popper-is-intersecting': isIntersecting });
    },
};
