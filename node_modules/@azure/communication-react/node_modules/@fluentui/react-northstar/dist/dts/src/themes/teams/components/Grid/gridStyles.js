"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.gridStyles = void 0;
var getCSSTemplateValue = function (template) {
    var templateAsNumber = Number(template);
    return !isNaN(templateAsNumber) && templateAsNumber > 0 ? "repeat(" + template + ", 1fr)" : String(template);
};
exports.gridStyles = {
    root: function (_a) {
        var props = _a.props, _b = _a.variables, height = _b.height, width = _b.width, defaultColumnCount = _b.defaultColumnCount, gridGap = _b.gridGap, padding = _b.padding;
        var rows = props.rows, _c = props.columns, columns = _c === void 0 ? !props.rows && defaultColumnCount : _c;
        return __assign(__assign(__assign(__assign({ height: height, width: width, padding: padding, gridGap: gridGap, display: 'grid', justifyContent: 'space-evenly' }, (rows && !columns && { gridAutoFlow: 'column' })), (rows && {
            gridTemplateRows: getCSSTemplateValue(rows),
            msGridRows: getCSSTemplateValue(rows),
        })), (columns && {
            gridTemplateColumns: getCSSTemplateValue(columns),
            msGridColumns: getCSSTemplateValue(columns),
        })), { '& > *': { outlineOffset: '-3px' } });
    },
};
