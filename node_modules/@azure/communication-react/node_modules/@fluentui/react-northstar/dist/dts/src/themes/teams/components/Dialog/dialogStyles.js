"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.dialogStyles = void 0;
var Button_1 = require("../../../../components/Button/Button");
var Flex_1 = require("../../../../components/Flex/Flex");
exports.dialogStyles = {
    root: function (_a) {
        var _b;
        var v = _a.variables;
        return (_b = {
                background: v.rootBackground,
                border: v.border,
                borderRadius: v.rootBorderRadius,
                outline: 'none',
                padding: v.rootPadding,
                position: 'relative',
                width: v.rootWidth,
                maxWidth: '100vw',
                maxHeight: '100vh',
                overflowX: 'hidden',
                overflowY: 'auto',
                display: 'grid',
                gridTemplateColumns: '1fr auto',
                msGridColumns: '1fr auto',
                boxShadow: v.boxShadow,
                color: v.foregroundColor
            },
            _b["@media screen and (max-width: " + v.rootWidth + ")"] = {
                padding: v.rootPaddingZoom,
            },
            _b);
    },
    footer: function () { return ({
        gridColumn: '1 / -1',
        gridRow: 3,
        msGridRow: 3,
    }); },
    actions: function (_a) {
        var _b, _c;
        var v = _a.variables;
        return (_b = {
                display: 'flex',
                width: '100%'
            },
            _b["& ." + Flex_1.flexClassName] = {
                flexWrap: 'wrap',
                width: '100%',
            },
            _b["@media screen and (max-width: " + v.footerActionsBreakpoint + ")"] = (_c = {},
                _c["& ." + Button_1.buttonClassName] = {
                    width: '100%',
                    maxWidth: '100%',
                    margin: 0,
                },
                _c["& ." + Flex_1.flexClassName + " > :not(:last-child)"] = {
                    marginBottom: '0.5rem',
                },
                _c),
            _b);
    },
    content: function (_a) {
        var _b;
        var v = _a.variables;
        return (_b = {
                margin: v.contentMargin,
                gridColumn: '1 / span 2',
                gridRow: 2,
                msGridColumn: 1,
                msGridColumnSpan: 2,
                msGridRow: 2,
                justifySelf: 'left',
                width: '100%'
            },
            _b["@media screen and (max-width: " + v.rootWidth + "), screen and (max-height: 400px)"] = {
                maxHeight: '100%',
                overflow: 'unset',
            },
            _b);
    },
    header: function (_a) {
        var v = _a.variables;
        return ({
            margin: v.headerMargin,
            gridRow: 1,
            msGridRow: 1,
            gridColumn: 1,
            msGridColumn: 1,
            justifySelf: 'left',
            fontSize: v.headerFontSize,
            fontWeight: v.headerFontWeight,
        });
    },
    headerAction: function (_a) {
        var v = _a.variables;
        return ({
            gridRow: 1,
            msGridRow: 1,
            gridColumn: 2,
            msGridColumn: 2,
            color: v.foregroundColor,
            margin: v.headerActionMargin,
        });
    },
    overlay: function (_a) {
        var p = _a.props, v = _a.variables;
        return (__assign({ alignItems: 'center', background: 'transparent', bottom: 0, display: 'flex', flexDirection: 'column', justifyContent: 'center', left: 0, overflow: 'auto', position: 'fixed', right: 0, top: 0, zIndex: v.overlayZIndex }, (p.backdrop && { background: v.overlayBackground })));
    },
};
