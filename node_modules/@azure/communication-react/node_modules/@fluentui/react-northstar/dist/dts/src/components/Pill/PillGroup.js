"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PillGroup = exports.pillGroupClassName = void 0;
var React = require("react");
var accessibility_1 = require("@fluentui/accessibility");
var react_bindings_1 = require("@fluentui/react-bindings");
var utils_1 = require("../../utils");
var pillContext_1 = require("./pillContext");
exports.pillGroupClassName = 'ui-pills';
/**
 * A PillGroup can be used as container for Pill.
 */
exports.PillGroup = React.forwardRef(function (props, ref) {
    var _a;
    var context = react_bindings_1.useFluentContext();
    var _b = react_bindings_1.useTelemetry(exports.PillGroup.displayName, context.telemetry), setStart = _b.setStart, setEnd = _b.setEnd;
    setStart();
    var accessibility = props.accessibility, children = props.children, className = props.className, design = props.design, styles = props.styles, variables = props.variables;
    var getA11Props = react_bindings_1.useAccessibility(accessibility, {
        debugName: exports.PillGroup.displayName,
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.PillGroup.displayName, {
        className: exports.pillGroupClassName,
        mapPropsToInlineStyles: function () { return ({ className: className, design: design, styles: styles, variables: variables }); },
        rtl: context.rtl,
    }).classes;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.PillGroup.handledProps, props);
    var pillBehavior = (_a = getA11Props.unstable_behaviorDefinition().childBehaviors) === null || _a === void 0 ? void 0 : _a.pill;
    var childProps = React.useMemo(function () { return ({
        pillBehavior: pillBehavior,
    }); }, [pillBehavior]);
    var element = getA11Props.unstable_wrapWithFocusZone(React.createElement(ElementType, __assign({}, getA11Props('root', __assign(__assign({ className: classes.root, ref: ref }, utils_1.rtlTextContainer.getAttributes({ forElements: [children] })), unhandledProps))),
        React.createElement(pillContext_1.PillsContextProvider, { value: childProps }, children)));
    setEnd();
    return element;
});
exports.PillGroup.displayName = 'PillGroup';
exports.PillGroup.propTypes = utils_1.commonPropTypes.createCommon();
exports.PillGroup.defaultProps = {
    accessibility: accessibility_1.PillGroupBehavior,
};
exports.PillGroup.handledProps = Object.keys(exports.PillGroup.propTypes);
exports.PillGroup.shorthandConfig = {
    mappedProp: 'content',
};
