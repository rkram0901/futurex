{"version":3,"sources":["components/Header/HeaderDescription.tsx"],"names":["headerDescriptionClassName","HeaderDescription","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","children","content","color","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","defaultProps","as","Object","keys","create","Component","mappedProp"],"mappings":";;;;;AACA;;AAEA;;AAYA;;;;;;AAqBO,IAAMA,0BAA0B,GAAG,wBAAnC;;;AAGP;AACA;AACA;AACO,IAAMC,iBAAiB,gBAAIC,KAAK,CAACC,UAAN,CAA+D,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC/G,MAAMC,OAAO,GAAG,sCAAhB;;AACA,sBAA6B,iCAAaL,iBAAiB,CAACM,WAA/B,EAA4CD,OAAO,CAACE,SAApD,CAA7B;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,EAAAA,QAAQ;AACR,MAAQE,QAAR,GAA2EP,KAA3E,CAAQO,QAAR;AAAA,MAAkBC,OAAlB,GAA2ER,KAA3E,CAAkBQ,OAAlB;AAAA,MAA2BC,KAA3B,GAA2ET,KAA3E,CAA2BS,KAA3B;AAAA,MAAkCC,SAAlC,GAA2EV,KAA3E,CAAkCU,SAAlC;AAAA,MAA6CC,MAA7C,GAA2EX,KAA3E,CAA6CW,MAA7C;AAAA,MAAqDC,MAArD,GAA2EZ,KAA3E,CAAqDY,MAArD;AAAA,MAA6DC,SAA7D,GAA2Eb,KAA3E,CAA6Da,SAA7D;AACA,MAAMC,WAAW,GAAG,mCAAed,KAAf,CAApB;AACA,MAAMe,cAAc,GAAG,sCAAkBlB,iBAAiB,CAACmB,YAApC,EAAkDhB,KAAlD,CAAvB;AAEA,MAAMiB,YAAY,GAAG,qCAAwBjB,KAAK,CAACkB,aAA9B,EAA6C;AAChEC,IAAAA,SAAS,EAAEtB,iBAAiB,CAACM,WADmC;AAEhEiB,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAFmD,GAA7C,CAArB;;AAKA,mBAAoB,8BAAwCvB,iBAAiB,CAACM,WAA1D,EAAuE;AACzFO,IAAAA,SAAS,EAAEd,0BAD8E;AAEzFyB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBZ,QAAAA,KAAK,EAALA;AADuB,OAAP;AAAA,KAFuE;AAKzFa,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BZ,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KALiE;AAWzFO,IAAAA,GAAG,EAAElB,OAAO,CAACkB;AAX4E,GAAvE,CAApB;AAAA,MAAQG,OAAR,cAAQA,OAAR;;AAcA,MAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdP,IAAAA,SAAS,EAAEa,OAAO,CAACE,IADL;AAEdxB,IAAAA,GAAG,EAAHA;AAFc,KAGXc,cAHW,EAIXW,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAACrB,QAAD,EAAWC,OAAX;AAAf,GAA/B,CAJW,EADlB,EAQG,0BAAcD,QAAd,IAA0BA,QAA1B,GAAqCC,OARxC,CADF;AAYAF,EAAAA,MAAM;AACN,SAAOkB,OAAP;AACD,CAzCiC,CAA3B;;AA4CP3B,iBAAiB,CAACM,WAAlB,GAAgC,mBAAhC;AAEAN,iBAAiB,CAACgC,SAAlB,qBACKC,uBAAgBC,YAAhB,CAA6B;AAAEtB,EAAAA,KAAK,EAAE;AAAT,CAA7B,CADL;AAIAZ,iBAAiB,CAACmC,YAAlB,GAAiC;AAC/BC,EAAAA,EAAE,EAAE;AAD2B,CAAjC;AAIApC,iBAAiB,CAACmB,YAAlB,GAAiCkB,MAAM,CAACC,IAAP,CAAYtC,iBAAiB,CAACgC,SAA9B,CAAjC;AAEAhC,iBAAiB,CAACuC,MAAlB,GAA2B,mCAAuB;AAChDC,EAAAA,SAAS,EAAExC,iBADqC;AAEhDyC,EAAAA,UAAU,EAAE;AAFoC,CAAvB,CAA3B","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface HeaderDescriptionProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport const headerDescriptionClassName = 'ui-header__description';\nexport type HeaderDescriptionStylesProps = Pick<HeaderDescriptionProps, 'color'>;\n\n/**\n * A HeaderDescription provides more detailed information about the Header.\n */\nexport const HeaderDescription = (React.forwardRef<HTMLParagraphElement, HeaderDescriptionProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(HeaderDescription.displayName, context.telemetry);\n  setStart();\n  const { children, content, color, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(HeaderDescription.handledProps, props);\n\n  const getA11yProps = useAccessibility<never>(props.accessibility, {\n    debugName: HeaderDescription.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<HeaderDescriptionStylesProps>(HeaderDescription.displayName, {\n    className: headerDescriptionClassName,\n    mapPropsToStyles: () => ({\n      color,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'p', HTMLParagraphElement, HeaderDescriptionProps> &\n  FluentComponentStaticProps<HeaderDescriptionProps>;\n\nHeaderDescription.displayName = 'HeaderDescription';\n\nHeaderDescription.propTypes = {\n  ...commonPropTypes.createCommon({ color: true }),\n};\n\nHeaderDescription.defaultProps = {\n  as: 'p',\n};\n\nHeaderDescription.handledProps = Object.keys(HeaderDescription.propTypes) as any;\n\nHeaderDescription.create = createShorthandFactory({\n  Component: HeaderDescription,\n  mappedProp: 'content',\n});\n"],"file":"HeaderDescription.js"}