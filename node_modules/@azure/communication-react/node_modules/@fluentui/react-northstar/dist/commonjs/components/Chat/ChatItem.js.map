{"version":3,"sources":["components/Chat/ChatItem.tsx"],"names":["chatItemClassName","chatItemSlotClassNames","message","gutter","ChatItem","React","forwardRef","inputProps","ref","context","displayName","telemetry","setStart","setEnd","chatProps","density","v","accessibility","behaviors","item","props","attached","children","className","contentPosition","design","styles","variables","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","renderContent","gutterElement","Box","create","defaultProps","messageElement","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","as","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOfType","bool","oneOf","customPropTypes","itemShorthand","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport {\n  ChildrenComponentProps,\n  childrenExist,\n  commonPropTypes,\n  createShorthandFactory,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\nimport { useChatContextSelectors } from './chatContext';\nimport { ChatDensity } from './chatDensity';\nimport { ChatItemContextProvider } from './chatItemContext';\n\nexport interface ChatItemSlotClassNames {\n  message: string;\n  gutter: string;\n}\n\nexport const chatItemClassName = 'ui-chat__item';\nexport const chatItemSlotClassNames: ChatItemSlotClassNames = {\n  message: `${chatItemClassName}__message`,\n  gutter: `${chatItemClassName}__gutter`,\n};\n\nexport interface ChatItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /** Controls item's relation to other chat items. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Indicates whether the content is positioned at the start or the end. */\n  contentPosition?: 'start' | 'end';\n\n  /** Chat density. Is automatically set by the Chat. */\n  density?: ChatDensity;\n\n  /** Chat items can have a gutter. */\n  gutter?: ShorthandValue<BoxProps>;\n\n  /** Chat items can have a message. */\n  message?: ShorthandValue<BoxProps>;\n}\n\nexport type ChatItemStylesProps = Pick<ChatItemProps, 'attached' | 'contentPosition' | 'density'>;\n\n/**\n * A ChatItem is container for single entity in Chat (e.g. message, notification, etc).\n */\nexport const ChatItem = (React.forwardRef<HTMLLIElement, ChatItemProps>((inputProps, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatItem.displayName, context.telemetry);\n  setStart();\n\n  const chatProps = useChatContextSelectors({\n    density: v => v.density,\n    accessibility: v => v.behaviors.item,\n  });\n  const props = {\n    ...chatProps,\n    ...inputProps,\n  };\n\n  const {\n    accessibility,\n    attached,\n    children,\n    className,\n    contentPosition,\n    density,\n    design,\n    gutter,\n    message,\n    styles,\n    variables,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: ChatItem.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ChatItemStylesProps>(ChatItem.displayName, {\n    className: chatItemClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      contentPosition,\n      density,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const renderContent = () => {\n    const gutterElement = Box.create(gutter, {\n      defaultProps: () =>\n        getA11Props('gutter', {\n          className: chatItemSlotClassNames.gutter,\n          styles: resolvedStyles.gutter,\n        }),\n    });\n    const messageElement = Box.create(message, {\n      defaultProps: () =>\n        getA11Props('message', {\n          className: chatItemSlotClassNames.message,\n          styles: resolvedStyles.message,\n        }),\n    });\n\n    return (\n      <ChatItemContextProvider value={{ attached }}>\n        {(contentPosition === 'start' || density === 'compact') && gutterElement}\n        {messageElement}\n        {contentPosition === 'end' && density === 'comfy' && gutterElement}\n      </ChatItemContextProvider>\n    );\n  };\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatItem.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'li', HTMLLIElement, ChatItemProps> & FluentComponentStaticProps<ChatItemProps>;\n\nChatItem.displayName = 'ChatItem';\n\nChatItem.defaultProps = {\n  as: 'li',\n  contentPosition: 'start',\n  attached: false,\n};\nChatItem.propTypes = {\n  ...commonPropTypes.createCommon({ content: false }),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  contentPosition: PropTypes.oneOf(['start', 'end']),\n  density: PropTypes.oneOf<ChatDensity>(['comfy', 'compact']),\n  gutter: customPropTypes.itemShorthand,\n  message: customPropTypes.itemShorthand,\n};\nChatItem.handledProps = Object.keys(ChatItem.propTypes) as any;\n\nChatItem.create = createShorthandFactory({ Component: ChatItem, mappedProp: 'message' });\n"],"file":"ChatItem.js"}