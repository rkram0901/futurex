{"version":3,"sources":["components/Dialog/Dialog.tsx"],"names":["dialogClassName","dialogSlotClassNames","header","headerAction","content","overlay","footer","Dialog","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","actions","cancelButton","closeOnOutsideClick","confirmButton","trapFocus","trigger","backdrop","className","design","styles","variables","ElementType","unhandledProps","handledProps","contentRef","useRef","overlayRef","triggerRef","contentId","current","headerId","getA11yProps","debugName","actionHandlers","closeAndFocusTrigger","e","handleDialogCancel","stopPropagation","close","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","defaultValue","defaultOpen","value","open","initialValue","setOpen","useEffect","target","handleDialogConfirm","handleDialogOpen","handleCancelButtonOverrides","predefinedProps","onClick","buttonProps","handleConfirmButtonOverrides","handleOverlayClick","isInsideContentClick","isInsideOverlayClick","shouldClose","handleDocumentKeydown","getRefs","lastOverlayRef","pop","isLastOpenedDialog","targetIsBody","nodeName","keyboardKey","Escape","cancelElement","Button","overrideProps","confirmElement","defaultProps","primary","dialogActions","ButtonGroup","create","dialogContent","root","Header","as","text","iconOnly","Box","DialogFooter","triggerAccessibility","attributes","keyHandlers","keyActions","element","nestingRef","contentNode","propTypes","commonPropTypes","createCommon","children","customPropTypes","itemShorthand","PropTypes","bool","onCancel","func","onConfirm","onOpen","oneOfType","object","any","dialogBehavior","Object","keys","Footer","Component"],"mappings":"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","sourcesContent":["import { Accessibility, dialogBehavior, DialogBehaviorProps, getCode, keyboardKey } from '@fluentui/accessibility';\nimport {\n  FocusTrapZoneProps,\n  useAutoControlled,\n  useTelemetry,\n  useAccessibility,\n  useStyles,\n  useFluentContext,\n  useUnhandledProps,\n  getElementType,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nimport {\n  UIComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  doesNodeContainClick,\n  getOrGenerateIdFromShorthand,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { ButtonGroup } from '../Button/ButtonGroup';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Header, HeaderProps } from '../Header/Header';\nimport { Portal, TriggerAccessibility } from '../Portal/Portal';\nimport { Flex } from '../Flex/Flex';\nimport { DialogFooter, DialogFooterProps } from './DialogFooter';\n\nexport interface DialogSlotClassNames {\n  header: string;\n  headerAction: string;\n  content: string;\n  overlay: string;\n  footer: string;\n}\n\nexport interface DialogProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility;\n\n  /** A dialog can contain actions. */\n  actions?: ShorthandValue<BoxProps>;\n\n  /** A dialog can have a backdrop on its overlay. */\n  backdrop?: boolean;\n\n  /** A dialog can contain a cancel button. */\n  cancelButton?: ShorthandValue<ButtonProps>;\n\n  /** A dialog can be closed when a user clicks outside of it. */\n  closeOnOutsideClick?: boolean;\n\n  /** A dialog can contain a confirm button. */\n  confirmButton?: ShorthandValue<ButtonProps>;\n\n  /** A dialog can be open by default. */\n  defaultOpen?: boolean;\n\n  /** A dialog can contain a header. */\n  header?: ShorthandValue<HeaderProps>;\n\n  /** A dialog can contain a button next to the header. */\n  headerAction?: ShorthandValue<ButtonProps>;\n\n  /** A dialog can contain a footer. */\n  footer?: ShorthandValue<DialogFooterProps>;\n\n  /**\n   * Called after a user clicks the cancel button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onCancel?: ComponentEventHandler<DialogProps>;\n\n  /**\n   * Called after a user clicks the confirm button.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onConfirm?: ComponentEventHandler<DialogProps>;\n\n  /**\n   * Called after a user opens the dialog.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onOpen?: ComponentEventHandler<DialogProps>;\n\n  /** A dialog's open state can be controlled. */\n  open?: boolean;\n\n  /** A dialog can contain a overlay. */\n  overlay?: ShorthandValue<BoxProps>;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value. */\n  trapFocus?: boolean | FocusTrapZoneProps;\n\n  /** Element to be rendered in-place where the dialog is defined. */\n  trigger?: JSX.Element;\n}\n\nexport interface DialogState {\n  contentId?: string;\n  headerId?: string;\n  open?: boolean;\n}\n\nexport const dialogClassName = 'ui-dialog';\nexport const dialogSlotClassNames: DialogSlotClassNames = {\n  header: `${dialogClassName}__header`,\n  headerAction: `${dialogClassName}__headerAction`,\n  content: `${dialogClassName}__content`,\n  overlay: `${dialogClassName}__overlay`,\n  footer: `${dialogClassName}__footer`,\n};\n\nexport type DialogStylesProps = Required<Pick<DialogProps, 'backdrop'>>;\n\n/**\n * A Dialog displays important information on top of a page which requires a user's attention, confirmation, or interaction.\n * Dialogs are purposefully interruptive, so they should be used sparingly.\n *\n * @accessibility\n * Implements [ARIA Dialog (Modal)](https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal) design pattern.\n * @accessibilityIssues\n * [NVDA narrates dialog title and button twice](https://github.com/nvaccess/nvda/issues/10003)\n * [NVDA does not recognize the ARIA 1.1 values of aria-haspopup](https://github.com/nvaccess/nvda/issues/8235)\n * [Jaws does not announce token values of aria-haspopup](https://github.com/FreedomScientific/VFO-standards-support/issues/33)\n * [Issue 989517: VoiceOver narrates dialog content and button twice](https://bugs.chromium.org/p/chromium/issues/detail?id=989517)\n */\nexport const Dialog = (React.forwardRef<HTMLDivElement, DialogProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Dialog.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    content,\n    header,\n    actions,\n    cancelButton,\n    closeOnOutsideClick,\n    confirmButton,\n    headerAction,\n    overlay,\n    trapFocus,\n    trigger,\n    footer,\n    backdrop,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Dialog.handledProps, props);\n\n  const contentRef = React.useRef<HTMLElement>();\n  const overlayRef = React.useRef<HTMLElement>();\n  const triggerRef = React.useRef<HTMLElement>();\n\n  const contentId = React.useRef<string>();\n  contentId.current = getOrGenerateIdFromShorthand('dialog-content-', content, contentId.current);\n  const headerId = React.useRef<string>();\n  headerId.current = getOrGenerateIdFromShorthand('dialog-header-', header, headerId.current);\n\n  const getA11yProps = useAccessibility<DialogBehaviorProps>(accessibility, {\n    debugName: Dialog.displayName,\n    actionHandlers: {\n      closeAndFocusTrigger: e => {\n        handleDialogCancel(e);\n        e.stopPropagation();\n\n        _.invoke(triggerRef, 'current.focus');\n      },\n      close: e => handleDialogCancel(e),\n    },\n    mapPropsToBehavior: () => ({\n      headerId: headerId.current,\n      contentId: contentId.current,\n      trapFocus,\n      trigger,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<DialogStylesProps>(Dialog.displayName, {\n    className: dialogClassName,\n    mapPropsToStyles: () => ({\n      backdrop,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  React.useEffect(() => {\n    const target = contentRef?.current;\n    if (open) {\n      disableBodyScroll(target);\n    }\n    return () => {\n      if (open) {\n        enableBodyScroll(target);\n      }\n    };\n  }, [open]);\n\n  const handleDialogCancel = (e: Event | React.SyntheticEvent) => {\n    _.invoke(props, 'onCancel', e, { ...props, open: false });\n    setOpen(false);\n  };\n\n  const handleDialogConfirm = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onConfirm', e, { ...props, open: false });\n    setOpen(false);\n  };\n\n  const handleDialogOpen = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onOpen', e, { ...props, open: true });\n    setOpen(true);\n  };\n\n  const handleCancelButtonOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      handleDialogCancel(e);\n    },\n  });\n\n  const handleConfirmButtonOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      handleDialogConfirm(e);\n    },\n  });\n\n  const handleOverlayClick = (e: MouseEvent) => {\n    // Dialog has different conditions to close than Popup, so we don't need to iterate across all\n    // refs\n    const isInsideContentClick = doesNodeContainClick(contentRef.current, e, context.target);\n    const isInsideOverlayClick = doesNodeContainClick(overlayRef.current, e, context.target);\n\n    const shouldClose = !isInsideContentClick && isInsideOverlayClick;\n\n    if (shouldClose) {\n      handleDialogCancel(e);\n    }\n  };\n\n  const handleDocumentKeydown = (getRefs: Function) => (e: KeyboardEvent) => {\n    // if focus was lost from Dialog, for e.g. when click on Dialog's content\n    // and ESC is pressed, the opened Dialog should get closed and the trigger should get focus\n    const lastOverlayRef = getRefs().pop();\n    const isLastOpenedDialog: boolean = lastOverlayRef && lastOverlayRef.current === overlayRef.current;\n    const targetIsBody = (e.target as HTMLElement).nodeName === 'BODY';\n\n    if (targetIsBody && getCode(e) === keyboardKey.Escape && isLastOpenedDialog) {\n      handleDialogCancel(e);\n      _.invoke(triggerRef, 'current.focus');\n    }\n  };\n\n  const cancelElement = createShorthand(Button, cancelButton, {\n    overrideProps: handleCancelButtonOverrides,\n  });\n\n  const confirmElement = createShorthand(Button, confirmButton, {\n    defaultProps: () => ({\n      primary: true,\n    }),\n    overrideProps: handleConfirmButtonOverrides,\n  });\n\n  const dialogActions =\n    (cancelElement || confirmElement) &&\n    ButtonGroup.create(actions, {\n      defaultProps: () => ({\n        styles: resolvedStyles.actions,\n      }),\n      overrideProps: {\n        content: (\n          <Flex gap=\"gap.smaller\" hAlign=\"end\">\n            {cancelElement}\n            {confirmElement}\n          </Flex>\n        ),\n      },\n    });\n\n  const dialogContent = (\n    <Ref innerRef={contentRef}>\n      <ElementType\n        {...getA11yProps('popup', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {Header.create(header, {\n          defaultProps: () =>\n            getA11yProps('header', {\n              as: 'h2',\n              className: dialogSlotClassNames.header,\n              styles: resolvedStyles.header,\n            }),\n        })}\n        {createShorthand(Button, headerAction, {\n          defaultProps: () =>\n            getA11yProps('headerAction', {\n              className: dialogSlotClassNames.headerAction,\n              styles: resolvedStyles.headerAction,\n              text: true,\n              iconOnly: true,\n            }),\n        })}\n        {Box.create(content, {\n          defaultProps: () =>\n            getA11yProps('content', {\n              styles: resolvedStyles.content,\n              className: dialogSlotClassNames.content,\n            }),\n        })}\n        {DialogFooter.create(footer, {\n          overrideProps: {\n            content: dialogActions,\n            className: dialogSlotClassNames.footer,\n            styles: resolvedStyles.footer,\n          },\n        })}\n      </ElementType>\n    </Ref>\n  );\n\n  const triggerAccessibility: TriggerAccessibility = {\n    // refactor this when unstable_behaviorDefinition gets merged\n    attributes: accessibility(props).attributes.trigger,\n    keyHandlers: accessibility(props).keyActions.trigger,\n  };\n\n  const element = (\n    <Portal\n      onTriggerClick={handleDialogOpen}\n      open={open}\n      trapFocus={trapFocus}\n      trigger={trigger}\n      triggerAccessibility={triggerAccessibility}\n      triggerRef={triggerRef}\n    >\n      <Unstable_NestingAuto>\n        {(getRefs, nestingRef) => (\n          <>\n            <Ref\n              innerRef={(contentNode: HTMLElement) => {\n                overlayRef.current = contentNode;\n                nestingRef.current = contentNode;\n              }}\n            >\n              {Box.create(overlay, {\n                defaultProps: () => ({\n                  className: dialogSlotClassNames.overlay,\n                  styles: resolvedStyles.overlay,\n                }),\n                overrideProps: { content: dialogContent },\n              })}\n            </Ref>\n\n            {closeOnOutsideClick && (\n              <EventListener listener={handleOverlayClick} target={context.target} type=\"click\" capture />\n            )}\n            <EventListener listener={handleDocumentKeydown(getRefs)} target={context.target} type=\"keydown\" capture />\n          </>\n        )}\n      </Unstable_NestingAuto>\n    </Portal>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, DialogProps> &\n  FluentComponentStaticProps<DialogProps> & {\n    Footer: typeof DialogFooter;\n  };\n\nDialog.displayName = 'Dialog';\n\nDialog.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: 'shorthand',\n  }),\n  actions: customPropTypes.itemShorthand,\n  backdrop: PropTypes.bool,\n  headerAction: customPropTypes.itemShorthand,\n  cancelButton: customPropTypes.itemShorthand,\n  closeOnOutsideClick: PropTypes.bool,\n  confirmButton: customPropTypes.itemShorthand,\n  defaultOpen: PropTypes.bool,\n  header: customPropTypes.itemShorthand,\n  onCancel: PropTypes.func,\n  onConfirm: PropTypes.func,\n  onOpen: PropTypes.func,\n  open: PropTypes.bool,\n  overlay: customPropTypes.itemShorthand,\n  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  trigger: PropTypes.any,\n};\n\nDialog.defaultProps = {\n  accessibility: dialogBehavior,\n  actions: {},\n  backdrop: true,\n  closeOnOutsideClick: true,\n  overlay: {},\n  footer: {},\n  trapFocus: true,\n};\n\nDialog.handledProps = Object.keys(Dialog.propTypes) as any;\n\nDialog.Footer = DialogFooter;\n\nDialog.create = createShorthandFactory({\n  Component: Dialog,\n});\n"],"file":"Dialog.js"}