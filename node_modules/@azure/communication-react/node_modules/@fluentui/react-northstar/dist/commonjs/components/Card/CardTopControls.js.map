{"version":3,"sources":["components/Card/CardTopControls.tsx"],"names":["cardTopControlsClassName","CardTopControls","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","Object","keys","create","Component"],"mappings":";;;;;AACA;;AASA;;AAGA;;;;;;AAUO,IAAMA,wBAAwB,GAAG,sBAAjC;AAEP;AACA;AACA;;;AACO,IAAMC,eAAe,gBAAIC,KAAK,CAACC,UAAN,CAAuD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACrG,MAAMC,OAAO,GAAG,sCAAhB;;AACA,sBAA6B,iCAAaL,eAAe,CAACM,WAA7B,EAA0CD,OAAO,CAACE,SAAlD,CAA7B;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,EAAAA,QAAQ;AAER,MAAQE,SAAR,GAA2DP,KAA3D,CAAQO,SAAR;AAAA,MAAmBC,MAAnB,GAA2DR,KAA3D,CAAmBQ,MAAnB;AAAA,MAA2BC,MAA3B,GAA2DT,KAA3D,CAA2BS,MAA3B;AAAA,MAAmCC,SAAnC,GAA2DV,KAA3D,CAAmCU,SAAnC;AAAA,MAA8CC,QAA9C,GAA2DX,KAA3D,CAA8CW,QAA9C;AACA,MAAMC,WAAW,GAAG,mCAAeZ,KAAf,CAApB;AACA,MAAMa,cAAc,GAAG,sCAAkBhB,eAAe,CAACiB,YAAlC,EAAgDd,KAAhD,CAAvB;AACA,MAAMe,YAAY,GAAG,qCAAiBf,KAAK,CAACgB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAEpB,eAAe,CAACM,WAD8B;AAEzDe,IAAAA,GAAG,EAAEhB,OAAO,CAACgB;AAF4C,GAAtC,CAArB;;AAKA,mBAAoB,8BAAsCrB,eAAe,CAACM,WAAtD,EAAmE;AACrFI,IAAAA,SAAS,EAAEX,wBAD0E;AAErFuB,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BZ,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAF6D;AAQrFQ,IAAAA,GAAG,EAAEhB,OAAO,CAACgB;AARwE,GAAnE,CAApB;AAAA,MAAQE,OAAR,cAAQA,OAAR;;AAWA,MAAMC,OAAO,gBACX,oBAAC,WAAD,EACMN,YAAY,CAAC,MAAD;AACdR,IAAAA,SAAS,EAAEa,OAAO,CAACE,IADL;AAEdrB,IAAAA,GAAG,EAAHA;AAFc,KAGXY,cAHW,EADlB,EAOGF,QAPH,CADF;AAWAL,EAAAA,MAAM;AACN,SAAOe,OAAP;AACD,CArC+B,CAAzB;;AAwCPxB,eAAe,CAACM,WAAhB,GAA8B,iBAA9B;AAEAN,eAAe,CAAC0B,SAAhB,qBACKC,uBAAgBC,YAAhB,EADL;AAIA5B,eAAe,CAACiB,YAAhB,GAA+BY,MAAM,CAACC,IAAP,CAAY9B,eAAe,CAAC0B,SAA5B,CAA/B;AAEA1B,eAAe,CAAC+B,MAAhB,GAAyB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEhC;AAAb,CAAvB,CAAzB","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardTopControlsProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n}\n\nexport type CardTopControlsStylesProps = never;\nexport const cardTopControlsClassName = 'ui-card__topcontrols';\n\n/**\n * A CardTopControls is used to render control elements in the top of a Card component.\n */\nexport const CardTopControls = (React.forwardRef<HTMLDivElement, CardTopControlsProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardTopControls.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardTopControls.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardTopControls.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardTopControlsStylesProps>(CardTopControls.displayName, {\n    className: cardTopControlsClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, CardTopControlsProps> &\n  FluentComponentStaticProps<CardTopControlsProps>;\n\nCardTopControls.displayName = 'CardTopControls';\n\nCardTopControls.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nCardTopControls.handledProps = Object.keys(CardTopControls.propTypes) as any;\n\nCardTopControls.create = createShorthandFactory({ Component: CardTopControls });\n"],"file":"CardTopControls.js"}