{"version":3,"sources":["components/Dropdown/DropdownSearchInput.tsx"],"names":["dropdownSearchInputClassName","dropdownSearchInputSlotClassNames","input","wrapper","DropdownSearchInput","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibilityComboboxProps","accessibilityInputProps","inputRef","inline","placeholder","disabled","className","design","styles","variables","unhandledProps","handledProps","mapPropsToStyles","mapPropsToInlineStyles","resolvedStyles","handleFocus","e","handleInputKeyDown","handleInputBlur","handleKeyUp","element","root","type","onBlur","onKeyDown","propTypes","commonPropTypes","createCommon","accessibility","children","content","PropTypes","object","bool","customPropTypes","onFocus","func","onInputBlur","onInputKeyDown","onKeyUp","string","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport { Input } from '../Input/Input';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface DropdownSearchInputSlotClassNames {\n  input: string;\n  wrapper: string;\n}\n\nexport interface DropdownSearchInputProps extends UIComponentProps<DropdownSearchInputProps> {\n  /** Accessibility props for combobox slot. */\n  accessibilityComboboxProps?: any;\n\n  /** Accessibility props for input slot. */\n  accessibilityInputProps?: any;\n\n  /** A dropdown search input can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown search input can be formatted to appear inline in the context of a Dropdown. */\n  inline?: boolean;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLInputElement>;\n\n  /**\n   * Called on input element focus.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onFocus?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input element blur.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputBlur?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key down event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputKeyDown?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key up event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyUp?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /** A placeholder message. */\n  placeholder?: string;\n}\n\nexport const dropdownSearchInputClassName = 'ui-dropdown__searchinput';\nexport const dropdownSearchInputSlotClassNames: DropdownSearchInputSlotClassNames = {\n  input: `${dropdownSearchInputClassName}__input`,\n  wrapper: `${dropdownSearchInputClassName}__wrapper`,\n};\n\nexport type DropdownSearchInputStylesProps = Required<Pick<DropdownSearchInputProps, 'inline'>>;\n\n/**\n * A DropdownSearchInput represents item of 'search' Dropdown.\n * Used to display the search input field.\n */\nexport const DropdownSearchInput = (React.forwardRef<HTMLInputElement, DropdownSearchInputProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DropdownSearchInput.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibilityComboboxProps,\n    accessibilityInputProps,\n    inputRef,\n    inline,\n    placeholder,\n    disabled,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const unhandledProps = useUnhandledProps(DropdownSearchInput.handledProps, props);\n\n  const { styles: resolvedStyles } = useStyles<DropdownSearchInputStylesProps>(DropdownSearchInput.displayName, {\n    className: dropdownSearchInputClassName,\n    mapPropsToStyles: () => ({ inline }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleInputKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputKeyDown', e, props);\n  };\n\n  const handleInputBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputBlur', e, props);\n  };\n\n  const handleKeyUp = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onKeyUp', e, props);\n  };\n\n  const element = (\n    <Input\n      ref={ref}\n      disabled={disabled}\n      inputRef={inputRef}\n      onFocus={handleFocus}\n      onKeyUp={handleKeyUp}\n      {...unhandledProps}\n      wrapper={{\n        className: cx(dropdownSearchInputSlotClassNames.wrapper, className),\n        styles: resolvedStyles.root,\n        ...accessibilityComboboxProps,\n        ...unhandledProps.wrapper,\n      }}\n      input={{\n        type: 'text',\n        className: dropdownSearchInputSlotClassNames.input,\n        styles: resolvedStyles.input,\n        placeholder,\n        onBlur: handleInputBlur,\n        onKeyDown: handleInputKeyDown,\n        ...accessibilityInputProps,\n        ...unhandledProps.input,\n      }}\n    />\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'input', HTMLInputElement, DropdownSearchInputProps> &\n  FluentComponentStaticProps<DropdownSearchInputProps>;\n\nDropdownSearchInput.displayName = 'DropdownSearchInput';\n\nDropdownSearchInput.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  accessibilityInputProps: PropTypes.object,\n  accessibilityComboboxProps: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  inputRef: customPropTypes.ref,\n  onFocus: PropTypes.func,\n  onInputBlur: PropTypes.func,\n  onInputKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  placeholder: PropTypes.string,\n};\n\nDropdownSearchInput.handledProps = Object.keys(DropdownSearchInput.propTypes) as any;\n\nDropdownSearchInput.create = createShorthandFactory({ Component: DropdownSearchInput });\n"],"file":"DropdownSearchInput.js"}