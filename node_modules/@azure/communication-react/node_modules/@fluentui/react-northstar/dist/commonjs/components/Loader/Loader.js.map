{"version":3,"sources":["components/Loader/Loader.tsx"],"names":["loaderClassName","loaderSlotClassNames","indicator","label","svg","Loader","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","delay","secondary","inline","labelPosition","className","design","styles","variables","size","ElementType","unhandledProps","handledProps","delayTimer","useRef","useState","visible","setVisible","labelId","current","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11yProps","accessibility","debugName","mapPropsToBehavior","useEffect","setTimeout","clearTimeout","svgElement","Box","create","defaultProps","element","root","children","Text","id","propTypes","commonPropTypes","createCommon","content","PropTypes","number","customPropTypes","itemShorthand","bool","oneOf","loaderBehavior","Object","keys","Component","mappedProp","shorthandConfig"],"mappings":"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","sourcesContent":["import { Accessibility, loaderBehavior, LoaderBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  ShorthandConfig,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useStyles,\n  useAccessibility,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  SizeValue,\n  getOrGenerateIdFromShorthand,\n} from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Text, TextProps } from '../Text/Text';\n\nexport interface LoaderSlotClassNames {\n  indicator: string;\n  label: string;\n  svg: string;\n}\n\nexport interface LoaderProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<LoaderBehaviorProps>;\n\n  /** Time in milliseconds after component mount before spinner is visible. */\n  delay?: number;\n\n  /** A loader can contain an indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** Loaders can appear inline with content. */\n  inline?: boolean;\n\n  /** A loader can contain a label. */\n  label?: ShorthandValue<TextProps>;\n\n  /** A label in the loader can have different positions. */\n  labelPosition?: 'above' | 'below' | 'start' | 'end';\n\n  /** A size of the loader. */\n  size?: SizeValue;\n\n  /** A loader can contain a custom svg element. */\n  svg?: ShorthandValue<BoxProps>;\n\n  /** A loader can be secondary */\n  secondary?: boolean;\n}\n\nexport interface LoaderState {\n  visible: boolean;\n  labelId: string;\n}\n\nexport const loaderClassName = 'ui-loader';\nexport const loaderSlotClassNames: LoaderSlotClassNames = {\n  indicator: `${loaderClassName}__indicator`,\n  label: `${loaderClassName}__label`,\n  svg: `${loaderClassName}__svg`,\n};\n\nexport type LoaderStylesProps = Pick<LoaderProps, 'inline' | 'labelPosition' | 'size' | 'secondary'>;\n\n/**\n * A loader alerts a user that content is being loaded or processed and they should wait for the activity to complete.\n *\n * @accessibility\n * Implements [ARIA progressbar](https://www.w3.org/TR/wai-aria-1.1/#progressbar) role.\n */\nexport const Loader = (React.forwardRef<HTMLDivElement, LoaderProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Loader.displayName, context.telemetry);\n  setStart();\n  const {\n    delay,\n    secondary,\n    label,\n    indicator,\n    svg,\n    inline,\n    labelPosition,\n    className,\n    design,\n    styles,\n    variables,\n    size,\n  } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Loader.handledProps, props);\n\n  const delayTimer = React.useRef<number>();\n  const [visible, setVisible] = React.useState(props.delay === 0);\n\n  const labelId = React.useRef<string>();\n  labelId.current = getOrGenerateIdFromShorthand('loader-label-', label, labelId.current);\n\n  const { classes, styles: resolvedStyles } = useStyles<LoaderStylesProps>(Loader.displayName, {\n    className: loaderClassName,\n    mapPropsToStyles: () => ({\n      inline,\n      labelPosition,\n      size,\n      secondary,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<LoaderBehaviorProps>(props.accessibility, {\n    debugName: Loader.displayName,\n    mapPropsToBehavior: () => ({\n      labelId: labelId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  React.useEffect(() => {\n    if (delay > 0) {\n      // @ts-ignore We have a collision between types from DOM and @types/node\n      delayTimer.current = setTimeout(() => {\n        setVisible(true);\n      }, delay);\n    }\n\n    return () => clearTimeout(delayTimer.current);\n  }, [delay]);\n\n  const svgElement = Box.create(svg, {\n    defaultProps: () => ({ className: loaderSlotClassNames.svg, styles: resolvedStyles.svg }),\n  });\n\n  const element = visible && (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {Box.create(indicator, {\n        defaultProps: () =>\n          getA11yProps('indicator', {\n            children: svgElement,\n            className: loaderSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n      })}\n      {Text.create(label, {\n        defaultProps: () =>\n          getA11yProps('label', {\n            className: loaderSlotClassNames.label,\n            styles: resolvedStyles.label,\n            id: labelId.current,\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, LoaderProps> &\n  FluentComponentStaticProps<LoaderProps> & {\n    shorthandConfig: ShorthandConfig<LoaderProps>;\n  };\n\nLoader.displayName = 'Loader';\n\nLoader.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  delay: PropTypes.number,\n  indicator: customPropTypes.itemShorthand,\n  inline: PropTypes.bool,\n  label: customPropTypes.itemShorthand,\n  labelPosition: PropTypes.oneOf(['above', 'below', 'start', 'end']),\n  size: customPropTypes.size,\n  svg: customPropTypes.itemShorthand,\n  secondary: PropTypes.bool,\n};\n\nLoader.defaultProps = {\n  accessibility: loaderBehavior,\n  delay: 0,\n  indicator: {},\n  labelPosition: 'below',\n  svg: '',\n  size: 'medium',\n};\n\nLoader.handledProps = Object.keys(Loader.propTypes) as any;\n\nLoader.create = createShorthandFactory({ Component: Loader, mappedProp: 'label' });\n\nLoader.shorthandConfig = { mappedProp: 'label' };\n"],"file":"Loader.js"}