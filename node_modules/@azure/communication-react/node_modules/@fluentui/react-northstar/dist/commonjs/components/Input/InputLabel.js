"use strict";

exports.__esModule = true;
exports.inputLabelClassName = exports.InputLabel = void 0;

var _reactBindings = require("@fluentui/react-bindings");

var _utils = require("../../utils");

var _Box = require("../Box/Box");

var PropTypes = _interopRequireWildcard(require("prop-types"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var inputLabelClassName = 'ui-input__label';
/**
 * An InputLabel provides a slot for label in the Input.
 */

exports.inputLabelClassName = inputLabelClassName;
var InputLabel = (0, _reactBindings.compose)(_Box.Box, {
  className: inputLabelClassName,
  displayName: 'InputLabel',
  overrideStyles: true,
  mapPropsToStylesProps: function mapPropsToStylesProps(_ref) {
    var labelPosition = _ref.labelPosition,
        required = _ref.required,
        hasValue = _ref.hasValue;
    return {
      labelPosition: labelPosition,
      required: required,
      hasValue: hasValue
    };
  },
  handledProps: ['required', 'labelPosition', 'hasValue'],
  shorthandConfig: {
    mappedProp: 'content'
  }
});
exports.InputLabel = InputLabel;
InputLabel.defaultProps = {
  as: 'label'
};
InputLabel.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  labelPosition: PropTypes.oneOf(['inline', 'above', 'inside']),
  required: PropTypes.bool,
  hasValue: PropTypes.bool
});
//# sourceMappingURL=InputLabel.js.map
