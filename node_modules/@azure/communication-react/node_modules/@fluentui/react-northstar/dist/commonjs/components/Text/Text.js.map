{"version":3,"sources":["components/Text/Text.tsx"],"names":["textClassName","Text","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","align","atMention","children","className","color","content","design","disabled","error","important","size","styles","success","timestamp","truncated","temporary","variables","weight","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","unhandledProps","handledProps","ElementType","element","root","rtlTextContainer","getAttributes","forElements","defaultProps","as","propTypes","commonPropTypes","createCommon","PropTypes","oneOfType","bool","oneOf","customPropTypes","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ContentComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n  SizeValue,\n  AlignValue,\n} from '../../utils';\nimport { Accessibility } from '@fluentui/accessibility';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface TextProps\n  extends UIComponentProps,\n    ContentComponentProps,\n    ChildrenComponentProps,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** At mentions can be formatted to draw users' attention. Mentions for \"me\" can be formatted to appear differently. */\n  atMention?: boolean | 'me';\n\n  /** Set as disabled Text component */\n  disabled?: boolean;\n\n  /** Set as error Text component */\n  error?: boolean;\n\n  /** The text can appear more important and draw user's attention */\n  important?: boolean;\n\n  /** The size for the Text component */\n  size?: SizeValue;\n\n  /** The weight for the Text component */\n  weight?: 'light' | 'semilight' | 'regular' | 'semibold' | 'bold';\n\n  /** Set as success Text component */\n  success?: boolean;\n\n  /** The text can signify a temporary state */\n  temporary?: boolean;\n\n  /** Align text content. */\n  align?: AlignValue;\n\n  /** Set as timestamp Text component */\n  timestamp?: boolean;\n\n  /** Truncates text as needed */\n  truncated?: boolean;\n}\n\nexport type TextStylesProps = Pick<\n  TextProps,\n  | 'atMention'\n  | 'color'\n  | 'important'\n  | 'timestamp'\n  | 'truncated'\n  | 'disabled'\n  | 'error'\n  | 'success'\n  | 'temporary'\n  | 'align'\n  | 'weight'\n  | 'size'\n>;\n\nexport const textClassName = 'ui-text';\n\n/**\n * A Text consistently styles and formats occurrences of text.\n */\nexport const Text = (React.forwardRef<HTMLSpanElement, TextProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Text.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    align,\n    atMention,\n    children,\n    className,\n    color,\n    content,\n    design,\n    disabled,\n    error,\n    important,\n    size,\n    styles,\n    success,\n    timestamp,\n    truncated,\n    temporary,\n    variables,\n    weight,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Text.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TextStylesProps>(Text.displayName, {\n    className: textClassName,\n    mapPropsToStyles: () => ({\n      atMention,\n      color,\n      important,\n      timestamp,\n      truncated,\n      disabled,\n      error,\n      success,\n      temporary,\n      align,\n      weight,\n      size,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(Text.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, TextProps> & FluentComponentStaticProps<TextProps>;\n\nText.displayName = 'Text';\n\nText.defaultProps = {\n  as: 'span' as const,\n};\nText.propTypes = {\n  ...commonPropTypes.createCommon({ color: true }),\n  atMention: PropTypes.oneOfType<any>([PropTypes.bool, PropTypes.oneOf(['me'])]),\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  important: PropTypes.bool,\n  size: customPropTypes.size,\n  weight: PropTypes.oneOf<'light' | 'semilight' | 'regular' | 'semibold' | 'bold'>([\n    'light',\n    'semilight',\n    'regular',\n    'semibold',\n    'bold',\n  ]),\n  success: PropTypes.bool,\n  temporary: PropTypes.bool,\n  align: customPropTypes.align,\n  timestamp: PropTypes.bool,\n  truncated: PropTypes.bool,\n};\nText.handledProps = Object.keys(Text.propTypes) as any;\n\nText.create = createShorthandFactory({ Component: Text, mappedProp: 'content' });\n"],"file":"Text.js"}