{"version":3,"sources":["components/Tree/TreeItem.tsx"],"names":["treeItemClassName","TreeItem","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","selectionIndicator","selectable","id","parent","useContext","TreeContext","getItemById","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","selected","hasSubtree","childrenIds","getA11Props","actionHandlers","performClick","e","preventDefault","stopPropagation","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","handleSiblingsExpand","performSelection","handleSelection","debugName","mapPropsToBehavior","indeterminate","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","handleTitleOverrides","predefinedProps","onClick","titleProps","handleClick","target","currentTarget","handleKeyDown","key","length","match","toFocusID","elementRef","useCallback","node","ElementType","unhandledProps","handledProps","element","root","onKeyDown","rtlTextContainer","getAttributes","forElements","TreeTitle","create","defaultProps","as","render","overrideProps","elementWithRef","propTypes","commonPropTypes","createCommon","content","customPropTypes","PropTypes","string","isRequired","number","items","collectionShorthand","onFocusFirstChild","func","onFocusParent","onTitleClick","onSiblingsExpand","bool","itemShorthand","shorthandAllowingChildren","treeItemBehavior","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ComponentKeyboardEventHandler,\n} from '../../types';\nimport { TreeTitle, TreeTitleProps } from './TreeTitle';\nimport { BoxProps } from '../Box/Box';\nimport { TreeContext } from './context';\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. If set to true, item is initialy expanded. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n\n  /** Whether or not the item can be selectable. */\n  selectable?: boolean;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /**\n   * Called on item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<TreeItemProps>;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>> & {\n  selectable?: boolean;\n};\nexport const treeItemClassName = 'ui-tree__item';\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport const TreeItem = (React.forwardRef<HTMLDivElement, TreeItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n    selectionIndicator,\n    selectable,\n    id,\n    parent,\n  } = props;\n\n  const {\n    getItemById,\n    registerItemRef,\n    toggleItemActive,\n    focusItemById,\n    expandSiblings,\n    toggleItemSelect,\n    getToFocusIDByFirstCharacter,\n  } = React.useContext(TreeContext);\n\n  const { selected, hasSubtree, childrenIds } = getItemById(id);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        toggleItemActive(e, id);\n        _.invoke(props, 'onTitleClick', e, props);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n      performSelection: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        handleSelection(e);\n      },\n    },\n    debugName: TreeItem.displayName,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree,\n      treeSize,\n      selected: selected === true,\n      selectable,\n      indeterminate: selected === 'indeterminate',\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: treeItemClassName,\n    mapPropsToStyles: () => ({\n      level,\n      selectable,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const handleSelection = e => {\n    if (selectable) {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    focusItemById(childrenIds?.[0]);\n  };\n\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    focusItemById(parent);\n  };\n\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    expandSiblings(e, props.id);\n  };\n\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    id,\n    onClick: (e, titleProps) => {\n      _.invoke(props, 'onTitleClick', e, props);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (e.target === e.currentTarget) {\n      // onClick listener for mouse click on treeItem DOM only,\n      // which could be triggered by VO+space on selectable tree parent node\n      handleSelection(e);\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key && e.key.length === 1 && e.key.match(/\\S/) && e.key !== '*') {\n      e.preventDefault();\n      e.stopPropagation();\n      const toFocusID = getToFocusIDByFirstCharacter(e, props.id);\n      if (toFocusID !== props.id) {\n        focusItemById(toFocusID);\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const elementRef = React.useCallback(\n    node => {\n      registerItemRef(id, node);\n      handleRef(contentRef, node);\n    },\n    [id, contentRef, registerItemRef],\n  );\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        id,\n        ref,\n        selected: selected === true,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                hasSubtree,\n                as: hasSubtree ? 'span' : 'a',\n                level,\n                treeSize,\n                expanded,\n                index,\n                selected: selected === true,\n                selectable,\n                parent,\n                ...(hasSubtree && {\n                  indeterminate: selected === 'indeterminate',\n                }),\n                selectionIndicator,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  const elementWithRef = <Ref innerRef={elementRef}>{element}</Ref>;\n  setEnd();\n\n  return elementWithRef;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, TreeItemProps> & FluentComponentStaticProps<TreeItemProps>;\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  selectable: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n};\n\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n  selectable: true,\n};\n\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n"],"file":"TreeItem.js"}