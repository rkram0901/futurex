{"version":3,"sources":["components/Datepicker/DatepickerCalendar.tsx"],"names":["datepickerCalendarClassName","normalizeDateInGrid","date","result","Date","getTime","setDate","DatepickerCalendar","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","calendarHeaderCell","calendarCell","calendarCellButton","calendarGrid","calendarGridRow","dateRangeType","header","selectedDate","navigatedDate","firstDayOfWeek","today","formatMonthDayYear","formatMonthYear","shortDays","days","minDate","maxDate","restrictedDates","restrictedDatesOptions","ElementType","unhandledProps","handledProps","updateNavigatedDate","shouldFocusInDayGrid","setShouldFocusInDayGrid","setGridNavigatedDate","getA11yProps","accessibility","debugName","actionHandlers","addWeek","e","preventDefault","newNavigatedDate","gridNavigatedDate","subtractWeek","addDay","subtractDay","moveToStartOfWeek","targetDate","moveToEndOfWeek","moveToStartOfColumn","targetDayOfWeek","getDay","visibleGrid","day","originalDate","moveToEndOfColumn","length","rtl","useState","normalizedGridDate","setNormalizedGridDate","mapPropsToInlineStyles","classes","useMemo","dayGridOptions","weeksToShow","firstWeekOfYear","daysToSelectInDayView","showWeekNumbers","workWeekDays","grid","slice","useEffect","newNormalizedDate","gridContainsNavigatedDate","find","week","dateFormatting","months","shortMonths","focusDateRef","useRef","changeMonth","nextMonth","prevMonthOutOfBounds","nextMonthOutOfBounds","current","focus","renderCell","content","DatepickerCalendarCell","defaultProps","key","selected","isSelected","disabled","isInBounds","quiet","isInMonth","renderCellButton","dateRange","DatepickerCalendarCellButton","overrideProps","predefinedProps","onFocus","onClick","value","selectedDateRange","DateRangeType","Day","renderWeekRow","element","root","DatepickerCalendarHeader","label","disabledNextButton","disabledPreviousButton","prevMonthAriaLabel","nextMonthAriaLabel","onPreviousClick","data","onNextClick","DatepickerCalendarGrid","DatepickerCalendarGridRow","children","DAYS_IN_WEEK","dayNumber","DatepickerCalendarHeaderCell","isRowSelectionActive","Week","propTypes","commonPropTypes","createCommon","customPropTypes","itemShorthand","onDateChange","PropTypes","func","instanceOf","arrayOf","oneOf","Object","keys","DayOfWeek","map","name","FirstWeekOfYear","number","bool","formatDay","formatYear","parseDate","string","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","goToToday","openCalendarTitle","inputPlaceholder","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","inputAriaLabel","inputBoundedFormatString","inputMinBoundedFormatString","inputMaxBoundedFormatString","datepickerCalendarBehavior","Monday","FirstDay","DEFAULT_CALENDAR_STRINGS"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAmBA;;AASA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAiDO,IAAMA,2BAA2B,GAAG,yBAApC;;;AAEP,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAsB;AAChD,MAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,OAAL,EAAT,CAAf;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAe,CAAf;AACA,SAAOH,MAAP;AACD,CAJD;AAMA;AACA;AACA;;;AACO,IAAMI,kBAAkB,gBAAIC,KAAK,CAACC,UAAN,CAA0D,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC3G,MAAMC,OAAO,GAAG,sCAAhB;;AACA,sBAA6B,iCAAaL,kBAAkB,CAACM,WAAhC,EAA6CD,OAAO,CAACE,SAArD,CAA7B;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,EAAAA,QAAQ;AAER,MACEE,SADF,GAuBIP,KAvBJ,CACEO,SADF;AAAA,MAEEC,MAFF,GAuBIR,KAvBJ,CAEEQ,MAFF;AAAA,MAGEC,MAHF,GAuBIT,KAvBJ,CAGES,MAHF;AAAA,MAIEC,SAJF,GAuBIV,KAvBJ,CAIEU,SAJF;AAAA,MAKEC,kBALF,GAuBIX,KAvBJ,CAKEW,kBALF;AAAA,MAMEC,YANF,GAuBIZ,KAvBJ,CAMEY,YANF;AAAA,MAOEC,kBAPF,GAuBIb,KAvBJ,CAOEa,kBAPF;AAAA,MAQEC,YARF,GAuBId,KAvBJ,CAQEc,YARF;AAAA,MASEC,eATF,GAuBIf,KAvBJ,CASEe,eATF;AAAA,MAUEC,aAVF,GAuBIhB,KAvBJ,CAUEgB,aAVF;AAAA,MAWEC,MAXF,GAuBIjB,KAvBJ,CAWEiB,MAXF;AAAA,MAYEC,YAZF,GAuBIlB,KAvBJ,CAYEkB,YAZF;AAAA,MAaEC,aAbF,GAuBInB,KAvBJ,CAaEmB,aAbF;AAAA,MAcEC,cAdF,GAuBIpB,KAvBJ,CAcEoB,cAdF;AAAA,MAeEC,KAfF,GAuBIrB,KAvBJ,CAeEqB,KAfF;AAAA,MAgBEC,kBAhBF,GAuBItB,KAvBJ,CAgBEsB,kBAhBF;AAAA,MAiBEC,eAjBF,GAuBIvB,KAvBJ,CAiBEuB,eAjBF;AAAA,MAkBEC,SAlBF,GAuBIxB,KAvBJ,CAkBEwB,SAlBF;AAAA,MAmBEC,IAnBF,GAuBIzB,KAvBJ,CAmBEyB,IAnBF;AAAA,MAoBEC,OApBF,GAuBI1B,KAvBJ,CAoBE0B,OApBF;AAAA,MAqBEC,OArBF,GAuBI3B,KAvBJ,CAqBE2B,OArBF;AAAA,MAsBEC,eAtBF,GAuBI5B,KAvBJ,CAsBE4B,eAtBF;AAyBA,MAAMC,sBAA+C,GAAG;AACtDH,IAAAA,OAAO,EAAPA,OADsD;AAEtDC,IAAAA,OAAO,EAAPA,OAFsD;AAGtDC,IAAAA,eAAe,EAAfA;AAHsD,GAAxD;AAKA,MAAME,WAAW,GAAG,mCAAe9B,KAAf,CAApB;AACA,MAAM+B,cAAc,GAAG,sCAAkBlC,kBAAkB,CAACmC,YAArC,EAAmDhC,KAAnD,CAAvB;;AAEA,MAAMiC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACzC,IAAD,EAAgB;AAC1C,QAAI,CAAC,CAACA,IAAN,EAAY;AACV,UAAI,CAAC0C,oBAAL,EAA2B;AACzBC,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD;;AACDC,MAAAA,oBAAoB,CAAC5C,IAAD,CAApB;AACD;AACF,GAPD;;AAQA,MAAM6C,YAAY,GAAG,qCAAiBrC,KAAK,CAACsC,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAE1C,kBAAkB,CAACM,WAD2B;AAEzDqC,IAAAA,cAAc,EAAE;AACdC,MAAAA,OAAO,EAAE,iBAAAC,CAAC,EAAI;AACZA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,gBAAgB,GAAG,0CAAkBC,iBAAlB,EAAqC,MAArC,EAA6C,CAA7C,EAAgDhB,sBAAhD,EAAwE,IAAxE,CAAzB;AACAI,QAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,OALa;AAMdE,MAAAA,YAAY,EAAE,sBAAAJ,CAAC,EAAI;AACjBA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,gBAAgB,GAAG,0CAAkBC,iBAAlB,EAAqC,MAArC,EAA6C,CAAC,CAA9C,EAAiDhB,sBAAjD,EAAyE,IAAzE,CAAzB;AACAI,QAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,OAVa;AAWdG,MAAAA,MAAM,EAAE,gBAAAL,CAAC,EAAI;AACXA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,gBAAgB,GAAG,0CAAkBC,iBAAlB,EAAqC,KAArC,EAA4C,CAA5C,EAA+ChB,sBAA/C,EAAuE,IAAvE,CAAzB;AACAI,QAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,OAfa;AAgBdI,MAAAA,WAAW,EAAE,qBAAAN,CAAC,EAAI;AAChBA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,gBAAgB,GAAG,0CAAkBC,iBAAlB,EAAqC,KAArC,EAA4C,CAAC,CAA7C,EAAgDhB,sBAAhD,EAAwE,IAAxE,CAAzB;AACAI,QAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,OApBa;AAqBdK,MAAAA,iBAAiB,EAAE,2BAAAP,CAAC,EAAI;AACtBA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAMO,UAAU,GAAG,2CAAmBL,iBAAnB,EAAsCzB,cAAtC,CAAnB;AACA,YAAMwB,gBAAgB,GAAG,iDACvBC,iBADuB,EAEvBK,UAFuB,EAGvB,CAAC,CAHsB,EAIvBrB,sBAJuB,EAKvB,IALuB,CAAzB;AAQAI,QAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,OAjCa;AAkCdO,MAAAA,eAAe,EAAE,yBAAAT,CAAC,EAAI;AACpBA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAMO,UAAU,GAAG,yCAAiBL,iBAAjB,EAAoCzB,cAApC,CAAnB;AACA,YAAMwB,gBAAgB,GAAG,iDACvBC,iBADuB,EAEvBK,UAFuB,EAGvB,CAAC,CAHsB,EAIvBrB,sBAJuB,EAKvB,IALuB,CAAzB;AAQAI,QAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,OA9Ca;AA+CdQ,MAAAA,mBAAmB,EAAE,6BAAAV,CAAC,EAAI;AAAA;;AACxBA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAMU,eAAe,GAAGR,iBAAiB,CAACS,MAAlB,EAAxB;AACA,YAAMJ,UAAU,aAAG,oBAAOK,WAAW,CAAC,CAAD,CAAlB,EAAuB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,YAAJ,CAAiBH,MAAjB,OAA8BD,eAAlC;AAAA,SAA1B,CAAH,qBAAG,OAA8EI,YAAjG;AAEA,YAAMb,gBAAgB,GAAG,iDACvBC,iBADuB,EAEvBK,UAFuB,EAGvB,CAAC,CAHsB,EAIvBrB,sBAJuB,EAKvB,IALuB,CAAzB;AAQAI,QAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,OA7Da;AA8Ddc,MAAAA,iBAAiB,EAAE,2BAAAhB,CAAC,EAAI;AAAA;;AACtBA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAMU,eAAe,GAAGR,iBAAiB,CAACS,MAAlB,EAAxB;AACA,YAAMJ,UAAU,aAAG,oBACjBK,WAAW,CAACA,WAAW,CAACI,MAAZ,GAAqB,CAAtB,CADM,EAEjB,UAAAH,GAAG;AAAA,iBAAIA,GAAG,CAACC,YAAJ,CAAiBH,MAAjB,OAA8BD,eAAlC;AAAA,SAFc,CAAH,qBAAG,OAGhBI,YAHH;AAKA,YAAMb,gBAAgB,GAAG,iDACvBC,iBADuB,EAEvBK,UAFuB,EAGvB,CAAC,CAHsB,EAIvBrB,sBAJuB,EAKvB,IALuB,CAAzB;AAQAI,QAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD;AA/Ea,KAFyC;AAmFzDgB,IAAAA,GAAG,EAAE1D,OAAO,CAAC0D;AAnF4C,GAAtC,CAArB;;AAsFA,wBAAkD9D,KAAK,CAAC+D,QAAN,CAChD;AAAA,WAAM,IAAInE,IAAJ,CAAS,CAACyB,aAAa,IAAIE,KAAjB,IAA0B,IAAI3B,IAAJ,EAA3B,EAAuCC,OAAvC,EAAT,CAAN;AAAA,GADgD,CAAlD;AAAA,MAAOkD,iBAAP;AAAA,MAA0BT,oBAA1B;;AAGA,yBAAoDtC,KAAK,CAAC+D,QAAN,CAAqB;AAAA,WACvEtE,mBAAmB,CAACsD,iBAAD,CADoD;AAAA,GAArB,CAApD;AAAA,MAAOiB,kBAAP;AAAA,MAA2BC,qBAA3B;;AAIA,yBAAwDjE,KAAK,CAAC+D,QAAN,CAAwB,IAAxB,CAAxD;AAAA,MAAO3B,oBAAP;AAAA,MAA6BC,uBAA7B;;AAEA,mBAAoB,8BAAyCtC,kBAAkB,CAACM,WAA5D,EAAyE;AAC3FI,IAAAA,SAAS,EAAEjB,2BADgF;AAE3F0E,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BzD,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAFmE;AAQ3FkD,IAAAA,GAAG,EAAE1D,OAAO,CAAC0D;AAR8E,GAAzE,CAApB;AAAA,MAAQK,OAAR,cAAQA,OAAR;;AAWA,MAAMV,WAAW,GAAGzD,KAAK,CAACoE,OAAN,CAAwB,YAAM;AAChD,QAAMC,cAA+B,GAAG;AACtCjD,MAAAA,YAAY,EAAZA,YADsC;AAEtCC,MAAAA,aAAa,EAAE2C,kBAFuB;AAGtCM,MAAAA,WAAW,EAAEpE,KAAK,CAACoE,WAHmB;AAItChD,MAAAA,cAAc,EAAEpB,KAAK,CAACoB,cAJgB;AAKtCiD,MAAAA,eAAe,EAAErE,KAAK,CAACqE,eALe;AAMtCrD,MAAAA,aAAa,EAAEhB,KAAK,CAACgB,aANiB;AAOtCsD,MAAAA,qBAAqB,EAAEtE,KAAK,CAACsE,qBAPS;AAQtCjD,MAAAA,KAAK,EAAErB,KAAK,CAACqB,KARyB;AAStCkD,MAAAA,eAAe,EAAEvE,KAAK,CAACuE,eATe;AAUtCC,MAAAA,YAAY,EAAExE,KAAK,CAACwE,YAVkB;AAWtC9C,MAAAA,OAAO,EAAE1B,KAAK,CAAC0B,OAXuB;AAYtCC,MAAAA,OAAO,EAAE3B,KAAK,CAAC2B,OAZuB;AAatCC,MAAAA,eAAe,EAAE5B,KAAK,CAAC4B;AAbe,KAAxC;AAeA,QAAM6C,IAAI,GAAG,mCAAWN,cAAX,CAAb;AACA,WAAOM,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcD,IAAI,CAACd,MAAL,GAAc,CAA5B,CAAP,CAjBgD,CAiBT;AACxC,GAlBmB,EAkBjB,CAACzC,YAAD,EAAe4C,kBAAf,EAAmC9D,KAAnC,CAlBiB,CAApB;AAoBAF,EAAAA,KAAK,CAAC6E,SAAN,CAAgB,YAAM;AACpB,QAAMC,iBAAiB,GAAGrF,mBAAmB,CAACsD,iBAAD,CAA7C;;AAEA,QAAI,wCAAgB+B,iBAAhB,EAAmCd,kBAAnC,CAAJ,EAA4D;AAC1D;AACA,UAAMe,yBAAyB,GAAGtB,WAAW,CAACuB,IAAZ,CAAiB,UAAAC,IAAI;AAAA,eACrDA,IAAI,CAACD,IAAL,CAAU,UAAAtB,GAAG;AAAA,iBAAI,wCAAgBA,GAAG,CAACC,YAApB,EAAkCZ,iBAAlC,MAAyD,CAA7D;AAAA,SAAb,CADqD;AAAA,OAArB,CAAlC;;AAGA,UAAI,CAACgC,yBAAL,EAAgC;AAC9Bd,QAAAA,qBAAqB,CAACa,iBAAD,CAArB;AACD;AACF;AACF,GAZD,EAYG,CAAC/B,iBAAD,EAAoBU,WAApB,EAAiCO,kBAAjC,CAZH;AAcA,MAAMkB,cAAgC,GAAG;AACvCC,IAAAA,MAAM,EAAEjF,KAAK,CAACiF,MADyB;AAEvCC,IAAAA,WAAW,EAAElF,KAAK,CAACkF,WAFoB;AAGvCzD,IAAAA,IAAI,EAAEzB,KAAK,CAACyB,IAH2B;AAIvCD,IAAAA,SAAS,EAAExB,KAAK,CAACwB;AAJsB,GAAzC;AAOA,MAAM2D,YAAY,GAAGrF,KAAK,CAACsF,MAAN,CAAa,IAAb,CAArB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAwB;AAC1C,QAAM1C,gBAAgB,GAAG,0CACvBkB,kBADuB,EAEvB,OAFuB,EAGvBwB,SAAS,GAAG,CAAH,GAAO,CAAC,CAHM,EAIvBzD,sBAJuB,EAKvB,IALuB,CAAzB;;AAOA,QAAI,CAAC,CAACe,gBAAN,EAAwB;AACtBR,MAAAA,oBAAoB,CAACQ,gBAAD,CAApB;AACAT,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACA4B,MAAAA,qBAAqB,CAACxE,mBAAmB,CAACqD,gBAAD,CAApB,CAArB;AACD;AACF,GAbD;;AAeA,MAAM2C,oBAAoB,GAAG7D,OAAO,GAAG,wCAAgBA,OAAhB,EAAyB,sCAAcoC,kBAAd,CAAzB,KAA+D,CAAlE,GAAsE,KAA1G;AACA,MAAM0B,oBAAoB,GAAG7D,OAAO,GAAG,wCAAgB,oCAAYmC,kBAAZ,CAAhB,EAAiDnC,OAAjD,KAA6D,CAAhE,GAAoE,KAAxG;AACA7B,EAAAA,KAAK,CAAC6E,SAAN,CAAgB,YAAM;AACpB,QAAIzC,oBAAJ,EAA0B;AAAA;;AACxB,+BAAAiD,YAAY,CAACM,OAAb,2CAAsBC,KAAtB;AACD;AACF,GAJD,EAIG,CAAC7C,iBAAD,EAAoBiB,kBAApB,EAAwC5B,oBAAxC,CAJH;;AAMA,MAAMyD,UAAU,GAAG,SAAbA,UAAa,CAACnC,GAAD,EAAYoC,OAAZ;AAAA,WACjB,4BAAgBC,8CAAhB,EAAwCjF,YAAxC,EAAsD;AACpDkF,MAAAA,YAAY,EAAE;AAAA;;AAAA,eACZzD,YAAY,CAAC,cAAD,EAAiB;AAC3BuD,UAAAA,OAAO,EAAPA,OAD2B;AAE3BG,UAAAA,GAAG,EAAEvC,GAAG,CAACuC,GAFkB;AAG3BC,UAAAA,QAAQ,EAAExC,GAAG,CAACyC,UAHa;AAI3BC,UAAAA,QAAQ,EAAE,CAAC1C,GAAG,CAAC2C,UAJY;AAK3BC,UAAAA,KAAK,EAAE,CAAC5C,GAAG,CAAC6C,SALe;AAM3BhF,UAAAA,KAAK,EAAE,qCAAamC,GAAG,CAACC,YAAjB,kBAA+BzD,KAAK,CAACqB,KAArC,2BAA8C,IAAI3B,IAAJ,EAA9C;AANoB,SAAjB,CADA;AAAA;AADsC,KAAtD,CADiB;AAAA,GAAnB;;AAaA,MAAM4G,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC9C,GAAD,EAAY+C,SAAZ;AAAA,WACvB,4BAAgBC,0DAAhB,EAA8C3F,kBAA9C,EAAkE;AAChEiF,MAAAA,YAAY,EAAE;AAAA;;AAAA,eACZzD,YAAY,CAAC,cAAD,EAAiB;AAC3BuD,UAAAA,OAAO,EAAEpC,GAAG,CAAChE,IADc;AAE3B,wBAAc8B,kBAAkB,CAACkC,GAAG,CAACC,YAAL,EAAmBuB,cAAnB,CAFL;AAG3BgB,UAAAA,QAAQ,EAAExC,GAAG,CAACyC,UAHa;AAI3BC,UAAAA,QAAQ,EAAE,CAAC1C,GAAG,CAAC2C,UAJY;AAK3BC,UAAAA,KAAK,EAAE,CAAC5C,GAAG,CAAC6C,SALe;AAM3BhF,UAAAA,KAAK,EAAE,qCAAamC,GAAG,CAACC,YAAjB,mBAA+BzD,KAAK,CAACqB,KAArC,4BAA8C,IAAI3B,IAAJ,EAA9C;AANoB,SAAjB,CADA;AAAA,OADkD;AAUhE+G,MAAAA,aAAa,EAAE,uBACbC,eADa;AAAA,eAEkE;AAC/EC,UAAAA,OAAO,EAAE,iBAAAjE,CAAC,EAAI;AACZN,YAAAA,oBAAoB,CAACoB,GAAG,CAACC,YAAL,CAApB;AACA,kCAASiD,eAAT,EAA0B,SAA1B,EAAqChE,CAArC,EAAwCgE,eAAxC;AACD,WAJ8E;AAK/EE,UAAAA,OAAO,EAAE,iBAAAlE,CAAC,EAAI;AACZ,kCAAS1C,KAAT,EAAgB,cAAhB,EAAgC0C,CAAhC,oBACK1C,KADL;AAEE6G,cAAAA,KAAK,EAAErD,GAFT;AAGEsD,cAAAA,iBAAiB,EAAE9F,aAAa,KAAK+F,iCAAcC,GAAhC,GAAsCT,SAAtC,GAAkD,CAAC/C,GAAD;AAHvE;AAKA,kCAASkD,eAAT,EAA0B,SAA1B,EAAqChE,CAArC,EAAwCgE,eAAxC;AACD,WAZ8E;AAa/EzG,UAAAA,GAAG,EAAE,qCAAa4C,iBAAb,EAAgCW,GAAG,CAACC,YAApC,IAAoD0B,YAApD,GAAmE;AAbO,SAFlE;AAAA;AAViD,KAAlE,CADuB;AAAA,GAAzB;;AA6BA,MAAM8B,aAAa,GAAG,SAAhBA,aAAgB,CAAClC,IAAD;AAAA,WAAkB,mBAAMA,IAAN,EAAY,UAACvB,GAAD;AAAA,aAAemC,UAAU,CAACnC,GAAD,EAAM8C,gBAAgB,CAAC9C,GAAD,EAAMuB,IAAN,CAAtB,CAAzB;AAAA,KAAZ,CAAlB;AAAA,GAAtB;;AAEA,MAAMmC,OAAO,gBACX,oBAAC,WAAD,EACM7E,YAAY,CAAC,MAAD;AACd9B,IAAAA,SAAS,EAAE0D,OAAO,CAACkD,IADL;AAEdlH,IAAAA,GAAG,EAAHA;AAFc,KAGX8B,cAHW,EADlB,EAOG,4BAAgBqF,kDAAhB,EAA0CnG,MAA1C,EAAkD;AACjD6E,IAAAA,YAAY,EAAE;AAAA,aAAO;AACnBuB,QAAAA,KAAK,EAAE9F,eAAe,CAACuC,kBAAD,EAAqBkB,cAArB,CADH;AAEnB,sBAAczD,eAAe,CAACuC,kBAAD,EAAqBkB,cAArB,CAFV;AAGnBsC,QAAAA,kBAAkB,EAAE9B,oBAHD;AAInB+B,QAAAA,sBAAsB,EAAEhC,oBAJL;AAKnBiC,QAAAA,kBAAkB,EAAExH,KAAK,CAACwH,kBALP;AAMnBC,QAAAA,kBAAkB,EAAEzH,KAAK,CAACyH;AANP,OAAP;AAAA,KADmC;AASjDhB,IAAAA,aAAa,EAAE,uBAACC,eAAD;AAAA,aAAoF;AACjGgB,QAAAA,eAAe,EAAE,yBAAChF,CAAD,EAAIiF,IAAJ,EAAa;AAC5BtC,UAAAA,WAAW,CAAC,KAAD,CAAX;AACA,gCAASqB,eAAT,EAA0B,iBAA1B,EAA6ChE,CAA7C,EAAgDiF,IAAhD;AACD,SAJgG;AAKjGC,QAAAA,WAAW,EAAE,qBAAClF,CAAD,EAAIiF,IAAJ,EAAa;AACxBtC,UAAAA,WAAW,CAAC,IAAD,CAAX;AACA,gCAASqB,eAAT,EAA0B,aAA1B,EAAyChE,CAAzC,EAA4CiF,IAA5C;AACD;AARgG,OAApF;AAAA;AATkC,GAAlD,CAPH,EA2BG,4BAAgBE,8CAAhB,EAAwC/G,YAAxC,EAAsD;AACrDgF,IAAAA,YAAY,EAAE;AAAA,aACZzD,YAAY,CAAC,cAAD,EAAiB;AAC3BuD,QAAAA,OAAO,eACL,uDACE,mCACG,4BAAgBkC,oDAAhB,EAA2C/G,eAA3C,EAA4D;AAC3D+E,UAAAA,YAAY,EAAE;AAAA,mBACZzD,YAAY,CAAC,iBAAD,EAAoB;AAC9B0F,cAAAA,QAAQ,EAAE,qBAAQC,+BAAR,EAAsB,UAAAC,SAAS;AAAA,uBACvC,4BAAgBC,0DAAhB,EAA8CvH,kBAA9C,EAAkE;AAChEmF,kBAAAA,YAAY,EAAE;AAAA,2BACZzD,YAAY,CAAC,oBAAD,EAAuB;AACjC,oCAAcZ,IAAI,CAAC,CAACwG,SAAS,GAAG7G,cAAb,IAA+B4G,+BAAhC,CADe;AAEjCpC,sBAAAA,OAAO,EAAEpE,SAAS,CAAC,CAACyG,SAAS,GAAG7G,cAAb,IAA+B4G,+BAAhC,CAFe;AAGjCjC,sBAAAA,GAAG,EAAEkC;AAH4B,qBAAvB,CADA;AAAA;AADkD,iBAAlE,CADuC;AAAA,eAA/B;AADoB,aAApB,CADA;AAAA;AAD6C,SAA5D,CADH,CADF,eAkBE,mCACG,mBAAM1E,WAAN,EAAmB,UAAAwB,IAAI;AAAA,iBACtB,4BAAgB+C,oDAAhB,EAA2C/G,eAA3C,EAA4D;AAC1D+E,YAAAA,YAAY,EAAE;AAAA,qBACZzD,YAAY,CAAC,iBAAD,EAAoB;AAC9B0F,gBAAAA,QAAQ,EAAEd,aAAa,CAAClC,IAAD,CADO;AAE9BoD,gBAAAA,oBAAoB,EAAEnH,aAAa,KAAK+F,iCAAcqB,IAFxB;AAG9BrC,gBAAAA,GAAG,EAAEhB,IAAI,CAAC,CAAD,CAAJ,CAAQgB;AAHiB,eAApB,CADA;AAAA;AAD4C,WAA5D,CADsB;AAAA,SAAvB,CADH,CAlBF;AAFyB,OAAjB,CADA;AAAA;AADuC,GAAtD,CA3BH,CADF;AAoEAzF,EAAAA,MAAM;AACN,SAAO4G,OAAP;AACD,CA5UkC,CAA5B;;AA+UPrH,kBAAkB,CAACM,WAAnB,GAAiC,oBAAjC;AAEAN,kBAAkB,CAACwI,SAAnB,qBACKC,uBAAgBC,YAAhB,EADL;AAEE3H,EAAAA,YAAY,EAAE4H,eAAe,CAACC,aAFhC;AAGE5H,EAAAA,kBAAkB,EAAE2H,eAAe,CAACC,aAHtC;AAIE9H,EAAAA,kBAAkB,EAAE6H,eAAe,CAACC,aAJtC;AAKExH,EAAAA,MAAM,EAAEuH,eAAe,CAACC,aAL1B;AAME3H,EAAAA,YAAY,EAAE0H,eAAe,CAACC,aANhC;AAOE1H,EAAAA,eAAe,EAAEyH,eAAe,CAACC,aAPnC;AAQEC,EAAAA,YAAY,EAAEC,SAAS,CAACC,IAR1B;AASE1H,EAAAA,YAAY,EAAEyH,SAAS,CAACE,UAAV,CAAqBnJ,IAArB,CAThB;AAUEyB,EAAAA,aAAa,EAAEwH,SAAS,CAACE,UAAV,CAAqBnJ,IAArB,CAVjB;AAYEgC,EAAAA,OAAO,EAAEiH,SAAS,CAACE,UAAV,CAAqBnJ,IAArB,CAZX;AAaEiC,EAAAA,OAAO,EAAEgH,SAAS,CAACE,UAAV,CAAqBnJ,IAArB,CAbX;AAcEkC,EAAAA,eAAe,EAAE+G,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACE,UAAV,CAAqBnJ,IAArB,CAAlB,CAdnB;AAgBE0B,EAAAA,cAAc,EAAEuH,SAAS,CAACI,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYC,4BAAZ,EAAuBC,GAAvB,CAA2B,UAAAC,IAAI;AAAA,WAAIF,6BAAUE,IAAV,CAAJ;AAAA,GAA/B,CAAhB,CAhBlB;AAiBE/E,EAAAA,eAAe,EAAEsE,SAAS,CAACI,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYI,kCAAZ,EAA6BF,GAA7B,CAAiC,UAAAC,IAAI;AAAA,WAAIC,mCAAgBD,IAAhB,CAAJ;AAAA,GAArC,CAAhB,CAjBnB;AAkBEpI,EAAAA,aAAa,EAAE2H,SAAS,CAACI,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYlC,gCAAZ,EAA2BoC,GAA3B,CAA+B,UAAAC,IAAI;AAAA,WAAIrC,iCAAcqC,IAAd,CAAJ;AAAA,GAAnC,CAAhB,CAlBjB;AAmBE9E,EAAAA,qBAAqB,EAAEqE,SAAS,CAACW,MAnBnC;AAoBEjI,EAAAA,KAAK,EAAEsH,SAAS,CAACE,UAAV,CAAqBnJ,IAArB,CApBT;AAqBE6E,EAAAA,eAAe,EAAEoE,SAAS,CAACY,IArB7B;AAsBE/E,EAAAA,YAAY,EAAEmE,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACI,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYC,4BAAZ,EAAuBC,GAAvB,CAA2B,UAAAC,IAAI;AAAA,WAAIF,6BAAUE,IAAV,CAAJ;AAAA,GAA/B,CAAhB,CAAlB,CAtBhB;AAuBEhF,EAAAA,WAAW,EAAEuE,SAAS,CAACW,MAvBzB;AAyBEE,EAAAA,SAAS,EAAEb,SAAS,CAACC,IAzBvB;AA0BEa,EAAAA,UAAU,EAAEd,SAAS,CAACC,IA1BxB;AA2BEtH,EAAAA,kBAAkB,EAAEqH,SAAS,CAACC,IA3BhC;AA4BErH,EAAAA,eAAe,EAAEoH,SAAS,CAACC,IA5B7B;AA8BEc,EAAAA,SAAS,EAAEf,SAAS,CAACC,IA9BvB;AAgCE3D,EAAAA,MAAM,EAAE0D,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACgB,MAA5B,CAhCV;AAiCEzE,EAAAA,WAAW,EAAEyD,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACgB,MAA5B,CAjCf;AAkCElI,EAAAA,IAAI,EAAEkH,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACgB,MAA5B,CAlCR;AAmCEnI,EAAAA,SAAS,EAAEmH,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACgB,MAA5B,CAnCb;AAqCEC,EAAAA,sBAAsB,EAAEjB,SAAS,CAACgB,MArCpC;AAsCEE,EAAAA,wBAAwB,EAAElB,SAAS,CAACgB,MAtCtC;AAuCEG,EAAAA,yBAAyB,EAAEnB,SAAS,CAACgB,MAvCvC;AAwCEI,EAAAA,SAAS,EAAEpB,SAAS,CAACgB,MAxCvB;AAyCEK,EAAAA,iBAAiB,EAAErB,SAAS,CAACgB,MAzC/B;AA0CEM,EAAAA,gBAAgB,EAAEtB,SAAS,CAACgB,MA1C9B;AA2CEnC,EAAAA,kBAAkB,EAAEmB,SAAS,CAACgB,MA3ChC;AA4CElC,EAAAA,kBAAkB,EAAEkB,SAAS,CAACgB,MA5ChC;AA6CEO,EAAAA,iBAAiB,EAAEvB,SAAS,CAACgB,MA7C/B;AA8CEQ,EAAAA,iBAAiB,EAAExB,SAAS,CAACgB,MA9C/B;AA+CES,EAAAA,sBAAsB,EAAEzB,SAAS,CAACgB,MA/CpC;AAgDEU,EAAAA,sBAAsB,EAAE1B,SAAS,CAACgB,MAhDpC;AAiDEW,EAAAA,0BAA0B,EAAE3B,SAAS,CAACgB,MAjDxC;AAkDEY,EAAAA,yBAAyB,EAAE5B,SAAS,CAACgB,MAlDvC;AAmDEa,EAAAA,oBAAoB,EAAE7B,SAAS,CAACgB,MAnDlC;AAoDEc,EAAAA,sBAAsB,EAAE9B,SAAS,CAACgB,MApDpC;AAqDEe,EAAAA,wBAAwB,EAAE/B,SAAS,CAACgB,MArDtC;AAsDEgB,EAAAA,qBAAqB,EAAEhC,SAAS,CAACgB,MAtDnC;AAwDEiB,EAAAA,cAAc,EAAEjC,SAAS,CAACgB,MAxD5B;AAyDEkB,EAAAA,wBAAwB,EAAElC,SAAS,CAACgB,MAzDtC;AA0DEmB,EAAAA,2BAA2B,EAAEnC,SAAS,CAACgB,MA1DzC;AA2DEoB,EAAAA,2BAA2B,EAAEpC,SAAS,CAACgB;AA3DzC;AA8DA9J,kBAAkB,CAACiG,YAAnB;AACExD,EAAAA,aAAa,EAAE0I,yCADjB;AAEE5J,EAAAA,cAAc,EAAE8H,6BAAU+B,MAF5B;AAGE5G,EAAAA,eAAe,EAAEgF,mCAAgB6B,QAHnC;AAIElK,EAAAA,aAAa,EAAE+F,iCAAcC,GAJ/B;AAKE/F,EAAAA,MAAM,EAAE,EALV;AAMEL,EAAAA,YAAY,EAAE,EANhB;AAOEC,EAAAA,kBAAkB,EAAE,EAPtB;AAQEF,EAAAA,kBAAkB,EAAE,EARtB;AASEG,EAAAA,YAAY,EAAE,EAThB;AAUEC,EAAAA,eAAe,EAAE;AAVnB,GAWKoK,2CAXL;AAcAtL,kBAAkB,CAACmC,YAAnB,GAAkCgH,MAAM,CAACC,IAAP,CAAYpJ,kBAAkB,CAACwI,SAA/B,CAAlC","sourcesContent":["import { Accessibility, datepickerCalendarBehavior, DatepickerCalendarBehaviorProps } from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  DAYS_IN_WEEK,\n  FirstWeekOfYear,\n  getDayGrid,\n  IDay,\n  DEFAULT_CALENDAR_STRINGS,\n  ICalendarStrings,\n  IDayGridOptions,\n  IDateGridStrings,\n  IRestrictedDatesOptions,\n  compareDates,\n  compareDatePart,\n  getMonthStart,\n  getMonthEnd,\n  getStartDateOfWeek,\n  getEndDateOfWeek,\n} from '../../utils/date-time-utilities';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, UIComponentProps } from '../../utils';\nimport { DatepickerCalendarGrid, DatepickerCalendarGridProps } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow, DatepickerCalendarGridRowProps } from './DatepickerCalendarGridRow';\nimport { DatepickerCalendarHeader, DatepickerCalendarHeaderProps } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarCellProps, DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButtonProps, DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeaderCellProps, DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { navigateToNewDate, contstraintNavigatedDate } from './navigateToNewDate';\n\nexport interface DatepickerCalendarProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDayGridOptions> {\n  /** Calendar can have header. */\n  header?: ShorthandValue<DatepickerCalendarHeaderProps>;\n\n  /** A render function to customize how cells are rendered in the Calendar. */\n  calendarCell?: ShorthandValue<DatepickerCalendarCellProps>;\n\n  /** A render function to customize how cell's buttons are rendered in the Calendar. */\n  calendarCellButton?: ShorthandValue<DatepickerCalendarCellButtonProps>;\n\n  /** A render function to customize how header cells are rendered in the Calendar. */\n  calendarHeaderCell?: ShorthandValue<DatepickerCalendarHeaderCellProps>;\n\n  /** A render function to customize how the calendar grid is rendered. */\n  calendarGrid?: ShorthandValue<DatepickerCalendarGridProps>;\n\n  /** A render function to customize how the calendar grid row is rendered. */\n  calendarGridRow?: ShorthandValue<DatepickerCalendarGridRowProps>;\n\n  /**\n   * The currently selected date range, currently only supports week.\n   */\n  selectedDateRange?: Date[];\n\n  /**\n   * The currently selected date.\n   */\n  selectedDate?: Date;\n  /**\n   * The currently navigated date.\n   */\n  navigatedDate?: Date;\n\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerCalendarBehaviorProps>;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerCalendarProps & { value: IDay }>;\n}\n\nexport type DatepickerCalendarStylesProps = never;\n\nexport const datepickerCalendarClassName = 'ui-datepicker__calendar';\n\nconst normalizeDateInGrid = (date: Date): Date => {\n  const result = new Date(date.getTime());\n  result.setDate(1);\n  return result;\n};\n\n/**\n * A DatepickerCalendar is used to display dates in sematically grouped way.\n */\nexport const DatepickerCalendar = (React.forwardRef<HTMLDivElement, DatepickerCalendarProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DatepickerCalendar.displayName, context.telemetry);\n  setStart();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    calendarHeaderCell,\n    calendarCell,\n    calendarCellButton,\n    calendarGrid,\n    calendarGridRow,\n    dateRangeType,\n    header,\n    selectedDate,\n    navigatedDate,\n    firstDayOfWeek,\n    today,\n    formatMonthDayYear,\n    formatMonthYear,\n    shortDays,\n    days,\n    minDate,\n    maxDate,\n    restrictedDates,\n  } = props;\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate,\n    maxDate,\n    restrictedDates,\n  };\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DatepickerCalendar.handledProps, props);\n\n  const updateNavigatedDate = (date: Date) => {\n    if (!!date) {\n      if (!shouldFocusInDayGrid) {\n        setShouldFocusInDayGrid(true);\n      }\n      setGridNavigatedDate(date);\n    }\n  };\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: DatepickerCalendar.displayName,\n    actionHandlers: {\n      addWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      addDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getStartDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getEndDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(visibleGrid[0], day => day.originalDate.getDay() === targetDayOfWeek)?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(\n          visibleGrid[visibleGrid.length - 1],\n          day => day.originalDate.getDay() === targetDayOfWeek,\n        )?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const [gridNavigatedDate, setGridNavigatedDate] = React.useState<Date>(\n    () => new Date((navigatedDate || today || new Date()).getTime()),\n  );\n  const [normalizedGridDate, setNormalizedGridDate] = React.useState<Date>(() =>\n    normalizeDateInGrid(gridNavigatedDate),\n  );\n\n  const [shouldFocusInDayGrid, setShouldFocusInDayGrid] = React.useState<boolean>(true);\n\n  const { classes } = useStyles<DatepickerCalendarStylesProps>(DatepickerCalendar.displayName, {\n    className: datepickerCalendarClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const visibleGrid = React.useMemo<IDay[][]>(() => {\n    const dayGridOptions: IDayGridOptions = {\n      selectedDate,\n      navigatedDate: normalizedGridDate,\n      weeksToShow: props.weeksToShow,\n      firstDayOfWeek: props.firstDayOfWeek,\n      firstWeekOfYear: props.firstWeekOfYear,\n      dateRangeType: props.dateRangeType,\n      daysToSelectInDayView: props.daysToSelectInDayView,\n      today: props.today,\n      showWeekNumbers: props.showWeekNumbers,\n      workWeekDays: props.workWeekDays,\n      minDate: props.minDate,\n      maxDate: props.maxDate,\n      restrictedDates: props.restrictedDates,\n    };\n    const grid = getDayGrid(dayGridOptions);\n    return grid.slice(1, grid.length - 1); // slicing off first and last weeks, cause we don't use them for transitions\n  }, [selectedDate, normalizedGridDate, props]);\n\n  React.useEffect(() => {\n    const newNormalizedDate = normalizeDateInGrid(gridNavigatedDate);\n\n    if (compareDatePart(newNormalizedDate, normalizedGridDate)) {\n      // Do not change the grid immediately the month changes but only once the date stops being visible.\n      const gridContainsNavigatedDate = visibleGrid.find(week =>\n        week.find(day => compareDatePart(day.originalDate, gridNavigatedDate) === 0),\n      );\n      if (!gridContainsNavigatedDate) {\n        setNormalizedGridDate(newNormalizedDate);\n      }\n    }\n  }, [gridNavigatedDate, visibleGrid, normalizedGridDate]);\n\n  const dateFormatting: IDateGridStrings = {\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n  };\n\n  const focusDateRef = React.useRef(null);\n\n  const changeMonth = (nextMonth: boolean) => {\n    const newNavigatedDate = navigateToNewDate(\n      normalizedGridDate,\n      'Month',\n      nextMonth ? 1 : -1,\n      restrictedDatesOptions,\n      true,\n    );\n    if (!!newNavigatedDate) {\n      setGridNavigatedDate(newNavigatedDate);\n      setShouldFocusInDayGrid(false);\n      setNormalizedGridDate(normalizeDateInGrid(newNavigatedDate));\n    }\n  };\n\n  const prevMonthOutOfBounds = minDate ? compareDatePart(minDate, getMonthStart(normalizedGridDate)) >= 0 : false;\n  const nextMonthOutOfBounds = maxDate ? compareDatePart(getMonthEnd(normalizedGridDate), maxDate) >= 0 : false;\n  React.useEffect(() => {\n    if (shouldFocusInDayGrid) {\n      focusDateRef.current?.focus();\n    }\n  }, [gridNavigatedDate, normalizedGridDate, shouldFocusInDayGrid]);\n\n  const renderCell = (day: IDay, content) =>\n    createShorthand(DatepickerCalendarCell, calendarCell, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content,\n          key: day.key,\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n    });\n\n  const renderCellButton = (day: IDay, dateRange: IDay[]) =>\n    createShorthand(DatepickerCalendarCellButton, calendarCellButton, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content: day.date,\n          'aria-label': formatMonthDayYear(day.originalDate, dateFormatting),\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n      overrideProps: (\n        predefinedProps: DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> },\n      ): DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> } => ({\n        onFocus: e => {\n          setGridNavigatedDate(day.originalDate);\n          _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n        },\n        onClick: e => {\n          _.invoke(props, 'onDateChange', e, {\n            ...props,\n            value: day,\n            selectedDateRange: dateRangeType !== DateRangeType.Day ? dateRange : [day],\n          });\n          _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n        },\n        ref: compareDates(gridNavigatedDate, day.originalDate) ? focusDateRef : null,\n      }),\n    });\n  const renderWeekRow = (week: IDay[]) => _.map(week, (day: IDay) => renderCell(day, renderCellButton(day, week)));\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {createShorthand(DatepickerCalendarHeader, header, {\n        defaultProps: () => ({\n          label: formatMonthYear(normalizedGridDate, dateFormatting),\n          'aria-label': formatMonthYear(normalizedGridDate, dateFormatting),\n          disabledNextButton: nextMonthOutOfBounds,\n          disabledPreviousButton: prevMonthOutOfBounds,\n          prevMonthAriaLabel: props.prevMonthAriaLabel,\n          nextMonthAriaLabel: props.nextMonthAriaLabel,\n        }),\n        overrideProps: (predefinedProps: DatepickerCalendarHeaderProps): DatepickerCalendarHeaderProps => ({\n          onPreviousClick: (e, data) => {\n            changeMonth(false);\n            _.invoke(predefinedProps, 'onPreviousClick', e, data);\n          },\n          onNextClick: (e, data) => {\n            changeMonth(true);\n            _.invoke(predefinedProps, 'onNextClick', e, data);\n          },\n        }),\n      })}\n      {createShorthand(DatepickerCalendarGrid, calendarGrid, {\n        defaultProps: () =>\n          getA11yProps('calendarGrid', {\n            content: (\n              <>\n                <thead>\n                  {createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                    defaultProps: () =>\n                      getA11yProps('calendarGridRow', {\n                        children: _.times(DAYS_IN_WEEK, dayNumber =>\n                          createShorthand(DatepickerCalendarHeaderCell, calendarHeaderCell, {\n                            defaultProps: () =>\n                              getA11yProps('calendarHeaderCell', {\n                                'aria-label': days[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                content: shortDays[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                key: dayNumber,\n                              }),\n                          }),\n                        ),\n                      }),\n                  })}\n                </thead>\n                <tbody>\n                  {_.map(visibleGrid, week =>\n                    createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                      defaultProps: () =>\n                        getA11yProps('calendarGridRow', {\n                          children: renderWeekRow(week),\n                          isRowSelectionActive: dateRangeType === DateRangeType.Week,\n                          key: week[0].key,\n                        }),\n                    }),\n                  )}\n                </tbody>\n              </>\n            ),\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, DatepickerCalendarProps> &\n  FluentComponentStaticProps<DatepickerCalendarProps>;\n\nDatepickerCalendar.displayName = 'DatepickerCalendar';\n\nDatepickerCalendar.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendarCell: customPropTypes.itemShorthand,\n  calendarCellButton: customPropTypes.itemShorthand,\n  calendarHeaderCell: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  calendarGrid: customPropTypes.itemShorthand,\n  calendarGridRow: customPropTypes.itemShorthand,\n  onDateChange: PropTypes.func,\n  selectedDate: PropTypes.instanceOf(Date),\n  navigatedDate: PropTypes.instanceOf(Date),\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n  weeksToShow: PropTypes.number,\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  goToToday: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n};\n\nDatepickerCalendar.defaultProps = {\n  accessibility: datepickerCalendarBehavior,\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n  header: {},\n  calendarCell: {},\n  calendarCellButton: {},\n  calendarHeaderCell: {},\n  calendarGrid: {},\n  calendarGridRow: {},\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepickerCalendar.handledProps = Object.keys(DatepickerCalendar.propTypes) as any;\n"],"file":"DatepickerCalendar.js"}