{"version":3,"sources":["components/RadioGroup/RadioGroup.tsx"],"names":["radioGroupClassName","RadioGroup","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","children","vertical","items","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","nextItem","event","setCheckedItem","prevItem","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","defaultValue","defaultCheckedValue","value","checkedValue","initialValue","undefined","setCheckedValue","useState","shouldFocus","setShouldFocus","getItemProps","item","direction","findNextEnabledCheckedItem","checkedValueChange","nextCheckedValue","itemProps","preventDefault","length","currentIndex","newIndex","disabled","handleItemOverrides","predefinedProps","checked","onClick","renderItems","isNoneValueSelected","index","RadioGroupItem","create","defaultProps","tabIndex","overrideProps","element","unstable_wrapWithFocusZone","root","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOfType","number","string","customPropTypes","collectionShorthand","onCheckedValueChange","func","bool","radioGroupBehavior","Object","keys","Item","Component"],"mappings":"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","sourcesContent":["// TODO:\n// vertical - padding variable?\nimport { Accessibility, radioGroupBehavior, RadioGroupBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { RadioGroupItem, RadioGroupItemProps } from './RadioGroupItem';\nimport { ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  useAutoControlled,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface RadioGroupProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<RadioGroupBehaviorProps>;\n\n  /** Value of the currently checked radio item. */\n  checkedValue?: number | string;\n\n  /**\n   * Called after radio group value is changed.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All value props.\n   */\n  onCheckedValueChange?: ComponentEventHandler<RadioGroupItemProps>;\n\n  /** Initial checkedValue value. */\n  defaultCheckedValue?: number | string;\n\n  /** Shorthand array of props for RadioGroup. */\n  items?: ShorthandCollection<RadioGroupItemProps>;\n\n  /** A vertical radio group displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport const radioGroupClassName = 'ui-radiogroup';\n\nexport type RadioGroupStylesProps = Required<Pick<RadioGroupProps, 'vertical'>>;\n\n/**\n * A RadioGroup allows user to select a value from a small set of mutually exclusive options.\n *\n * @accessibility\n * Implements [ARIA Radio Group](https://www.w3.org/TR/wai-aria-practices-1.1/#radiobutton) design pattern.\n * @accessibilityIssues\n * [JAWS narrates instruction message on each radio in radiogroup](https://github.com/FreedomScientific/VFO-standards-support/issues/473)\n */\nexport const RadioGroup = (React.forwardRef<HTMLDivElement, RadioGroupProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(RadioGroup.displayName, context.telemetry);\n  setStart();\n\n  const { children, vertical, items, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(RadioGroup.handledProps, props);\n\n  const getA11yProps = useAccessibility<RadioGroupBehaviorProps>(props.accessibility, {\n    debugName: RadioGroup.displayName,\n    actionHandlers: {\n      nextItem: event => setCheckedItem(event, 1),\n      prevItem: event => setCheckedItem(event, -1),\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<RadioGroupStylesProps>(RadioGroup.displayName, {\n    className: radioGroupClassName,\n    mapPropsToStyles: () => ({\n      vertical,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const [checkedValue, setCheckedValue] = useAutoControlled({\n    defaultValue: props.defaultCheckedValue,\n    value: props.checkedValue,\n    initialValue: undefined,\n  });\n\n  const [shouldFocus, setShouldFocus] = React.useState(false);\n\n  const getItemProps = (item): RadioGroupItemProps => {\n    return (item as React.ReactElement<RadioGroupItemProps>).props || item;\n  };\n\n  const setCheckedItem = (event, direction) => {\n    const nextItem = findNextEnabledCheckedItem(direction);\n\n    if (nextItem) {\n      checkedValueChange({\n        nextCheckedValue: nextItem.value,\n        shouldFocus: true,\n        event,\n        itemProps: nextItem,\n      });\n    }\n    event.preventDefault();\n  };\n\n  const findNextEnabledCheckedItem = (direction): RadioGroupItemProps => {\n    if (!props.items || !props.items.length) {\n      return undefined;\n    }\n\n    const currentIndex =\n      // if none of the values selected, set current index to the first item\n      checkedValue !== undefined ? _.findIndex(props.items, item => getItemProps(item).value === checkedValue) : 0;\n\n    for (let newIndex = currentIndex + direction; newIndex !== currentIndex; newIndex += direction) {\n      if (newIndex < 0) {\n        newIndex = props.items.length - 1;\n      } else if (newIndex >= props.items.length) {\n        newIndex = 0;\n      }\n\n      if (newIndex === currentIndex) {\n        return undefined;\n      }\n\n      const itemProps = getItemProps(props.items[newIndex]);\n      if (!itemProps.disabled) {\n        return itemProps;\n      }\n    }\n    return undefined;\n  };\n\n  const handleItemOverrides = predefinedProps => ({\n    checked: typeof checkedValue !== 'undefined' && checkedValue === predefinedProps.value,\n    onClick: (event, itemProps) => {\n      const { value, disabled } = itemProps;\n      if (!disabled && value !== checkedValue) {\n        checkedValueChange({ nextCheckedValue: value, shouldFocus: false, event, itemProps });\n      }\n      _.invoke(predefinedProps, 'onClick', event, itemProps);\n    },\n    shouldFocus,\n  });\n\n  const renderItems = (vertical: boolean) => {\n    const isNoneValueSelected = checkedValue === undefined;\n    return _.map(items, (item, index) =>\n      RadioGroupItem.create(item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            vertical,\n            ...(index === 0 && isNoneValueSelected && { tabIndex: 0 }),\n          }),\n        overrideProps: handleItemOverrides,\n      }),\n    );\n  };\n\n  const checkedValueChange = ({\n    nextCheckedValue,\n    shouldFocus,\n    event,\n    itemProps,\n  }: {\n    nextCheckedValue: number | string;\n    shouldFocus: boolean;\n    event: React.SyntheticEvent;\n    itemProps: RadioGroupItemProps;\n  }) => {\n    setCheckedValue(nextCheckedValue);\n    setShouldFocus(shouldFocus);\n    _.invoke(props, 'onCheckedValueChange', event, itemProps);\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n      })}\n    >\n      {childrenExist(children) ? children : renderItems(vertical)}\n    </ElementType>,\n  );\n\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, RadioGroupProps> &\n  FluentComponentStaticProps<RadioGroupProps> & {\n    Item: typeof RadioGroupItem;\n  };\n\nRadioGroup.displayName = 'RadioGroup';\n\nRadioGroup.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  checkedValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  defaultCheckedValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  items: customPropTypes.collectionShorthand,\n  onCheckedValueChange: PropTypes.func,\n  vertical: PropTypes.bool,\n};\n\nRadioGroup.defaultProps = {\n  accessibility: radioGroupBehavior,\n};\n\nRadioGroup.handledProps = Object.keys(RadioGroup.propTypes) as any;\n\nRadioGroup.Item = RadioGroupItem;\n\nRadioGroup.create = createShorthandFactory({\n  Component: RadioGroup,\n});\n"],"file":"RadioGroup.js"}