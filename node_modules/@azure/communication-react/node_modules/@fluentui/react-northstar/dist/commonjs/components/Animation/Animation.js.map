{"version":3,"sources":["components/Animation/Animation.tsx"],"names":["Animation","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","appear","children","className","mountOnEnter","timeout","visible","unmountOnExit","handleAnimationEvent","event","animationClasses","animationDuration","animationDelay","timeoutResult","unhandledProps","handledProps","nodeRef","useRef","mergedRef","isChildrenFunction","child","Children","only","element","state","childWithClasses","classes","cloneElement","propTypes","commonPropTypes","createCommon","accessibility","as","content","PropTypes","oneOfType","func","name","string","delay","direction","duration","fillMode","iterationCount","keyframeParams","object","playState","timingFunction","bool","number","shape","enter","exit","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Object","keys"],"mappings":"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","sourcesContent":["import {\n  useUnhandledProps,\n  unstable_calculateAnimationTimeout as calculateAnimationTimeout,\n  useFluentContext,\n  useTelemetry,\n  useMergedRefs,\n  ForwardRefComponent,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { Transition } from 'react-transition-group';\n\nimport { childrenExist, commonPropTypes, ChildrenComponentProps } from '../../utils';\nimport { ComponentEventHandler } from '../../types';\nimport { useAnimationStyles } from './useAnimationStyles';\n\nexport type AnimationChildrenProp = (props: {\n  classes: string;\n  state: 'unmounted' | 'exited' | 'entering' | 'entered' | 'exiting';\n}) => React.ReactNode;\n\nexport interface AnimationProps extends ChildrenComponentProps<AnimationChildrenProp | React.ReactChild> {\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  /** The name for the animation that should be applied, defined in the theme. */\n  name?: string;\n\n  /** Specifies a delay for the start of an animation. Negative values are\n   * also allowed. If using negative values, the animation will start as if it had already been\n   * playing for that amount of time.\n   */\n  delay?: string;\n\n  /** Specifies whether an animation should be played forwards, backwards or in alternate cycles.\n   * It can have the following values:\n   * - normal (default) - The animation is played as normal (forwards)\n   * - reverse - The animation is played in reverse direction (backwards)\n   * - alternate - The animation is played forwards first, then backwards\n   * - alternate-reverse - The animation is played backwards first, then forwards\n   */\n  direction?: string;\n\n  /** Specifies how long an animation should take to complete. */\n  duration?: string;\n\n  /**\n   * Specifies a style for the target element when the animation is not playing (i.e. before it starts, after it ends, or both).\n   * It can have the following values:\n   * - none (default) - Animation will not apply any styles to the element before or after it is executing\n   * - forwards - The element will retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count)\n   * - backwards - The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period\n   * - both - The animation will follow the rules for both forwards and backwards, extending the animation properties in both directions\n   * */\n  fillMode?: string;\n\n  /** Specifies the number of times an animation should run. */\n  iterationCount?: string;\n\n  /** Custom parameters for the keyframe defined for the animation. */\n  keyframeParams?: object;\n\n  /**\n   * Specifies whether the animation is running or paused. It can have the following values:\n   * - paused - Specifies that the animation is paused\n   * - running - Default value. Specifies that the animation is running\n   * - initial - Sets this property to its default value.\n   * - inherit - Inherits this property from its parent element.\n   * */\n  playState?: string;\n\n  /**\n   * Specifies the speed curve of the animation. It can have the following values:\n   * - ease - Specifies an animation with a slow start, then fast, then end slowly (this is default)\n   * - linear - Specifies an animation with the same speed from start to end\n   * - ease-in - Specifies an animation with a slow start\n   * - ease-out - Specifies an animation with a slow end\n   * - ease-in-out - Specifies an animation with a slow start and end\n   * - cubic-bezier(n,n,n,n) - Lets you define your own values in a cubic-bezier function\n   */\n  timingFunction?: string;\n\n  /** Show the component; triggers the enter or exit animation. */\n  visible?: boolean;\n\n  /** Run the enter animation when the component mounts, if it is initially shown. */\n  appear?: boolean;\n\n  /** Wait until the first \"enter\" transition to mount the component (add it to the DOM). */\n  mountOnEnter?: boolean;\n\n  /** Unmount the component (remove it from the DOM) when it is not shown. */\n  unmountOnExit?: boolean;\n\n  /** The duration of the transition, in milliseconds. */\n  timeout?: number | { enter?: number; exit?: number; appear?: number };\n\n  /**\n   * Callback fired before the \"entering\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onEnter?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired after the \"entering\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onEntering?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired after the \"entered\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onEntered?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onExit?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onExiting?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onExited?: ComponentEventHandler<AnimationProps>;\n}\n\n/**\n * An Animation provides animation effects to rendered elements.\n */\nexport const Animation = React.forwardRef<HTMLDivElement, AnimationProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Animation.displayName, context.telemetry);\n  setStart();\n\n  const { appear, children, className, mountOnEnter, timeout, visible, unmountOnExit } = props;\n\n  const handleAnimationEvent = (\n    event: 'onEnter' | 'onEntering' | 'onEntered' | 'onExit' | 'onExiting' | 'onExited',\n  ) => () => {\n    _.invoke(props, event, null, props);\n  };\n\n  const { className: animationClasses, animationDuration, animationDelay } = useAnimationStyles(\n    Animation.displayName,\n    props,\n  );\n  const timeoutResult = timeout || calculateAnimationTimeout(animationDuration, animationDelay) || 0;\n\n  const unhandledProps = useUnhandledProps(Animation.handledProps, props);\n\n  const nodeRef = React.useRef();\n  const mergedRef = useMergedRefs(ref, nodeRef);\n\n  if (_.isNil(children)) {\n    setEnd();\n    return null;\n  }\n\n  const isChildrenFunction = typeof children === 'function';\n  const child = childrenExist(children) && !isChildrenFunction && (React.Children.only(children) as React.ReactElement);\n\n  const element = (\n    <Transition\n      nodeRef={nodeRef}\n      in={visible}\n      appear={appear}\n      mountOnEnter={mountOnEnter}\n      unmountOnExit={unmountOnExit}\n      timeout={timeoutResult}\n      onEnter={handleAnimationEvent('onEnter')}\n      onEntering={handleAnimationEvent('onEntering')}\n      onEntered={handleAnimationEvent('onEntered')}\n      onExit={handleAnimationEvent('onExit')}\n      onExiting={handleAnimationEvent('onExiting')}\n      onExited={handleAnimationEvent('onExited')}\n      {...unhandledProps}\n      className={!isChildrenFunction ? cx(animationClasses, className, (child as any)?.props?.className) : ''}\n    >\n      {isChildrenFunction ? (\n        ({ state }) => {\n          const childWithClasses = (children as AnimationChildrenProp)({\n            classes: cx(animationClasses, className, (child as any)?.props?.className),\n            state,\n          }) as React.ReactElement;\n          return childWithClasses ? <Ref innerRef={mergedRef}>{childWithClasses}</Ref> : childWithClasses;\n        }\n      ) : (\n        <Ref innerRef={mergedRef}>\n          {React.cloneElement(child, { className: cx(animationClasses, className, (child as any)?.props?.className) })}\n        </Ref>\n      )}\n    </Transition>\n  );\n  setEnd();\n\n  return element;\n}) as ForwardRefComponent<AnimationProps>;\n\nAnimation.displayName = 'Animation';\n\nAnimation.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    as: false,\n    content: false,\n    children: false,\n  }),\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  name: PropTypes.string,\n  delay: PropTypes.string,\n  direction: PropTypes.string,\n  duration: PropTypes.string,\n  fillMode: PropTypes.string,\n  iterationCount: PropTypes.string,\n  keyframeParams: PropTypes.object,\n  playState: PropTypes.string,\n  timingFunction: PropTypes.string,\n  visible: PropTypes.bool,\n  appear: PropTypes.bool,\n  mountOnEnter: PropTypes.bool,\n  unmountOnExit: PropTypes.bool,\n  timeout: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      appear: PropTypes.number,\n      enter: PropTypes.number,\n      exit: PropTypes.number,\n    }),\n  ]),\n  onEnter: PropTypes.func,\n  onEntering: PropTypes.func,\n  onEntered: PropTypes.func,\n  onExit: PropTypes.func,\n  onExiting: PropTypes.func,\n  onExited: PropTypes.func,\n};\nAnimation.handledProps = Object.keys(Animation.propTypes) as any;\n"],"file":"Animation.js"}