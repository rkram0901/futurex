{"version":3,"sources":["components/Menu/MenuItemWrapper.tsx"],"names":["menuItemWrapperClassName","MenuItemWrapper","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","children","design","styles","variables","content","active","disabled","iconOnly","isFromKeyboard","pills","pointing","secondary","underlined","vertical","primary","on","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","element","root","defaultProps","as","propTypes","commonPropTypes","createCommon","PropTypes","bool","oneOf","customPropTypes","every","disallow","Object","keys","shorthandConfig","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ForwardRefWithAs,\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useAccessibility,\n  getElementType,\n  useUnhandledProps,\n  childrenExist,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { ChildrenComponentProps, commonPropTypes, ContentComponentProps, UIComponentProps } from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\n\nexport interface MenuItemWrapperProps extends UIComponentProps, ContentComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A menu item wrapper can be active. */\n  active?: boolean;\n\n  /** A menu item wrapper can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** A menu item wrapper may have just icons. */\n  iconOnly?: boolean;\n\n  /** Indicates whether the last event was from keyboard. */\n  isFromKeyboard?: boolean;\n\n  /** A menu item wrapper can adjust its appearance to de-emphasize its contents. */\n  pills?: boolean;\n\n  /**\n   * A menu can point to show its relationship to nearby content.\n   * For vertical menu, it can point to the start of the item or to the end.\n   */\n  pointing?: boolean | 'start' | 'end';\n\n  /** The menu item wrapper can have primary type. */\n  primary?: boolean;\n\n  /** The menu item wrapper can have secondary type. */\n  secondary?: boolean;\n\n  /** Menu items wrapper can by highlighted using underline. */\n  underlined?: boolean;\n\n  /** A vertical menu displays elements vertically. */\n  vertical?: boolean;\n\n  /** Menu can be set to open on hover */\n  on?: 'hover';\n}\n\nexport type MenuItemWrapperStylesProps = Required<\n  Pick<\n    MenuItemWrapperProps,\n    | 'active'\n    | 'disabled'\n    | 'iconOnly'\n    | 'isFromKeyboard'\n    | 'pills'\n    | 'pointing'\n    | 'primary'\n    | 'secondary'\n    | 'underlined'\n    | 'vertical'\n    | 'on'\n  >\n>;\n\nexport const menuItemWrapperClassName = 'ui-menu__itemwrapper';\n\n/**\n * A MenuItemWrapper allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemWrapper = (React.forwardRef<HTMLLIElement, MenuItemWrapperProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(MenuItemWrapper.displayName, context.telemetry);\n  setStart();\n\n  const {\n    className,\n    children,\n    design,\n    styles,\n    variables,\n    content,\n    active,\n    disabled,\n    iconOnly,\n    isFromKeyboard,\n    pills,\n    pointing,\n    secondary,\n    underlined,\n    vertical,\n    primary,\n    on,\n  } = props;\n\n  const { classes } = useStyles<MenuItemWrapperStylesProps>(MenuItemWrapper.displayName, {\n    className: menuItemWrapperClassName,\n    mapPropsToStyles: () => ({\n      active,\n      disabled,\n      iconOnly,\n      isFromKeyboard,\n      pills,\n      pointing,\n      secondary,\n      underlined,\n      vertical,\n      primary,\n      on,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: MenuItemWrapper.displayName,\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(MenuItemWrapper.handledProps, props);\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'li', HTMLLIElement, MenuItemWrapperProps> &\n  FluentComponentStaticProps<MenuItemWrapperProps>;\n\nMenuItemWrapper.displayName = 'MenuItemWrapper';\n\nMenuItemWrapper.defaultProps = {\n  as: 'li',\n};\n\nMenuItemWrapper.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  isFromKeyboard: PropTypes.bool,\n  pills: PropTypes.bool,\n  pointing: PropTypes.oneOf(['start', 'end', true, false]),\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  underlined: PropTypes.bool,\n  vertical: PropTypes.bool,\n  on: PropTypes.oneOf(['hover']),\n};\n\nMenuItemWrapper.handledProps = Object.keys(MenuItemWrapper.propTypes) as any;\n\nMenuItemWrapper.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"MenuItemWrapper.js"}