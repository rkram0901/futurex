{"version":3,"sources":["themes/teams/components/Accordion/accordionTitleStyles.ts"],"names":["accordionTitleStyles","root","p","props","display","verticalAlign","padding","cursor","disabled","contentWrapper","v","variables","gridTemplateColumns","msGridColumns","userSelect","content","borderRadius","focusBorderRadius","outline","focusBorderWidth","focusBorderColor","indicator","rtl","alignItems","backgroundImage","color","active","backgroundPosition","transform","overflow","height","width","msGridColumn","marginRight"],"mappings":";;;;;AAGA;;AACA;;AAEO,IAAMA,oBAAgG,GAAG;AAC9GC,EAAAA,IAAI,EAAE;AAAA,QAAUC,CAAV,QAAGC,KAAH;AAAA,WAAmB;AACvBC,MAAAA,OAAO,EAAE,cADc;AAEvBC,MAAAA,aAAa,EAAE,QAFQ;AAGvBC,MAAAA,OAAO,EAAE,SAHc;AAIvBC,MAAAA,MAAM,EAAEL,CAAC,CAACM,QAAF,GAAa,SAAb,GAAyB;AAJV,KAAnB;AAAA,GADwG;AAO9GC,EAAAA,cAAc,EAAE;AAAA,QAAUP,CAAV,SAAGC,KAAH;AAAA,QAAwBO,CAAxB,SAAaC,SAAb;AAAA;AACdP,MAAAA,OAAO,EAAE,MADK;AAEdQ,MAAAA,mBAAmB,EAAE,MAFP;AAGdC,MAAAA,aAAa,EAAE,MAHD;AAIdC,MAAAA,UAAU,EAAE;AAJE,OAKVZ,CAAC,CAACa,OAAF,IAAa;AACfH,MAAAA,mBAAmB,EAAE,UADN;AAEfC,MAAAA,aAAa,EAAE;AAFA,KALH;AASd,wBAAkB;AAChBG,QAAAA,YAAY,EAAEN,CAAC,CAACO,iBADA;AAEhBC,QAAAA,OAAO,EAAKR,CAAC,CAACS,gBAAP,eAAiCT,CAAC,CAACU;AAF1B;AATJ;AAAA,GAP8F;AAqB9GC,EAAAA,SAAS,EAAE;AAAA,QAAUnB,CAAV,SAAGC,KAAH;AAAA,QAAwBO,CAAxB,SAAaC,SAAb;AAAA,QAA2BW,GAA3B,SAA2BA,GAA3B;AAAA;AACTC,MAAAA,UAAU,EAAE,QADH;AAETnB,MAAAA,OAAO,EAAE,aAFA;AAGToB,MAAAA,eAAe,EAAE,4CAAmBd,CAAC,CAACe,KAArB,EAA4BvB,CAAC,CAACwB,MAA9B,CAHR;AAITC,MAAAA,kBAAkB,EAAE;AAJX,OAKLL,GAAG,IAAI;AACTM,MAAAA,SAAS;AADA,KALF;AAQTb,MAAAA,OAAO,EAAE,KARA;AASTc,MAAAA,QAAQ,EAAE,QATD;AAUTC,MAAAA,MAAM,EAAE,MAVC;AAWTC,MAAAA,KAAK,EAAE,oBAAQ,EAAR,CAXE;AAYTC,MAAAA,YAAY,EAAE,GAZL;AAaTC,MAAAA,WAAW,OAAK,oBAAQ,CAAR;AAbP;AAAA,GArBmG;AAoC9GlB,EAAAA,OAAO,EAAE;AAAA,WAAO;AACdQ,MAAAA,UAAU,EAAE,QADE;AAEdnB,MAAAA,OAAO,EAAE,MAFK;AAGd4B,MAAAA,YAAY,EAAE;AAHA,KAAP;AAAA;AApCqG,CAAzG","sourcesContent":["import { ComponentSlotStylesPrepared } from '@fluentui/styles';\nimport { AccordionTitleStylesProps } from '../../../../components/Accordion/AccordionTitle';\nimport { AccordionVariables } from './accordionVariables';\nimport { activeIndicatorUrl } from './activeIndicatorUrl';\nimport { pxToRem } from '../../../../utils';\n\nexport const accordionTitleStyles: ComponentSlotStylesPrepared<AccordionTitleStylesProps, AccordionVariables> = {\n  root: ({ props: p }) => ({\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    padding: '.5rem 0',\n    cursor: p.disabled ? 'default' : 'pointer',\n  }),\n  contentWrapper: ({ props: p, variables: v }) => ({\n    display: 'grid',\n    gridTemplateColumns: 'auto',\n    msGridColumns: 'auto',\n    userSelect: 'none',\n    ...(p.content && {\n      gridTemplateColumns: 'auto 1fr',\n      msGridColumns: 'auto 1fr',\n    }),\n    ':focus-visible': {\n      borderRadius: v.focusBorderRadius,\n      outline: `${v.focusBorderWidth} solid ${v.focusBorderColor}`,\n    },\n  }),\n  indicator: ({ props: p, variables: v, rtl }) => ({\n    alignItems: 'center',\n    display: 'inline-flex',\n    backgroundImage: activeIndicatorUrl(v.color, p.active),\n    backgroundPosition: 'center',\n    ...(rtl && {\n      transform: `scaleX(-1)`,\n    }),\n    content: '\" \"',\n    overflow: 'hidden',\n    height: '100%',\n    width: pxToRem(16),\n    msGridColumn: '1',\n    marginRight: `${pxToRem(4)}`,\n  }),\n  content: () => ({\n    alignItems: 'center',\n    display: 'grid',\n    msGridColumn: '2',\n  }),\n};\n"],"file":"accordionTitleStyles.js"}