{"version":3,"sources":["components/Breadcrumb/BreadcrumbLink.tsx"],"names":["breadcrumbLinkClassName","BreadcrumbLink","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","children","content","className","design","styles","variables","size","getA11yProps","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","unhandledProps","handledProps","ElementType","result","root","defaultProps","as","propTypes","commonPropTypes","createCommon"],"mappings":";;;;;AAAA;;AACA;;AAUA;;AAGA;;;;;;AAYO,IAAMA,uBAAuB,GAAG,qBAAhC;AAEP;AACA;AACA;;;AACO,IAAMC,cAAc,GAAG,4BAC5B,UAACC,KAAD,EAAQC,GAAR,EAAaC,cAAb,EAAgC;AAC9B,MAAMC,OAAO,GAAG,sCAAhB;;AACA,sBAA6B,iCAAaD,cAAc,CAACE,WAA5B,EAAyCD,OAAO,CAACE,SAAjD,CAA7B;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,EAAAA,QAAQ;AACR,MAAQE,aAAR,GAAmFR,KAAnF,CAAQQ,aAAR;AAAA,MAAuBC,QAAvB,GAAmFT,KAAnF,CAAuBS,QAAvB;AAAA,MAAiCC,OAAjC,GAAmFV,KAAnF,CAAiCU,OAAjC;AAAA,MAA0CC,SAA1C,GAAmFX,KAAnF,CAA0CW,SAA1C;AAAA,MAAqDC,MAArD,GAAmFZ,KAAnF,CAAqDY,MAArD;AAAA,MAA6DC,MAA7D,GAAmFb,KAAnF,CAA6Da,MAA7D;AAAA,MAAqEC,SAArE,GAAmFd,KAAnF,CAAqEc,SAArE;;AACA,8BAAiB,8CAAjB;AAAA,MAAQC,IAAR,yBAAQA,IAAR;;AAEA,MAAMC,YAAY,GAAG,qCAAiBR,aAAjB,EAAgC;AACnDS,IAAAA,SAAS,EAAEf,cAAc,CAACE,WADyB;AAEnDc,IAAAA,GAAG,EAAEf,OAAO,CAACe;AAFsC,GAAhC,CAArB;;AAKA,mBAAoB,8BAAqChB,cAAc,CAACE,WAApD,EAAiE;AACnFO,IAAAA,SAAS,EAAET,cAAc,CAACS,SADyD;AAEnFT,IAAAA,cAAc,EAAdA,cAFmF;AAGnFiB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBJ,QAAAA,IAAI,EAAJA;AADuB,OAAP;AAAA,KAHiE;AAMnFK,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BT,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAN2D;AAYnFI,IAAAA,GAAG,EAAEf,OAAO,CAACe,GAZsE;AAanFG,IAAAA,cAAc,EAAErB;AAbmE,GAAjE,CAApB;AAAA,MAAQsB,OAAR,cAAQA,OAAR;;AAgBA,MAAMC,cAAc,GAAG,sCAAkBrB,cAAc,CAACsB,YAAjC,EAA+CxB,KAA/C,CAAvB;AACA,MAAMyB,WAAW,GAAG,mCAAezB,KAAf,CAApB;AAEA,MAAM0B,MAAM,gBACV,oBAAC,WAAD,EACMV,YAAY,CAAC,MAAD;AACdL,IAAAA,SAAS,EAAEW,OAAO,CAACK,IADL;AAEd1B,IAAAA,GAAG,EAAHA;AAFc,KAGXsB,cAHW,EADlB,EAOG,kCAAcd,QAAd,IAA0BA,QAA1B,GAAqCC,OAPxC,CADF;AAYAH,EAAAA,MAAM;AAEN,SAAOmB,MAAP;AACD,CA/C2B,EAgD5B;AACEf,EAAAA,SAAS,EAAEb,uBADb;AAEEM,EAAAA,WAAW,EAAE,gBAFf;AAGEoB,EAAAA,YAAY,EAAE,CAAC,eAAD,EAAkB,IAAlB,EAAwB,UAAxB,EAAoC,WAApC,EAAiD,SAAjD,EAA4D,QAA5D,EAAsE,QAAtE,EAAgF,WAAhF;AAHhB,CAhD4B,CAAvB;;AAuDPzB,cAAc,CAAC6B,YAAf,GAA8B;AAC5BC,EAAAA,EAAE,EAAE;AADwB,CAA9B;AAIA9B,cAAc,CAAC+B,SAAf,GAA2BC,uBAAgBC,YAAhB,EAA3B","sourcesContent":["import * as React from 'react';\nimport {\n  compose,\n  useFluentContext,\n  useTelemetry,\n  useAccessibility,\n  useStyles,\n  useUnhandledProps,\n  getElementType,\n  childrenExist,\n} from '@fluentui/react-bindings';\nimport { commonPropTypes, UIComponentProps, ContentComponentProps, ChildrenComponentProps } from '../../utils';\n\nimport { Accessibility } from '@fluentui/accessibility';\nimport { useBreadcrumbContext, BreadcrumbSizeValues } from './breadcrumbContext';\n\nexport interface BreadcrumbLinkProps\n  extends UIComponentProps<BreadcrumbLinkProps>,\n    ContentComponentProps,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n}\n\nexport type BreadcrumbLinkStylesProps = { size: BreadcrumbSizeValues };\n\nexport const breadcrumbLinkClassName = 'ui-breadcrumb__link';\n\n/**\n * An BreadcrumbLink represents a anchor to be used inside the Breadcrumb\n */\nexport const BreadcrumbLink = compose<'a', BreadcrumbLinkProps, BreadcrumbLinkStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const { accessibility, children, content, className, design, styles, variables } = props;\n    const { size } = useBreadcrumbContext();\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<BreadcrumbLinkStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        size,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const result = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n  {\n    className: breadcrumbLinkClassName,\n    displayName: 'BreadcrumbLink',\n    handledProps: ['accessibility', 'as', 'children', 'className', 'content', 'design', 'styles', 'variables'],\n  },\n);\n\nBreadcrumbLink.defaultProps = {\n  as: 'a',\n};\n\nBreadcrumbLink.propTypes = commonPropTypes.createCommon();\n"],"file":"BreadcrumbLink.js"}