"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.SvgIcon = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _reactBindings = require("@fluentui/react-bindings");

var _reactIconsNorthstar = require("@fluentui/react-icons-northstar");

var _styles = require("@fluentui/styles");

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * An SvgIcon displays a pictogram with semantic meaning.
 */
var SvgIcon = function SvgIcon(props) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(SvgIcon.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var alt = props.alt,
      ariaLabel = props['aria-label'],
      bordered = props.bordered,
      circular = props.circular,
      className = props.className,
      design = props.design,
      disabled = props.disabled,
      children = props.children,
      outline = props.outline,
      rotate = props.rotate,
      size = props.size,
      styles = props.styles,
      variables = props.variables,
      xSpacing = props.xSpacing;

  var _useStyles = (0, _reactBindings.useStyles)(SvgIcon.displayName, {
    className: _reactIconsNorthstar.svgIconClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        bordered: bordered,
        circular: circular,
        disabled: disabled,
        outline: outline,
        rotate: rotate,
        size: size,
        xSpacing: xSpacing
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.getUnhandledProps)(SvgIcon.handledProps, props);
  var element = /*#__PURE__*/React.createElement(ElementType, (0, _extends2.default)({
    role: "img",
    "aria-hidden": alt || ariaLabel ? undefined : 'true',
    "aria-label": ariaLabel,
    className: classes.root
  }, unhandledProps), (0, _styles.callable)(children)({
    classes: classes,
    rtl: context.rtl,
    props: props
  }));
  setEnd();
  return element;
};

exports.SvgIcon = SvgIcon;
SvgIcon.displayName = _reactIconsNorthstar.svgIconDisplayName;
SvgIcon.handledProps = [].concat(_reactIconsNorthstar.svgIconHandledProps, ['children']);
SvgIcon.defaultProps = {
  as: 'span',
  size: 'medium',
  rotate: 0
};
//# sourceMappingURL=SvgIcon.js.map
