"use strict";

exports.__esModule = true;
exports.cardBodyClassName = exports.CardBody = void 0;

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _reactBindings = require("@fluentui/react-bindings");

var PropTypes = _interopRequireWildcard(require("prop-types"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var cardBodyClassName = 'ui-card__body';
/**
 * A CardBody is used to display data in Card body.
 */

exports.cardBodyClassName = cardBodyClassName;
var CardBody = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(CardBody.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables,
      children = props.children,
      fitted = props.fitted;
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(CardBody.handledProps, props);
  var getA11yProps = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: CardBody.displayName,
    rtl: context.rtl
  });

  var _useStyles = (0, _reactBindings.useStyles)(CardBody.displayName, {
    className: cardBodyClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        fitted: fitted
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes;

  var element = /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({
    className: classes.root,
    ref: ref
  }, unhandledProps)), children);
  setEnd();
  return element;
});
exports.CardBody = CardBody;
CardBody.displayName = 'CardBody';
CardBody.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  fitted: PropTypes.bool
});
CardBody.handledProps = Object.keys(CardBody.propTypes);
CardBody.create = (0, _utils.createShorthandFactory)({
  Component: CardBody
});
//# sourceMappingURL=CardBody.js.map
