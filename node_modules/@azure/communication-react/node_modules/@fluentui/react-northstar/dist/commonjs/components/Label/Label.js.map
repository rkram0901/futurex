{"version":3,"sources":["components/Label/Label.tsx"],"names":["labelClassName","Label","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","circular","color","content","icon","iconPosition","design","styles","variables","image","imagePosition","getA11Props","debugName","rtl","mapPropsToStyles","hasActionableIcon","hasImage","hasIcon","mapPropsToInlineStyles","classes","resolvedStyles","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","imageElement","Image","create","defaultProps","iconElement","Box","contentElement","startImage","startIcon","endIcon","endImage","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","shorthandAllowingChildren","oneOf","itemShorthandWithoutJSX","fluid","Object","keys","as","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { Image, ImageProps } from '../Image/Image';\nimport { Box, BoxProps } from '../Box/Box';\n\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\n\nexport interface LabelProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A Label can be circular. */\n  circular?: boolean;\n\n  /** A Label can take up the width of its container. */\n  fluid?: boolean;\n\n  /** A Label can have an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** A Label can position its Icon at the start or end of the layout. */\n  iconPosition?: 'start' | 'end';\n\n  /** A Label can contain an image. */\n  image?: ShorthandValue<ImageProps>;\n\n  /** A Label can position its image at the start or end of the layout. */\n  imagePosition?: 'start' | 'end';\n}\n\nexport type LabelStylesProps = Pick<LabelProps, 'circular' | 'color' | 'imagePosition' | 'iconPosition'> & {\n  hasImage: boolean;\n  hasIcon: boolean;\n  hasActionableIcon: boolean;\n};\nexport const labelClassName = 'ui-label';\n\n/**\n * A Label allows user to classify content.\n */\nexport const Label = (React.forwardRef<HTMLSpanElement, LabelProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Label.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    circular,\n    color,\n    content,\n    icon,\n    iconPosition,\n    design,\n    styles,\n    variables,\n    image,\n    imagePosition,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Label.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<LabelStylesProps>(Label.displayName, {\n    className: labelClassName,\n    mapPropsToStyles: () => ({\n      hasActionableIcon: _.has(icon, 'onClick'),\n      hasImage: !!image,\n      hasIcon: !!icon,\n      circular,\n      color,\n      imagePosition,\n      iconPosition,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Label.handledProps, props);\n\n  if (childrenExist(children)) {\n    const element = (\n      <ElementType\n        {...getA11Props('root', {\n          className: classes.root,\n          ref,\n          ...rtlTextContainer.getAttributes({ forElements: [children] }),\n          ...unhandledProps,\n        })}\n      >\n        {children}\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  }\n\n  const imageElement = Image.create(image, {\n    defaultProps: () => ({\n      styles: resolvedStyles.image,\n    }),\n  });\n  const iconElement = Box.create(icon, {\n    defaultProps: () => ({\n      styles: resolvedStyles.icon,\n    }),\n  });\n  const contentElement = Box.create(content, {\n    defaultProps: () => ({\n      styles: resolvedStyles.content,\n    }),\n  });\n\n  const startImage = imagePosition === 'start' && imageElement;\n  const startIcon = iconPosition === 'start' && iconElement;\n  const endIcon = iconPosition === 'end' && iconElement;\n  const endImage = imagePosition === 'end' && imageElement;\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {startImage}\n      {startIcon}\n      {contentElement}\n      {endIcon}\n      {endImage}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, LabelProps> & FluentComponentStaticProps;\n\nLabel.displayName = 'Label';\n\nLabel.propTypes = {\n  ...commonPropTypes.createCommon({ color: true, content: 'shorthand' }),\n  circular: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['start', 'end']),\n  image: customPropTypes.itemShorthandWithoutJSX,\n  imagePosition: PropTypes.oneOf(['start', 'end']),\n  fluid: PropTypes.bool,\n};\nLabel.handledProps = Object.keys(Label.propTypes) as any;\n\nLabel.defaultProps = {\n  as: 'span',\n  imagePosition: 'start',\n  iconPosition: 'end',\n};\n\nLabel.create = createShorthandFactory({ Component: Label, mappedProp: 'content' });\n"],"file":"Label.js"}