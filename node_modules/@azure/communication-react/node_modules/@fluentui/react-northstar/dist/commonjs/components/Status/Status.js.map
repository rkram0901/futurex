{"version":3,"sources":["components/Status/Status.tsx"],"names":["statusClassName","Status","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","color","icon","size","state","design","styles","variables","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11Props","accessibility","debugName","ElementType","unhandledProps","handledProps","iconElement","Box","create","defaultProps","as","element","root","propTypes","commonPropTypes","createCommon","children","content","PropTypes","string","customPropTypes","shorthandAllowingChildren","oneOf","Object","keys","statusBehavior","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, statusBehavior, StatusBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { createShorthandFactory, UIComponentProps, commonPropTypes, SizeValue } from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\n\nexport interface StatusProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<StatusBehaviorProps>;\n\n  /** A custom color. */\n  color?: string;\n\n  /** Shorthand for the icon, to provide customizing status */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** Size multiplier */\n  size?: SizeValue;\n\n  /** The pre-defined state values which can be consumed directly. */\n  state?: 'success' | 'info' | 'warning' | 'error' | 'unknown';\n}\n\nexport type StatusStylesProps = Pick<StatusProps, 'color' | 'size' | 'state'>;\nexport const statusClassName = 'ui-status';\n\n/**\n * A Status represents someone's or something's state.\n *\n * @accessibility\n * Implements [ARIA img](https://www.w3.org/TR/wai-aria-1.1/#img) role.\n */\nexport const Status = (React.forwardRef<HTMLSpanElement, StatusProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Status.displayName, context.telemetry);\n  setStart();\n\n  const { className, color, icon, size, state, design, styles, variables } = props;\n  const { classes, styles: resolvedStyles } = useStyles<StatusStylesProps>(Status.displayName, {\n    className: statusClassName,\n    mapPropsToStyles: () => ({\n      color,\n      size,\n      state,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n  const getA11Props = useAccessibility(props.accessibility, {\n    debugName: Status.displayName,\n    rtl: context.rtl,\n  });\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Status.handledProps, props);\n\n  const iconElement = Box.create(icon, {\n    defaultProps: () =>\n      getA11Props('icon', {\n        styles: resolvedStyles.icon,\n        as: 'span',\n      }),\n  });\n\n  const element = (\n    <ElementType {...getA11Props('root', { className: classes.root, ref, ...unhandledProps })}>\n      {iconElement}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, StatusProps> & FluentComponentStaticProps;\n\nStatus.displayName = 'Status';\nStatus.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  color: PropTypes.string,\n  icon: customPropTypes.shorthandAllowingChildren,\n  size: customPropTypes.size,\n  state: PropTypes.oneOf<'success' | 'info' | 'warning' | 'error' | 'unknown'>([\n    'success',\n    'info',\n    'warning',\n    'error',\n    'unknown',\n  ]),\n};\nStatus.handledProps = Object.keys(Status.propTypes) as any;\nStatus.defaultProps = {\n  accessibility: statusBehavior,\n  as: 'span' as const,\n  size: 'medium',\n  state: 'unknown',\n};\n\nStatus.create = createShorthandFactory({ Component: Status, mappedProp: 'state' });\n"],"file":"Status.js"}