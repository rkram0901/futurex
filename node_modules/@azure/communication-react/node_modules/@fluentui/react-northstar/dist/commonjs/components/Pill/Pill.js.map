{"version":3,"sources":["components/Pill/Pill.tsx"],"names":["pillClassName","Pill","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","parentProps","className","design","styles","variables","appearance","size","rectangular","children","content","disabled","action","actionable","image","icon","selectable","selectedIndicator","defaultValue","defaultSelected","value","selected","initialValue","setSelected","ElementType","unhandledProps","handledProps","handleDismiss","e","handleClick","prevSelected","getA11yProps","accessibility","pillBehavior","debugName","actionHandlers","performDismiss","performClick","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","getSelectedIndicator","element","unstable_wrapWithFocusZone","root","onClick","PillIcon","defaultProps","PillImage","PillContent","PillAction","overrideProps","prevProps","as","propTypes","commonPropTypes","createCommon","customPropTypes","shorthandAllowingChildren","PropTypes","oneOf","bool","onDismiss","func","Object","keys"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAIA;;AAUA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAuFO,IAAMA,aAAa,GAAG,SAAtB;AAEP;AACA;AACA;AACA;;;AACO,IAAMC,IAAI,gBAAIC,KAAK,CAACC,UAAN,CAA6C,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAChF,MAAMC,OAAO,GAAG,sCAAhB;;AACA,sBAA6B,iCAAaL,IAAI,CAACM,WAAlB,EAA+BD,OAAO,CAACE,SAAvC,CAA7B;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,EAAAA,QAAQ;AAER,MAAME,WAAW,GAAG,kCAApB;AAEA,MACEC,SADF,GAiBIR,KAjBJ,CACEQ,SADF;AAAA,MAEEC,MAFF,GAiBIT,KAjBJ,CAEES,MAFF;AAAA,MAGEC,MAHF,GAiBIV,KAjBJ,CAGEU,MAHF;AAAA,MAIEC,SAJF,GAiBIX,KAjBJ,CAIEW,SAJF;AAAA,MAKEC,UALF,GAiBIZ,KAjBJ,CAKEY,UALF;AAAA,MAMEC,IANF,GAiBIb,KAjBJ,CAMEa,IANF;AAAA,MAOEC,WAPF,GAiBId,KAjBJ,CAOEc,WAPF;AAAA,MAQEC,QARF,GAiBIf,KAjBJ,CAQEe,QARF;AAAA,MASEC,OATF,GAiBIhB,KAjBJ,CASEgB,OATF;AAAA,MAUEC,QAVF,GAiBIjB,KAjBJ,CAUEiB,QAVF;AAAA,MAWEC,MAXF,GAiBIlB,KAjBJ,CAWEkB,MAXF;AAAA,MAYEC,UAZF,GAiBInB,KAjBJ,CAYEmB,UAZF;AAAA,MAaEC,KAbF,GAiBIpB,KAjBJ,CAaEoB,KAbF;AAAA,MAcEC,IAdF,GAiBIrB,KAjBJ,CAcEqB,IAdF;AAAA,MAeEC,UAfF,GAiBItB,KAjBJ,CAeEsB,UAfF;AAAA,MAgBEC,iBAhBF,GAiBIvB,KAjBJ,CAgBEuB,iBAhBF;;AAmBA,2BAAgC,sCAAkB;AAChDC,IAAAA,YAAY,EAAExB,KAAK,CAACyB,eAD4B;AAEhDC,IAAAA,KAAK,EAAE1B,KAAK,CAAC2B,QAFmC;AAGhDC,IAAAA,YAAY,EAAE;AAHkC,GAAlB,CAAhC;AAAA,MAAOD,QAAP;AAAA,MAAiBE,WAAjB;;AAMA,MAAMC,WAAW,GAAG,mCAAe9B,KAAf,CAApB;AACA,MAAM+B,cAAc,GAAG,sCAAkBlC,IAAI,CAACmC,YAAvB,EAAqChC,KAArC,CAAvB;;AAEA,MAAMiC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC,EAAI;AACzB,0BAASlC,KAAT,EAAgB,WAAhB,EAA6BkC,CAA7B,EAAgClC,KAAhC;AACD,GAFD;;AAIA,MAAMmC,WAAW,GAAG,SAAdA,WAAc,CAAAD,CAAC,EAAI;AACvB,QAAIZ,UAAJ,EAAgB;AACdO,MAAAA,WAAW,CAAC,UAAAO,YAAY;AAAA,eAAI,CAACA,YAAL;AAAA,OAAb,CAAX;AACA,4BAASpC,KAAT,EAAgB,mBAAhB,EAAqCkC,CAArC,oBAA6ClC,KAA7C;AAAoD2B,QAAAA,QAAQ,EAAE,CAACA;AAA/D;AACD;;AACD,0BAAS3B,KAAT,EAAgB,SAAhB,EAA2BkC,CAA3B,EAA8BlC,KAA9B;AACD,GAND;;AAQA,MAAMqC,YAAY,GAAG,qCAAiBrC,KAAK,CAACsC,aAAN,IAAuB/B,WAAW,CAACgC,YAAnC,IAAmDA,2BAApE,EAAkF;AACrGC,IAAAA,SAAS,EAAE3C,IAAI,CAACM,WADqF;AAErGsC,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAET,aADF;AAEdU,MAAAA,YAAY,EAAER;AAFA,KAFqF;AAMrGS,IAAAA,kBAAkB,EAAE;AAAA,aAAO;AACzBzB,QAAAA,UAAU,EAAVA,UADyB;AAEzBG,QAAAA,UAAU,EAAVA,UAFyB;AAGzBK,QAAAA,QAAQ,EAARA;AAHyB,OAAP;AAAA,KANiF;AAWrGkB,IAAAA,GAAG,EAAE3C,OAAO,CAAC2C;AAXwF,GAAlF,CAArB;;AAcA,mBAAoB,8BAA2BhD,IAAI,CAACM,WAAhC,EAA6C;AAC/DK,IAAAA,SAAS,EAAEZ,aADoD;AAE/DkD,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBlC,QAAAA,UAAU,EAAVA,UADuB;AAEvBC,QAAAA,IAAI,EAAJA,IAFuB;AAGvBC,QAAAA,WAAW,EAAXA,WAHuB;AAIvBG,QAAAA,QAAQ,EAARA,QAJuB;AAKvBK,QAAAA,UAAU,EAAVA,UALuB;AAMvBK,QAAAA,QAAQ,EAARA;AANuB,OAAP;AAAA,KAF6C;AAU/DoB,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BvC,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAVuC;AAgB/DkC,IAAAA,GAAG,EAAE3C,OAAO,CAAC2C;AAhBkD,GAA7C,CAApB;AAAA,MAAQG,OAAR,cAAQA,OAAR;;AAmBA,MAAMC,oBAAyD,GAAG,SAA5DA,oBAA4D,GAAM;AACtE,QAAI,CAAC,CAAC1B,iBAAN,EAAyB;AACvB,aAAOA,iBAAP;AACD;;AAED,QAAI,CAAC,CAACH,KAAN,EAAa;AACX,0BAAO,oBAAC,wCAAD,OAAP;AACD;;AAED,wBAAO,oBAAC,+BAAD,OAAP;AACD,GAVD;;AAYA,MAAM8B,OAAO,GAAGb,YAAY,CAACc,0BAAb,eACd,oBAAC,WAAD,EACMd,YAAY,CAAC,MAAD;AACd7B,IAAAA,SAAS,EAAEwC,OAAO,CAACI,IADL;AAEdnD,IAAAA,GAAG,EAAHA;AAFc,KAGVkB,UAAU,IAAI;AAAEkC,IAAAA,OAAO,EAAElB;AAAX,GAHJ,EAIXJ,cAJW,EADlB,EAQGT,UAAU,IACTK,QADD,IAEC,4BAAgB2B,kBAAhB,EAA0BL,oBAAoB,EAA9C,EAAkD;AAChDM,IAAAA,YAAY,EAAE;AAAA,aAAO;AAAE1C,QAAAA,IAAI,EAAJA,IAAF;AAAQS,QAAAA,UAAU,EAAVA,UAAR;AAAoBF,QAAAA,KAAK,EAALA;AAApB,OAAP;AAAA;AADkC,GAAlD,CAVJ,EAaG,CAACO,QAAD,IACC,4BAAgB6B,oBAAhB,EAA2BpC,KAA3B,EAAkC;AAChCmC,IAAAA,YAAY,EAAE;AAAA,aAAO;AAAE1C,QAAAA,IAAI,EAAJA;AAAF,OAAP;AAAA;AADkB,GAAlC,CAdJ,EAiBG,CAACc,QAAD,IACC,4BAAgB2B,kBAAhB,EAA0BjC,IAA1B,EAAgC;AAC9BkC,IAAAA,YAAY,EAAE;AAAA,aAAO;AAAE1C,QAAAA,IAAI,EAAJA;AAAF,OAAP;AAAA;AADgB,GAAhC,CAlBJ,EAqBG,4BAAgB4C,wBAAhB,EAA8BzC,OAAD,IAAiD,EAA9E,EAAkF;AACjFuC,IAAAA,YAAY,EAAE;AAAA,aAAO;AACnBxC,QAAAA,QAAQ,EAARA,QADmB;AAEnBF,QAAAA,IAAI,EAAJA,IAFmB;AAGnBM,QAAAA,UAAU,EAAVA;AAHmB,OAAP;AAAA;AADmE,GAAlF,CArBH,EA4BGA,UAAU,IACT,4BAAgBuC,sBAAhB,EAA4BxC,MAAM,IAAI,EAAtC,EAA0C;AACxCyC,IAAAA,aAAa,EAAE,uBAACC,SAAD;AAAA,aAA8E;AAC3FP,QAAAA,OAAO,EAAE,iBAAAnB,CAAC,EAAI;AACZ,gCAAS0B,SAAT,EAAoB,SAApB,EAA+B1B,CAA/B;AACAD,UAAAA,aAAa,CAACC,CAAD,CAAb;AACD;AAJ0F,OAA9E;AAAA;AADyB,GAA1C,CA7BJ,CADc,CAAhB;AAyCA5B,EAAAA,MAAM;AAEN,SAAO4C,OAAP;AACD,CAxIoB,CAAd;;AA0IPrD,IAAI,CAAC0D,YAAL,GAAoB;AAClBM,EAAAA,EAAE,EAAE;AADc,CAApB;AAIAhE,IAAI,CAACiE,SAAL,qBACKC,uBAAgBC,YAAhB,EADL;AAEEhD,EAAAA,OAAO,EAAEiD,eAAe,CAACC,yBAF3B;AAGErD,EAAAA,IAAI,EAAEsD,SAAS,CAACC,KAAV,CAAgD,CAAC,OAAD,EAAU,SAAV,EAAqB,QAArB,CAAhD,CAHR;AAIEtD,EAAAA,WAAW,EAAEqD,SAAS,CAACE,IAJzB;AAKEpD,EAAAA,QAAQ,EAAEkD,SAAS,CAACE,IALtB;AAMEzD,EAAAA,UAAU,EAAEuD,SAAS,CAACC,KAAV,CAAmD,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,CAAnD,CANd;AAOEjD,EAAAA,UAAU,EAAEgD,SAAS,CAACE,IAPxB;AAQEnD,EAAAA,MAAM,EAAE+C,eAAe,CAACC,yBAR1B;AASEI,EAAAA,SAAS,EAAEH,SAAS,CAACI,IATvB;AAUEhD,EAAAA,iBAAiB,EAAE0C,eAAe,CAACC,yBAVrC;AAWE5C,EAAAA,UAAU,EAAE6C,SAAS,CAACE,IAXxB;AAYE1C,EAAAA,QAAQ,EAAEwC,SAAS,CAACE,IAZtB;AAaE5C,EAAAA,eAAe,EAAE0C,SAAS,CAACE,IAb7B;AAcEjD,EAAAA,KAAK,EAAE6C,eAAe,CAACC;AAdzB;AAiBArE,IAAI,CAACM,WAAL,GAAmB,MAAnB;AAEAN,IAAI,CAACmC,YAAL,GAAoBwC,MAAM,CAACC,IAAP,CAAY5E,IAAI,CAACiE,SAAjB,CAApB","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport { Accessibility, pillBehavior, PillBehaviorProps } from '@fluentui/accessibility';\nimport { UIComponentProps, ContentComponentProps, commonPropTypes, SizeValue, createShorthand } from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps, ComponentEventHandler } from '../../types';\nimport { BoxProps } from '../Box/Box';\n\nimport {\n  useAccessibility,\n  getElementType,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  useAutoControlled,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { PillContent, PillContentProps } from './PillContent';\nimport { PillActionProps, PillAction } from './PillAction';\nimport { usePillContext } from './pillContext';\nimport { PillImageProps, PillImage } from './PillImage';\nimport { PillIcon, PillIconProps } from './PillIcon';\nimport { CheckmarkCircleIcon, AcceptIcon } from '@fluentui/react-icons-northstar';\n\nexport interface PillProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<PillBehaviorProps>;\n\n  /**\n   * A Pill can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n\n  /**\n   * A Pill can be rectangular\n   */\n  rectangular?: boolean;\n\n  /**\n   * A Pill can be filled, inverted or outline\n   */\n  appearance?: 'filled' | 'inverted' | 'outline';\n\n  /**\n   * A Pill can be disbled\n   */\n  disabled?: boolean;\n\n  /**\n   * A Pill can be actionable\n   */\n  actionable?: boolean;\n\n  /**\n   * A PillAction shorthand for the action slot.\n   */\n  action?: ShorthandValue<PillActionProps>;\n\n  /**\n   * A PillAction shorthand for the action slot.\n   */\n  icon?: ShorthandValue<PillIconProps>;\n\n  /**\n   * A PillImage shorthand for the image slot.\n   */\n  image?: ShorthandValue<PillImageProps>;\n\n  /**\n   * Called after user will dismiss the Pill.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onDismiss?: ComponentEventHandler<PillProps>;\n\n  /**\n   * A Pill can be selectable\n   */\n  selectable?: boolean;\n\n  /**\n   * A Pill state for selection\n   */\n  selected?: boolean;\n\n  /**\n   * A Pill can be selected by default\n   */\n  defaultSelected?: boolean;\n\n  /**\n   * A Pill can have custom selected indicator\n   */\n  selectedIndicator?: ShorthandValue<PillIconProps>;\n\n  /**\n   * Called after user change selected state\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onSelectionChange?: ComponentEventHandler<PillProps>;\n}\n\nexport type PillStylesProps = Required<\n  Pick<PillProps, 'appearance' | 'size' | 'rectangular' | 'disabled' | 'selectable' | 'selected'>\n>;\n\nexport const pillClassName = 'ui-pill';\n\n/**\n * THIS COMPONENT IS UNSTABLE\n * Pills should be used when representing an input, as a way to filter content, or to represent an attribute.\n */\nexport const Pill = (React.forwardRef<HTMLSpanElement, PillProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Pill.displayName, context.telemetry);\n  setStart();\n\n  const parentProps = usePillContext();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    appearance,\n    size,\n    rectangular,\n    children,\n    content,\n    disabled,\n    action,\n    actionable,\n    image,\n    icon,\n    selectable,\n    selectedIndicator,\n  } = props;\n\n  const [selected, setSelected] = useAutoControlled({\n    defaultValue: props.defaultSelected,\n    value: props.selected,\n    initialValue: false,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Pill.handledProps, props);\n\n  const handleDismiss = e => {\n    _.invoke(props, 'onDismiss', e, props);\n  };\n\n  const handleClick = e => {\n    if (selectable) {\n      setSelected(prevSelected => !prevSelected);\n      _.invoke(props, 'onSelectionChange', e, { ...props, selected: !selected });\n    }\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const getA11yProps = useAccessibility(props.accessibility || parentProps.pillBehavior || pillBehavior, {\n    debugName: Pill.displayName,\n    actionHandlers: {\n      performDismiss: handleDismiss,\n      performClick: handleClick,\n    },\n    mapPropsToBehavior: () => ({\n      actionable,\n      selectable,\n      selected,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillStylesProps>(Pill.displayName, {\n    className: pillClassName,\n    mapPropsToStyles: () => ({\n      appearance,\n      size,\n      rectangular,\n      disabled,\n      selectable,\n      selected,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getSelectedIndicator: () => ShorthandValue<PillIconProps> = () => {\n    if (!!selectedIndicator) {\n      return selectedIndicator;\n    }\n\n    if (!!image) {\n      return <CheckmarkCircleIcon />;\n    }\n\n    return <AcceptIcon />;\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...(actionable && { onClick: handleClick }),\n        ...unhandledProps,\n      })}\n    >\n      {selectable &&\n        selected &&\n        createShorthand(PillIcon, getSelectedIndicator(), {\n          defaultProps: () => ({ size, selectable, image }),\n        })}\n      {!selected &&\n        createShorthand(PillImage, image, {\n          defaultProps: () => ({ size }),\n        })}\n      {!selected &&\n        createShorthand(PillIcon, icon, {\n          defaultProps: () => ({ size }),\n        })}\n      {createShorthand(PillContent, (content as ShorthandValue<PillContentProps>) || {}, {\n        defaultProps: () => ({\n          children,\n          size,\n          actionable,\n        }),\n      })}\n      {actionable &&\n        createShorthand(PillAction, action || {}, {\n          overrideProps: (prevProps: PillActionProps & { onClick: (e: React.MouseEvent) => void }) => ({\n            onClick: e => {\n              _.invoke(prevProps, 'onClick', e);\n              handleDismiss(e);\n            },\n          }),\n        })}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, PillProps> & FluentComponentStaticProps<PillProps>;\n\nPill.defaultProps = {\n  as: 'span' as const,\n};\n\nPill.propTypes = {\n  ...commonPropTypes.createCommon(),\n  content: customPropTypes.shorthandAllowingChildren,\n  size: PropTypes.oneOf<'small' | 'smaller' | 'medium'>(['small', 'smaller', 'medium']),\n  rectangular: PropTypes.bool,\n  disabled: PropTypes.bool,\n  appearance: PropTypes.oneOf<'filled' | 'inverted' | 'outline'>(['filled', 'inverted', 'outline']),\n  actionable: PropTypes.bool,\n  action: customPropTypes.shorthandAllowingChildren,\n  onDismiss: PropTypes.func,\n  selectedIndicator: customPropTypes.shorthandAllowingChildren,\n  selectable: PropTypes.bool,\n  selected: PropTypes.bool,\n  defaultSelected: PropTypes.bool,\n  image: customPropTypes.shorthandAllowingChildren,\n};\n\nPill.displayName = 'Pill';\n\nPill.handledProps = Object.keys(Pill.propTypes) as any;\n"],"file":"Pill.js"}