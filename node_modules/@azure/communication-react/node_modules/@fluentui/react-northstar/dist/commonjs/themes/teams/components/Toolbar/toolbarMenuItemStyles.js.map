{"version":3,"sources":["themes/teams/components/Toolbar/toolbarMenuItemStyles.ts"],"names":["toolbarMenuItemStyles","root","p","props","v","variables","siteVariables","theme","colors","colorScheme","borderFocusStyles","borderRadius","position","color","menuItemForeground","foreground1","borderWidth","menuBorderWidth","backgroundColor","borderColor","display","alignItems","textAlign","width","maxWidth","padding","menuItemPadding","cursor","minHeight","itemHeight","lineHeight","lineHeightBase","userSelect","outline","menuItemForegroundHover","menuItemBackgroundHover","toolbarMenuItemSubmenuIndicatorClassName","toolbarMenuItemActiveIndicatorClassName","backgroundImage","disabled","disabledFocusable","menuItemForegroundDisabled","foregroundDisabled1","menuItemBackgroundDisabled","pointerEvents","wrapper"],"mappings":";;;;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAEO,IAAMA,qBAAgG,GAAG;AAC9GC,EAAAA,IAAI,EAAE,oBAAyE;AAAA;;AAAA,QAA/DC,CAA+D,QAAtEC,KAAsE;AAAA,QAAjDC,CAAiD,QAA5DC,SAA4D;AAAA,QAArCC,aAAqC,QAA9CC,KAA8C,CAArCD,aAAqC;AAC7E,QAAME,MAAM,GAAG,4BAAeJ,CAAC,CAACK,WAAjB,CAAf;AACA,QAAMC,iBAAiB,GAAG,gDAAqB;AAC7CL,MAAAA,SAAS,EAAEC,aADkC;AAE7CK,MAAAA,YAAY,EAAE;AAF+B,KAArB,CAA1B;AAKA;AACEC,MAAAA,QAAQ,EAAE,UADZ;AAEEC,MAAAA,KAAK,EAAET,CAAC,CAACU,kBAAF,IAAwBN,MAAM,CAACO,WAFxC;AAGEC,MAAAA,WAAW,EAAEZ,CAAC,CAACa,eAHjB;AAIEC,MAAAA,eAAe,EAAE,aAJnB;AAKEC,MAAAA,WAAW,EAAE,aALf;AAMEC,MAAAA,OAAO,EAAE,MANX;AAOEC,MAAAA,UAAU,EAAE,QAPd;AAQEC,MAAAA,SAAS,EAAE,MARb;AASEC,MAAAA,KAAK,EAAE,MATT;AAUEC,MAAAA,QAAQ,EAAE,MAVZ;AAWEC,MAAAA,OAAO,EAAErB,CAAC,CAACsB,eAXb;AAYEC,MAAAA,MAAM,EAAE,SAZV;AAaEC,MAAAA,SAAS,EAAExB,CAAC,CAACyB,UAbf;AAcEC,MAAAA,UAAU,EAAE1B,CAAC,CAAC2B,cAdhB;AAeEC,MAAAA,UAAU,EAAE,MAfd;AAiBE,gBAAU;AACRC,QAAAA,OAAO,EAAE;AADD,OAjBZ;AAqBE;AACEpB,QAAAA,KAAK,EAAET,CAAC,CAAC8B,uBAAF,IAA6B1B,MAAM,CAAC0B,uBAD7C;AAEEhB,QAAAA,eAAe,EAAEd,CAAC,CAAC+B,uBAAF,IAA6B3B,MAAM,CAAC2B;AAFvD,wBAGSC,yEAHT,IAGsD;AAClDvB,QAAAA,KAAK,EAAET,CAAC,CAAC8B,uBAAF,IAA6B1B,MAAM,CAAC0B;AADO,OAHtD,iBAMSG,uEANT,IAMqD;AACjDC,QAAAA,eAAe,EAAE,4CAAmBlC,CAAC,CAAC8B,uBAAF,IAA6B1B,MAAM,CAAC0B,uBAAvD;AADgC,OANrD,SArBF;AAgCE,wBAAkBxB,iBAAiB,CAAC,gBAAD;AAhCrC,OAkCM,CAACR,CAAC,CAACqC,QAAF,IAAcrC,CAAC,CAACsC,iBAAjB;AACFb,MAAAA,MAAM,EAAE,SADN;AAEFd,MAAAA,KAAK,EAAET,CAAC,CAACqC,0BAAF,IAAgCjC,MAAM,CAACkC,mBAF5C;AAGFxB,MAAAA,eAAe,EAAEd,CAAC,CAACuC;AAHjB,qBAIKP,yEAJL,IAIkD;AAClDvB,MAAAA,KAAK,EAAET,CAAC,CAACqC,0BAAF,IAAgCjC,MAAM,CAACkC;AADI,KAJlD,gBAOKL,uEAPL,IAOiD;AACjDC,MAAAA,eAAe,EAAE,4CAAmBlC,CAAC,CAACqC,0BAAF,IAAgCjC,MAAM,CAACkC,mBAA1D;AADgC,KAPjD,QAUF,QAVE,IAUQ,CACR;AADQ,KAVR,QAlCN,EAgDMxC,CAAC,CAACqC,QAAF,IAAc;AAChB;AACA;AACAK,MAAAA,aAAa,EAAE;AAHC,KAhDpB;AAsDD,GA9D6G;AAgE9GC,EAAAA,OAAO,EAAE;AAAA,WAAO;AACdzB,MAAAA,OAAO,EAAE;AADK,KAAP;AAAA;AAhEqG,CAAzG","sourcesContent":["import { ICSSInJSStyle, ComponentSlotStylesPrepared } from '@fluentui/styles';\nimport { getColorScheme } from '../../colors';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { ToolbarMenuItemStylesProps } from '../../../../components/Toolbar/ToolbarMenuItem';\nimport { ToolbarVariables } from './toolbarVariables';\nimport { activeIndicatorUrl } from './activeIndicatorUrl';\nimport { toolbarMenuItemSubmenuIndicatorClassName } from '../../../../components/Toolbar/ToolbarMenuItemSubmenuIndicator';\nimport { toolbarMenuItemActiveIndicatorClassName } from '../../../../components/Toolbar/ToolbarMenuItemActiveIndicator';\n\nexport const toolbarMenuItemStyles: ComponentSlotStylesPrepared<ToolbarMenuItemStylesProps, ToolbarVariables> = {\n  root: ({ props: p, variables: v, theme: { siteVariables } }): ICSSInJSStyle => {\n    const colors = getColorScheme(v.colorScheme);\n    const borderFocusStyles = getBorderFocusStyles({\n      variables: siteVariables,\n      borderRadius: 0,\n    });\n\n    return {\n      position: 'relative',\n      color: v.menuItemForeground || colors.foreground1,\n      borderWidth: v.menuBorderWidth,\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      display: 'flex',\n      alignItems: 'center',\n      textAlign: 'left',\n      width: '100%',\n      maxWidth: '100%',\n      padding: v.menuItemPadding,\n      cursor: 'pointer',\n      minHeight: v.itemHeight,\n      lineHeight: v.lineHeightBase,\n      userSelect: 'none',\n\n      ':focus': {\n        outline: 0,\n      },\n\n      ':hover': {\n        color: v.menuItemForegroundHover || colors.menuItemForegroundHover,\n        backgroundColor: v.menuItemBackgroundHover || colors.menuItemBackgroundHover,\n        [`& .${toolbarMenuItemSubmenuIndicatorClassName}`]: {\n          color: v.menuItemForegroundHover || colors.menuItemForegroundHover,\n        },\n        [`& .${toolbarMenuItemActiveIndicatorClassName}`]: {\n          backgroundImage: activeIndicatorUrl(v.menuItemForegroundHover || colors.menuItemForegroundHover),\n        },\n      },\n\n      ':focus-visible': borderFocusStyles[':focus-visible'],\n\n      ...((p.disabled || p.disabledFocusable) && {\n        cursor: 'default',\n        color: v.menuItemForegroundDisabled || colors.foregroundDisabled1,\n        backgroundColor: v.menuItemBackgroundDisabled,\n        [`& .${toolbarMenuItemSubmenuIndicatorClassName}`]: {\n          color: v.menuItemForegroundDisabled || colors.foregroundDisabled1,\n        },\n        [`& .${toolbarMenuItemActiveIndicatorClassName}`]: {\n          backgroundImage: activeIndicatorUrl(v.menuItemForegroundDisabled || colors.foregroundDisabled1),\n        },\n        ':hover': {\n          // empty to overwrite all existing hover styles\n        },\n      }),\n      ...(p.disabled && {\n        // pointer events intentionally not disabled for focusable disabled toolbar items\n        // so that hover events work\n        pointerEvents: 'none',\n      }),\n    };\n  },\n\n  wrapper: () => ({\n    display: 'block',\n  }),\n};\n"],"file":"toolbarMenuItemStyles.js"}