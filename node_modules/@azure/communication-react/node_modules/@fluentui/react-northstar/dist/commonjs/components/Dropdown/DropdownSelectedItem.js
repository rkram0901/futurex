"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.dropdownSelectedItemSlotClassNames = exports.dropdownSelectedItemClassName = exports.DropdownSelectedItem = void 0;

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _accessibility = require("@fluentui/accessibility");

var _reactComponentRef = require("@fluentui/react-component-ref");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _reactIconsNorthstar = require("@fluentui/react-icons-northstar");

var _utils = require("../../utils");

var _Image = require("../Image/Image");

var _Box = require("../Box/Box");

var _reactBindings = require("@fluentui/react-bindings");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var dropdownSelectedItemClassName = 'ui-dropdown__selecteditem';
exports.dropdownSelectedItemClassName = dropdownSelectedItemClassName;
var dropdownSelectedItemSlotClassNames = {
  header: dropdownSelectedItemClassName + "__header",
  icon: dropdownSelectedItemClassName + "__icon",
  image: dropdownSelectedItemClassName + "__image"
};
exports.dropdownSelectedItemSlotClassNames = dropdownSelectedItemSlotClassNames;

/**
 * A DropdownSelectedItem represents a selected item of 'multiple-selection' Dropdown.
 */
var DropdownSelectedItem = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(DropdownSelectedItem.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var active = props.active,
      header = props.header,
      icon = props.icon,
      image = props.image,
      className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables;
  var itemRef = React.useRef();
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(DropdownSelectedItem.handledProps, props);
  var getA11yProps = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: DropdownSelectedItem.displayName,
    mapPropsToBehavior: function mapPropsToBehavior() {
      return {
        header: header,
        active: active
      };
    },
    rtl: context.rtl
  });
  React.useEffect(function () {
    if (active) {
      itemRef.current.focus();
    }
  }, [active]);

  var _useStyles = (0, _reactBindings.useStyles)(DropdownSelectedItem.displayName, {
    className: dropdownSelectedItemClassName,
    mapPropsToStyles: function mapPropsToStyles() {
      return {
        hasImage: !!image
      };
    },
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes,
      resolvedStyles = _useStyles.styles;

  var handleClick = function handleClick(e) {
    (0, _invoke2.default)(props, 'onClick', e, props);
  };

  var handleKeyDown = function handleKeyDown(e) {
    (0, _invoke2.default)(props, 'onKeyDown', e, props);
  };

  var handleIconOverrides = function handleIconOverrides(iconProps) {
    return Object.assign({}, iconProps, {
      onClick: function onClick(e, iconProps) {
        e.stopPropagation();
        (0, _invoke2.default)(props, 'onRemove', e, iconProps);
        (0, _invoke2.default)(props, 'onClick', e, iconProps);
      },
      onKeyDown: function onKeyDown(e, iconProps) {
        e.stopPropagation();

        if ((0, _accessibility.getCode)(e) === _accessibility.keyboardKey.Enter) {
          (0, _invoke2.default)(props, 'onRemove', e, iconProps);
        }

        (0, _invoke2.default)(props, 'onKeyDown', e, iconProps);
      }
    });
  };

  var headerElement = _Box.Box.create(header, {
    defaultProps: function defaultProps() {
      return getA11yProps('header', {
        as: 'span',
        className: dropdownSelectedItemSlotClassNames.header,
        styles: resolvedStyles.header
      });
    }
  });

  var iconElement = _Box.Box.create(icon, {
    defaultProps: function defaultProps() {
      return getA11yProps('icon', {
        className: dropdownSelectedItemSlotClassNames.icon,
        styles: resolvedStyles.icon
      });
    },
    overrideProps: handleIconOverrides
  });

  var imageElement = _Image.Image.create(image, {
    defaultProps: function defaultProps() {
      return getA11yProps('image', {
        avatar: true,
        className: dropdownSelectedItemSlotClassNames.image,
        styles: resolvedStyles.image
      });
    }
  });

  var element = /*#__PURE__*/React.createElement(_reactComponentRef.Ref, {
    innerRef: itemRef
  }, /*#__PURE__*/React.createElement(ElementType, getA11yProps('root', Object.assign({
    className: classes.root,
    onClick: handleClick,
    onKeyDown: handleKeyDown,
    ref: ref
  }, unhandledProps)), imageElement, headerElement, iconElement));
  setEnd();
  return element;
});
exports.DropdownSelectedItem = DropdownSelectedItem;
DropdownSelectedItem.displayName = 'DropdownSelectedItem';
DropdownSelectedItem.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon({
  children: false
}), {
  active: PropTypes.bool,
  header: customPropTypes.itemShorthand,
  icon: customPropTypes.shorthandAllowingChildren,
  image: customPropTypes.itemShorthandWithoutJSX,
  onClick: PropTypes.func,
  onKeyDown: PropTypes.func,
  onRemove: PropTypes.func
});
DropdownSelectedItem.handledProps = Object.keys(DropdownSelectedItem.propTypes);
DropdownSelectedItem.defaultProps = {
  accessibility: _accessibility.dropdownSelectedItemBehavior,
  as: 'span',
  icon: /*#__PURE__*/React.createElement(_reactIconsNorthstar.CloseIcon, null)
};
DropdownSelectedItem.create = (0, _utils.createShorthandFactory)({
  Component: DropdownSelectedItem,
  mappedProp: 'header'
});
//# sourceMappingURL=DropdownSelectedItem.js.map
