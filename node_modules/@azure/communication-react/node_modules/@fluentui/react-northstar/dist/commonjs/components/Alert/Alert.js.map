{"version":3,"sources":["components/Alert/Alert.tsx"],"names":["alertClassName","alertSlotClassNames","content","actions","icon","header","body","Alert","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","warning","danger","info","success","attached","fitted","dismissible","variables","className","design","styles","children","dismissAction","defaultValue","defaultVisible","value","visible","initialValue","setVisible","useState","bodyId","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleDismissOverrides","predefinedProps","onClick","e","buttonProps","handleFocus","renderContent","bodyContent","Text","create","defaultProps","Box","id","overrideProps","ButtonGroup","AlertDismissAction","element","unstable_wrapWithFocusZone","root","onFocus","alertBehavior","propTypes","commonPropTypes","createCommon","PropTypes","oneOfType","customPropTypes","itemShorthand","collectionShorthand","shorthandAllowingChildren","oneOf","bool","onVisibleChange","func","Object","keys","Component","DismissAction"],"mappings":"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","sourcesContent":["import { Accessibility, alertBehavior, AlertBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  UIComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  childrenExist,\n  createShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { ButtonProps } from '../Button/Button';\nimport { Text, TextProps } from '../Text/Text';\n\nimport { ButtonGroup, ButtonGroupProps } from '../Button/ButtonGroup';\nimport { AlertDismissAction, AlertDismissActionProps } from './AlertDismissAction';\nimport {\n  useAccessibility,\n  getElementType,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  useUnhandledProps,\n  useAutoControlled,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface AlertSlotClassNames {\n  content: string;\n  actions: string;\n  icon: string;\n  header: string;\n  body: string;\n}\n\nexport interface AlertProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @available alertWarningBehavior\n   */\n  accessibility?: Accessibility<AlertBehaviorProps>;\n\n  /** An alert can contain action buttons. */\n  actions?: ShorthandValue<ButtonGroupProps> | ShorthandCollection<ButtonProps>;\n\n  /** An alert may contain an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** An alert may contain a header. */\n  header?: ShorthandValue<TextProps>;\n\n  /** An alert's position relative to neighboring items. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** An alert can only take up the width of its content. */\n  fitted?: boolean;\n\n  /** An alert may be formatted to display a danger message. */\n  danger?: boolean;\n\n  /** A default value for the `visible` prop. */\n  defaultVisible?: boolean;\n\n  /** An alert can be dismissible. */\n  dismissible?: boolean;\n\n  /**\n   * A button shorthand for the dismiss action slot. To use this slot the alert should be\n   * dismissible.\n   */\n  dismissAction?: ShorthandValue<AlertDismissActionProps>;\n\n  /** An alert may be formatted to display information. */\n  info?: boolean;\n\n  /**\n   * Called after user will dismiss the alert.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onVisibleChange?: ComponentEventHandler<AlertProps>;\n\n  /**\n   * Called after the alert is focused.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<AlertProps>;\n\n  /** An alert can be formatted to display a successful message. */\n  success?: boolean;\n\n  /** An alert can be set to visible to force itself to be shown. */\n  visible?: boolean;\n\n  /** An alert can be formatted to display a warning message. */\n  warning?: boolean;\n\n  /** An alert can have a body that contains header and content elements. */\n  body?: ShorthandValue<BoxProps>;\n}\n\nexport type AlertStylesProps = Required<\n  Pick<AlertProps, 'danger' | 'warning' | 'info' | 'success' | 'attached' | 'fitted' | 'dismissible' | 'visible'>\n>;\n\nexport const alertClassName = 'ui-alert';\nexport const alertSlotClassNames: AlertSlotClassNames = {\n  content: `${alertClassName}__content`,\n  actions: `${alertClassName}__actions`,\n  icon: `${alertClassName}__icon`,\n  header: `${alertClassName}__header`,\n  body: `${alertClassName}__body`,\n};\n\n/**\n * An Alert displays a brief, important message to attract a user's attention without interrupting their current task.\n *\n * @accessibility\n * Implements [ARIA Alert](https://www.w3.org/TR/wai-aria-practices-1.1/#alert) design pattern.\n */\nexport const Alert = (React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Alert.displayName, context.telemetry);\n  setStart();\n  const {\n    warning,\n    danger,\n    info,\n    success,\n    attached,\n    fitted,\n    dismissible,\n    variables,\n    className,\n    design,\n    styles,\n    children,\n    actions,\n    dismissAction,\n    content,\n    icon,\n    header,\n    body,\n  } = props;\n\n  const [visible, setVisible] = useAutoControlled({\n    defaultValue: props.defaultVisible,\n    value: props.visible,\n    initialValue: true,\n  });\n\n  const [bodyId] = React.useState(_.uniqueId('alert-body-'));\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Alert.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Alert.displayName,\n    mapPropsToBehavior: () => ({\n      warning,\n      danger,\n      bodyId,\n      visible,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<AlertStylesProps>(Alert.displayName, {\n    className: alertClassName,\n    mapPropsToStyles: () => ({\n      warning,\n      danger,\n      info,\n      success,\n      attached,\n      fitted,\n      dismissible,\n      visible,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleDismissOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onVisibleChange', e, { ...props, visible: false });\n      setVisible(false);\n    },\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const renderContent = () => {\n    const bodyContent = (\n      <>\n        {Text.create(header, {\n          defaultProps: () =>\n            getA11yProps('header', {\n              className: alertSlotClassNames.header,\n              styles: resolvedStyles.header,\n            }),\n        })}\n        {Box.create(content, {\n          defaultProps: () =>\n            getA11yProps('content', {\n              className: alertSlotClassNames.content,\n              styles: resolvedStyles.content,\n            }),\n        })}\n      </>\n    );\n\n    return (\n      <>\n        {Box.create(icon, {\n          defaultProps: () =>\n            getA11yProps('icon', {\n              className: alertSlotClassNames.icon,\n              styles: resolvedStyles.icon,\n            }),\n        })}\n        {Box.create(body, {\n          defaultProps: () =>\n            getA11yProps('body', {\n              className: alertSlotClassNames.body,\n              styles: resolvedStyles.body,\n              id: bodyId,\n            }),\n          overrideProps: {\n            children: bodyContent,\n          },\n        })}\n\n        {ButtonGroup.create(actions, {\n          defaultProps: () =>\n            getA11yProps('actions', {\n              className: alertSlotClassNames.actions,\n              styles: resolvedStyles.actions,\n            }),\n        })}\n        {dismissible &&\n          AlertDismissAction.create(dismissAction, {\n            defaultProps: () =>\n              getA11yProps('dismissAction', {\n                danger,\n                warning,\n                info,\n                success,\n                variables,\n              }),\n            overrideProps: handleDismissOverrides,\n          })}\n      </>\n    );\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onFocus: handleFocus,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, AlertProps> &\n  FluentComponentStaticProps<AlertProps> & {\n    DismissAction: typeof AlertDismissAction;\n  };\n\nAlert.defaultProps = {\n  accessibility: alertBehavior,\n  dismissAction: {},\n  body: {},\n};\n\nAlert.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actions: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  icon: customPropTypes.shorthandAllowingChildren,\n  header: customPropTypes.itemShorthand,\n  attached: PropTypes.oneOf([true, false, 'top', 'bottom']),\n  fitted: PropTypes.bool,\n  danger: PropTypes.bool,\n  defaultVisible: PropTypes.bool,\n  dismissible: PropTypes.bool,\n  dismissAction: customPropTypes.shorthandAllowingChildren,\n  info: PropTypes.bool,\n  onVisibleChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  success: PropTypes.bool,\n  visible: PropTypes.bool,\n  warning: PropTypes.bool,\n  body: customPropTypes.shorthandAllowingChildren,\n};\n\nAlert.displayName = 'Alert';\n\nAlert.handledProps = Object.keys(Alert.propTypes) as any;\n\nAlert.create = createShorthandFactory({\n  Component: Alert,\n});\n\nAlert.DismissAction = AlertDismissAction;\n"],"file":"Alert.js"}