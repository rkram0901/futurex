{"version":3,"sources":["components/Card/CardHeader.tsx"],"names":["cardHeaderClassName","CardHeader","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys","create","Component"],"mappings":";;;;;AACA;;AASA;;AACA;;AAGA;;;;;;AAaO,IAAMA,mBAAmB,GAAG,iBAA5B;AAEP;AACA;AACA;;;AACO,IAAMC,UAAU,gBAAIC,KAAK,CAACC,UAAN,CAAkD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC3F,MAAMC,OAAO,GAAG,sCAAhB;;AACA,sBAA6B,iCAAaL,UAAU,CAACM,WAAxB,EAAqCD,OAAO,CAACE,SAA7C,CAA7B;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,EAAAA,QAAQ;AAER,MAAQE,SAAR,GAAmEP,KAAnE,CAAQO,SAAR;AAAA,MAAmBC,MAAnB,GAAmER,KAAnE,CAAmBQ,MAAnB;AAAA,MAA2BC,MAA3B,GAAmET,KAAnE,CAA2BS,MAA3B;AAAA,MAAmCC,SAAnC,GAAmEV,KAAnE,CAAmCU,SAAnC;AAAA,MAA8CC,QAA9C,GAAmEX,KAAnE,CAA8CW,QAA9C;AAAA,MAAwDC,MAAxD,GAAmEZ,KAAnE,CAAwDY,MAAxD;AACA,MAAMC,WAAW,GAAG,mCAAeb,KAAf,CAApB;AACA,MAAMc,cAAc,GAAG,sCAAkBjB,UAAU,CAACkB,YAA7B,EAA2Cf,KAA3C,CAAvB;AACA,MAAMgB,YAAY,GAAG,qCAAiBhB,KAAK,CAACiB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAErB,UAAU,CAACM,WADmC;AAEzDgB,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAF4C,GAAtC,CAArB;;AAKA,mBAAoB,8BAAiCtB,UAAU,CAACM,WAA5C,EAAyD;AAC3EI,IAAAA,SAAS,EAAEX,mBADgE;AAE3EwB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAER,QAAAA,MAAM,EAANA;AAAF,OAAP;AAAA,KAFyD;AAG3ES,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7Bd,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAHmD;AAS3ES,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAT8D,GAAzD,CAApB;AAAA,MAAQG,OAAR,cAAQA,OAAR;;AAYA,MAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,IAAAA,SAAS,EAAEe,OAAO,CAACE,IADL;AAEdvB,IAAAA,GAAG,EAAHA;AAFc,KAGXa,cAHW,EADlB,EAOGH,QAPH,CADF;AAWAL,EAAAA,MAAM;AACN,SAAOiB,OAAP;AACD,CAtC0B,CAApB;;AAyCP1B,UAAU,CAACM,WAAX,GAAyB,YAAzB;AAEAN,UAAU,CAAC4B,SAAX,qBACKC,uBAAgBC,YAAhB,EADL;AAEEf,EAAAA,MAAM,EAAEgB,SAAS,CAACC;AAFpB;AAKAhC,UAAU,CAACkB,YAAX,GAA0Be,MAAM,CAACC,IAAP,CAAYlC,UAAU,CAAC4B,SAAvB,CAA1B;AAEA5B,UAAU,CAACmC,MAAX,GAAoB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEpC;AAAb,CAAvB,CAApB","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardHeaderProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A footer can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardHeaderStylesProps = Pick<CardHeaderProps, 'fitted'>;\nexport const cardHeaderClassName = 'ui-card__header';\n\n/**\n * A CardHeader is used to display data in Card header.\n */\nexport const CardHeader = (React.forwardRef<HTMLDivElement, CardHeaderProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardHeader.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardHeader.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardHeader.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardHeaderStylesProps>(CardHeader.displayName, {\n    className: cardHeaderClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, CardHeaderProps> &\n  FluentComponentStaticProps<CardHeaderProps>;\n\nCardHeader.displayName = 'CardHeader';\n\nCardHeader.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardHeader.handledProps = Object.keys(CardHeader.propTypes) as any;\n\nCardHeader.create = createShorthandFactory({ Component: CardHeader });\n"],"file":"CardHeader.js"}