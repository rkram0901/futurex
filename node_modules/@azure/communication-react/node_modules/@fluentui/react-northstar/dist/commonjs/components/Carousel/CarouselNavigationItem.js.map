{"version":3,"sources":["components/Carousel/CarouselNavigationItem.tsx"],"names":["carouselNavigationItemClassName","carouselNavigationItemSlotClassNames","indicator","content","CarouselNavigationItem","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","children","thumbnails","vertical","active","iconOnly","primary","className","design","styles","variables","disableClickableNav","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","event","defaultPrevented","handleClick","mapPropsToBehavior","mapPropsToStyles","hasContent","hasIndicator","mapPropsToInlineStyles","rtl","classes","resolvedStyles","renderContent","Box","create","defaultProps","as","e","handleBlur","handleFocus","element","root","onBlur","onFocus","onClick","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","shorthandAllowingChildren","index","number","func","every","disallow","secondary","Object","keys","tabBehavior","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport { Accessibility, tabBehavior, TabBehaviorProps } from '@fluentui/accessibility';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n  ChildrenComponentProps,\n} from '../../utils';\n\nimport { ShorthandValue, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  useTelemetry,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface CarouselNavigationItemSlotClassNames {\n  indicator: string;\n  content: string;\n}\n\nexport interface CarouselNavigationItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<TabBehaviorProps>;\n\n  /** A menu item can be active. */\n  active?: boolean;\n\n  /** Indicator for the Carousel Navigation Item. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** A Carousel Navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** CarouselNavigationIntem index inside CarouselNavigation. */\n  index?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation item can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation item can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n\n  thumbnails?: boolean;\n\n  /** A navigation may be clickable */\n  disableClickableNav?: boolean;\n}\n\nexport type CarouselNavigationItemStylesProps = Required<\n  Pick<\n    CarouselNavigationItemProps,\n    'thumbnails' | 'vertical' | 'active' | 'iconOnly' | 'primary' | 'disableClickableNav'\n  >\n> & {\n  hasContent: boolean;\n  hasIndicator: boolean;\n};\n\nexport const carouselNavigationItemClassName = 'ui-carousel__navigationitem';\nexport const carouselNavigationItemSlotClassNames: CarouselNavigationItemSlotClassNames = {\n  indicator: `${carouselNavigationItemClassName}__indicator`,\n  content: `${carouselNavigationItemClassName}__content`,\n};\n\n/**\n * A CarouselItem is an actionable item within a Carousel.\n */\nexport const CarouselNavigationItem = (React.forwardRef<HTMLLIElement, CarouselNavigationItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselNavigationItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    children,\n    thumbnails,\n    vertical,\n    active,\n    content,\n    iconOnly,\n    primary,\n    indicator,\n    className,\n    design,\n    styles,\n    variables,\n    disableClickableNav,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigationItem.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CarouselNavigationItem.displayName,\n    actionHandlers: {\n      performClick: event => !event.defaultPrevented && handleClick(event),\n    },\n    mapPropsToBehavior: () => ({\n      active,\n    }),\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<CarouselNavigationItemStylesProps>(\n    CarouselNavigationItem.displayName,\n    {\n      className: carouselNavigationItemClassName,\n      mapPropsToStyles: () => ({\n        thumbnails,\n        vertical,\n        active,\n        hasContent: !!content,\n        iconOnly,\n        primary,\n        hasIndicator: !!indicator,\n        disableClickableNav,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n  const renderContent = () => {\n    return content\n      ? Box.create(content, {\n          defaultProps: () => ({\n            as: 'span',\n            className: carouselNavigationItemSlotClassNames.content,\n            styles: resolvedStyles.content,\n          }),\n        })\n      : Box.create(indicator, {\n          defaultProps: () => ({\n            className: carouselNavigationItemSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n        });\n  };\n\n  const handleClick = (e: Event | React.SyntheticEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onClick: handleClick,\n        ref,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'li', HTMLLIElement, CarouselNavigationItemProps> &\n  FluentComponentStaticProps<CarouselNavigationItemProps>;\n\nCarouselNavigationItem.displayName = 'CarouselNavigationItem';\n\nCarouselNavigationItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n  disableClickableNav: PropTypes.bool,\n};\n\nCarouselNavigationItem.handledProps = Object.keys(CarouselNavigationItem.propTypes) as any;\n\nCarouselNavigationItem.defaultProps = {\n  accessibility: tabBehavior,\n  as: 'li',\n  indicator: {},\n};\n\nCarouselNavigationItem.create = createShorthandFactory({\n  Component: CarouselNavigationItem,\n  mappedArrayProp: 'content',\n});\n"],"file":"CarouselNavigationItem.js"}