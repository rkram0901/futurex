"use strict";

exports.__esModule = true;
exports.skeletonClassName = exports.Skeleton = void 0;

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _reactBindings = require("@fluentui/react-bindings");

var _utils = require("../../utils");

var _Box = require("../Box/Box");

var _SkeletonLine = require("./SkeletonLine");

var _SkeletonShape = require("./SkeletonShape");

var _SkeletonButton = require("./SkeletonButton");

var _SkeletonText = require("./SkeletonText");

var _SkeletonInput = require("./SkeletonInput");

var _SkeletonAvatar = require("./SkeletonAvatar");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var skeletonClassName = 'ui-skeleton';
/**
 * A Skeleton is a component to be placed while the content is loading.
 */

exports.skeletonClassName = skeletonClassName;
var Skeleton = (0, _reactBindings.compose)(_Box.Box, {
  className: skeletonClassName,
  displayName: 'Skeleton',
  overrideStyles: true,
  shorthandConfig: {},
  handledProps: ['animation'],
  mapPropsToStylesProps: function mapPropsToStylesProps(_ref) {
    var animation = _ref.animation;
    return {
      animation: animation
    };
  }
});
exports.Skeleton = Skeleton;
Skeleton.Line = _SkeletonLine.SkeletonLine;
Skeleton.Shape = _SkeletonShape.SkeletonShape;
Skeleton.Button = _SkeletonButton.SkeletonButton;
Skeleton.Text = _SkeletonText.SkeletonText;
Skeleton.Input = _SkeletonInput.SkeletonInput;
Skeleton.Avatar = _SkeletonAvatar.SkeletonAvatar;
Skeleton.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon({
  accessibility: false
}), {
  animation: PropTypes.oneOf(['wave', 'pulse'])
});
//# sourceMappingURL=Skeleton.js.map
