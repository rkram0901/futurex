{"version":3,"sources":["components/Carousel/CarouselPaddle.tsx"],"names":["carouselPaddleClassName","carouselPaddleSlotClassNames","content","CarouselPaddle","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","as","children","className","disabled","design","hidden","next","previous","styles","variables","disableClickableNav","hasChildren","getA11Props","debugName","mapPropsToBehavior","String","actionHandlers","performClick","event","preventDefault","handleClick","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","unhandledProps","handledProps","ElementType","e","result","rtlTextContainer","getAttributes","forElements","onClick","root","Box","create","defaultProps","buttonBehavior","propTypes","commonPropTypes","createCommon","PropTypes","bool","func","customPropTypes","every","disallow","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport {\n  getElementType,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Box, BoxProps } from '../Box/Box';\n\nexport interface CarouselPaddleProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A paddle can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** Indicates whether the paddle should be hidden. */\n  hidden?: boolean;\n\n  /**\n   * Called after a user clicks the paddle.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselPaddleProps>;\n\n  /** A paddle can indicate that it slides to the next item. */\n  next?: boolean;\n\n  /** A paddle can indicate that it slides to the previous item. */\n  previous?: boolean;\n\n  /** A navigation may be clickable */\n  disableClickableNav?: boolean;\n}\n\nexport type CarouselPaddleSlotClassNames = {\n  content: string;\n};\n\nexport type CarouselPaddleStylesProps = Pick<\n  CarouselPaddleProps,\n  'disabled' | 'next' | 'previous' | 'hidden' | 'disableClickableNav'\n>;\nexport const carouselPaddleClassName = 'ui-carousel__paddle';\nexport const carouselPaddleSlotClassNames: CarouselPaddleSlotClassNames = {\n  content: `${carouselPaddleClassName}__content`,\n};\n\n/**\n * A CarouselPaddle allows users to customize the paddles inside the Carousel component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport const CarouselPaddle = (React.forwardRef<HTMLButtonElement, CarouselPaddleProps & { as: React.ReactNode }>(\n  (props, ref) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(CarouselPaddle.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      as,\n      children,\n      className,\n      content,\n      disabled,\n      design,\n      hidden,\n      next,\n      previous,\n      styles,\n      variables,\n      disableClickableNav,\n    } = props;\n\n    const hasChildren = childrenExist(children);\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: CarouselPaddle.displayName,\n      mapPropsToBehavior: () => ({\n        as: String(as),\n        disabled,\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n      },\n      rtl: context.rtl,\n    });\n    const { classes, styles: resolvedStyles } = useStyles<CarouselPaddleStylesProps>(CarouselPaddle.displayName, {\n      className: carouselPaddleClassName,\n      mapPropsToStyles: () => ({\n        disabled,\n        hidden,\n        next,\n        previous,\n        disableClickableNav,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    });\n\n    const unhandledProps = useUnhandledProps(CarouselPaddle.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const handleClick = (e: React.SyntheticEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const result = (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...getA11Props('root', {\n          onClick: handleClick,\n          disabled,\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {hasChildren\n          ? children\n          : Box.create(content, {\n              defaultProps: () =>\n                getA11Props('content', {\n                  as: 'span',\n                  className: carouselPaddleSlotClassNames.content,\n                  styles: resolvedStyles.content,\n                }),\n            })}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n) as unknown) as ForwardRefWithAs<'button', HTMLButtonElement, CarouselPaddleProps> &\n  FluentComponentStaticProps<CarouselPaddleProps>;\n\nCarouselPaddle.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  content: {},\n};\n\nCarouselPaddle.displayName = 'CarouselPaddle';\n\nCarouselPaddle.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  hidden: PropTypes.bool,\n  onClick: PropTypes.func,\n  next: customPropTypes.every([customPropTypes.disallow(['previous']), PropTypes.bool]),\n  previous: customPropTypes.every([customPropTypes.disallow(['next']), PropTypes.bool]),\n  disableClickableNav: PropTypes.bool,\n};\n\nCarouselPaddle.handledProps = Object.keys(CarouselPaddle.propTypes) as any;\n\nCarouselPaddle.create = createShorthandFactory({ Component: CarouselPaddle, mappedProp: 'content' });\n"],"file":"CarouselPaddle.js"}