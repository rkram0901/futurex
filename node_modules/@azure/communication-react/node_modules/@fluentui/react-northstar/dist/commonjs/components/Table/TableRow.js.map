{"version":3,"sources":["components/Table/TableRow.tsx"],"names":["tableRowClassName","TableRow","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","rowRef","useRef","className","design","styles","items","header","compact","children","accessibility","variables","selected","hasChildren","ElementType","unhandledProps","handledProps","getA11yProps","debugName","actionHandlers","unsetRowTabbable","e","current","setAttribute","performClick","currentTarget","target","preventDefault","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","renderCells","item","TableCell","create","defaultProps","overrideProps","predefinedProps","element","unstable_wrapWithFocusZone","root","propTypes","commonPropTypes","createCommon","content","customPropTypes","collectionShorthand","PropTypes","bool","Object","keys","tableRowBehavior","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import { Accessibility, tableRowBehavior, GridRowBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  mergeVariablesOverrides,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { FluentComponentStaticProps, ShorthandCollection } from '../../types';\nimport { childrenExist, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { TableCell, TableCellProps } from './TableCell';\n\nexport interface TableRowProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * */\n  accessibility?: Accessibility<GridRowBehaviorProps>;\n\n  /**\n   * Row cells\n   */\n  items?: ShorthandCollection<TableCellProps>;\n\n  /**\n   * Is the row a table header\n   */\n  header?: boolean;\n\n  /**\n   * Render table in compact mode\n   */\n  compact?: boolean;\n\n  /**\n   * Whether a row is currently selected or not.\n   */\n  selected?: boolean;\n}\n\nexport const tableRowClassName = 'ui-table__row';\n\nexport type TableRowStylesProps = Pick<TableRowProps, 'header' | 'compact'>;\n\n/**\n * Component represents a single row in a tabular structure\n */\nexport const TableRow = (React.forwardRef<HTMLDivElement, TableRowProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TableRow.displayName, context.telemetry);\n  setStart();\n  const rowRef = React.useRef<HTMLElement>();\n  const { className, design, styles, items, header, compact, children, accessibility, variables, selected } = props;\n\n  const hasChildren = childrenExist(children);\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TableRow.handledProps, props);\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: TableRow.displayName,\n    actionHandlers: {\n      // https://github.com/microsoft/fluent-ui-react/issues/2150\n      unsetRowTabbable: e => {\n        rowRef.current.setAttribute('tabindex', '-1');\n      },\n      performClick: e => {\n        if (e.currentTarget === e.target) {\n          _.invoke(props, 'onClick', e, props);\n          e.preventDefault();\n        }\n      },\n    },\n    mapPropsToBehavior: () => ({\n      selected,\n      header,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TableRowStylesProps>(TableRow.displayName, {\n    className: tableRowClassName,\n    mapPropsToStyles: () => ({\n      header,\n      compact,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const renderCells = () => {\n    return _.map(items, (item: TableCellProps) => {\n      return TableCell.create(item, {\n        defaultProps: () => getA11yProps('cell', {}),\n        overrideProps: predefinedProps => ({\n          variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n        }),\n      });\n    });\n  };\n\n  const element = (\n    <Ref innerRef={rowRef}>\n      {getA11yProps.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11yProps('root', {\n            className: classes.root,\n            ref,\n            ...unhandledProps,\n          })}\n        >\n          {hasChildren && children}\n          {!hasChildren && renderCells()}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, TableRowProps> & FluentComponentStaticProps<TableRowProps>;\n\nTableRow.displayName = 'TableRow';\n\nTableRow.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  items: customPropTypes.collectionShorthand,\n  header: PropTypes.bool,\n  compact: PropTypes.bool,\n  selected: PropTypes.bool,\n};\n\nTableRow.handledProps = Object.keys(TableRow.propTypes) as any;\n\nTableRow.defaultProps = {\n  accessibility: tableRowBehavior,\n};\n\nTableRow.create = createShorthandFactory({ Component: TableRow, mappedArrayProp: 'items' });\n"],"file":"TableRow.js"}