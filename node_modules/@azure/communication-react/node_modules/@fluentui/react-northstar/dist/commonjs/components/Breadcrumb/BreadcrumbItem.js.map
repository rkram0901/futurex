{"version":3,"sources":["components/Breadcrumb/BreadcrumbItem.tsx"],"names":["breadcrumbItemClassName","BreadcrumbItem","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","accessibility","children","content","className","design","styles","variables","active","disabled","size","getA11yProps","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","unstable_props","classes","unhandledProps","handledProps","ElementType","result","root","defaultProps","breadcrumbItemBehavior","propTypes","commonPropTypes","createCommon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  compose,\n  useFluentContext,\n  useTelemetry,\n  useAccessibility,\n  useStyles,\n  useUnhandledProps,\n  getElementType,\n  childrenExist,\n} from '@fluentui/react-bindings';\nimport { commonPropTypes, UIComponentProps, ContentComponentProps, ChildrenComponentProps } from '../../utils';\nimport { Accessibility, breadcrumbItemBehavior, BreadcrumbItemBehaviorProps } from '@fluentui/accessibility';\nimport { useBreadcrumbContext, BreadcrumbSizeValues } from './breadcrumbContext';\n\nexport interface BreadcrumbItemProps\n  extends UIComponentProps<BreadcrumbItemProps>,\n    ContentComponentProps,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<BreadcrumbItemBehaviorProps>;\n\n  /** The Breadcrumb Link can be disabled. */\n  disabled?: boolean;\n\n  /** Indicates if the link is the active. */\n  active?: boolean;\n}\n\nexport type BreadcrumbItemStylesProps = Required<Pick<BreadcrumbItemProps, 'active' | 'disabled'>> & {\n  size: BreadcrumbSizeValues;\n};\n\nexport const breadcrumbItemClassName = 'ui-breadcrumb__item';\n\n/**\n * BreadcrumbItem an actionable item within a Breadcrumb\n */\nexport const BreadcrumbItem = compose<'div', BreadcrumbItemProps, BreadcrumbItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n    const { accessibility, children, content, className, design, styles, variables, active, disabled } = props;\n    const { size } = useBreadcrumbContext();\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<BreadcrumbItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        size,\n        active,\n        disabled,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const result = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n  {\n    className: breadcrumbItemClassName,\n    displayName: 'BreadcrumbItem',\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n      'active',\n    ],\n  },\n);\n\nBreadcrumbItem.defaultProps = {\n  accessibility: breadcrumbItemBehavior,\n};\n\nBreadcrumbItem.propTypes = commonPropTypes.createCommon();\n"],"file":"BreadcrumbItem.js"}