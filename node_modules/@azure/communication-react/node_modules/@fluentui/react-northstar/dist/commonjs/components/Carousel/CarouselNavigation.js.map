{"version":3,"sources":["components/Carousel/CarouselNavigation.tsx"],"names":["carouselNavigationClassName","CarouselNavigation","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","variables","children","className","design","activeIndex","iconOnly","items","primary","secondary","vertical","thumbnails","styles","disableClickableNav","ElementType","unhandledProps","handledProps","getA11yProps","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","handleItemOverrides","predefinedProps","onClick","e","itemProps","renderItems","item","index","CarouselNavigationItem","create","defaultProps","active","overrideProps","element","unstable_wrapWithFocusZone","root","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","content","PropTypes","oneOfType","number","string","bool","customPropTypes","collectionShorthand","onItemClick","func","every","disallow","tabListBehavior","as","Object","keys","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import { tabListBehavior, Accessibility } from '@fluentui/accessibility';\nimport {\n  useTelemetry,\n  mergeVariablesOverrides,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { ShorthandCollection, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { CarouselNavigationItem, CarouselNavigationItemProps } from './CarouselNavigationItem';\n\nexport interface CarouselNavigationProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** A navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** A navigation may have thumbnails. */\n  thumbnails?: boolean;\n\n  /** Shorthand array of props for Navigation. */\n  items?: ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n\n  /** A navigation may be clickable */\n  disableClickableNav?: boolean;\n}\n\nexport type CarouselNavigationStylesProps = Required<\n  Pick<CarouselNavigationProps, 'activeIndex' | 'iconOnly' | 'primary' | 'vertical' | 'thumbnails'>\n>;\n\nexport const carouselNavigationClassName = 'ui-carousel__navigation';\n\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\nexport const CarouselNavigation = (React.forwardRef<HTMLUListElement, CarouselNavigationProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselNavigation.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibility,\n    variables,\n    children,\n    className,\n    design,\n    activeIndex,\n    iconOnly,\n    items,\n    primary,\n    secondary,\n    vertical,\n    thumbnails,\n    styles,\n    disableClickableNav,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigation.handledProps, props);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: CarouselNavigation.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CarouselNavigationStylesProps>(CarouselNavigation.displayName, {\n    className: carouselNavigationClassName,\n    mapPropsToStyles: () => ({\n      activeIndex,\n      iconOnly,\n      primary,\n      vertical,\n      thumbnails,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleItemOverrides = variables => predefinedProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(props, 'onItemClick', e, itemProps);\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n    },\n    variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n  });\n\n  const renderItems = () => {\n    return _.map(items, (item, index) =>\n      CarouselNavigationItem.create(item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            active: index === activeIndex,\n            iconOnly,\n            index,\n            primary,\n            secondary,\n            vertical,\n            thumbnails,\n            disableClickableNav,\n          }),\n        overrideProps: handleItemOverrides(variables),\n      }),\n    );\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderItems()}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'ul', HTMLUListElement, CarouselNavigationProps> &\n  FluentComponentStaticProps<CarouselNavigationProps>;\n\nCarouselNavigation.displayName = 'CarouselNavigation';\n\nCarouselNavigation.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  iconOnly: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n  disableClickableNav: PropTypes.bool,\n};\n\nCarouselNavigation.defaultProps = {\n  accessibility: tabListBehavior,\n  as: 'ul',\n};\n\nCarouselNavigation.handledProps = Object.keys(CarouselNavigation.propTypes) as any;\n\nCarouselNavigation.create = createShorthandFactory({\n  Component: CarouselNavigation,\n  mappedArrayProp: 'items',\n});\n"],"file":"CarouselNavigation.js"}