{"version":3,"sources":["components/Card/CardBody.tsx"],"names":["cardBodyClassName","CardBody","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","commonPropTypes","createCommon","PropTypes","bool","Object","keys","create","Component"],"mappings":";;;;;AAAA;;AAGA;;AACA;;AASA;;;;;;AAaO,IAAMA,iBAAiB,GAAG,eAA1B;AAEP;AACA;AACA;;;AACO,IAAMC,QAAQ,gBAAIC,KAAK,CAACC,UAAN,CAAgD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACvF,MAAMC,OAAO,GAAG,sCAAhB;;AACA,sBAA6B,iCAAaL,QAAQ,CAACM,WAAtB,EAAmCD,OAAO,CAACE,SAA3C,CAA7B;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,EAAAA,QAAQ;AAER,MAAQE,SAAR,GAAmEP,KAAnE,CAAQO,SAAR;AAAA,MAAmBC,MAAnB,GAAmER,KAAnE,CAAmBQ,MAAnB;AAAA,MAA2BC,MAA3B,GAAmET,KAAnE,CAA2BS,MAA3B;AAAA,MAAmCC,SAAnC,GAAmEV,KAAnE,CAAmCU,SAAnC;AAAA,MAA8CC,QAA9C,GAAmEX,KAAnE,CAA8CW,QAA9C;AAAA,MAAwDC,MAAxD,GAAmEZ,KAAnE,CAAwDY,MAAxD;AACA,MAAMC,WAAW,GAAG,mCAAeb,KAAf,CAApB;AACA,MAAMc,cAAc,GAAG,sCAAkBjB,QAAQ,CAACkB,YAA3B,EAAyCf,KAAzC,CAAvB;AACA,MAAMgB,YAAY,GAAG,qCAAiBhB,KAAK,CAACiB,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAErB,QAAQ,CAACM,WADqC;AAEzDgB,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAF4C,GAAtC,CAArB;;AAKA,mBAAoB,8BAA+BtB,QAAQ,CAACM,WAAxC,EAAqD;AACvEI,IAAAA,SAAS,EAAEX,iBAD4D;AAEvEwB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAER,QAAAA,MAAM,EAANA;AAAF,OAAP;AAAA,KAFqD;AAGvES,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7Bd,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAATA;AAJ6B,OAAP;AAAA,KAH+C;AASvES,IAAAA,GAAG,EAAEjB,OAAO,CAACiB;AAT0D,GAArD,CAApB;AAAA,MAAQG,OAAR,cAAQA,OAAR;;AAYA,MAAMC,OAAO,gBACX,oBAAC,WAAD,EACMP,YAAY,CAAC,MAAD;AACdT,IAAAA,SAAS,EAAEe,OAAO,CAACE,IADL;AAEdvB,IAAAA,GAAG,EAAHA;AAFc,KAGXa,cAHW,EADlB,EAOGH,QAPH,CADF;AAWAL,EAAAA,MAAM;AACN,SAAOiB,OAAP;AACD,CAtCwB,CAAlB;;AAwCP1B,QAAQ,CAACM,WAAT,GAAuB,UAAvB;AAEAN,QAAQ,CAAC4B,SAAT,qBACKC,uBAAgBC,YAAhB,EADL;AAEEf,EAAAA,MAAM,EAAEgB,SAAS,CAACC;AAFpB;AAKAhC,QAAQ,CAACkB,YAAT,GAAwBe,MAAM,CAACC,IAAP,CAAYlC,QAAQ,CAAC4B,SAArB,CAAxB;AAEA5B,QAAQ,CAACmC,MAAT,GAAkB,mCAAuB;AAAEC,EAAAA,SAAS,EAAEpC;AAAb,CAAvB,CAAlB","sourcesContent":["import * as React from 'react';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport {\n  useTelemetry,\n  useStyles,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\n\nexport interface CardBodyProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A body can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardBodyStylesProps = Pick<CardBodyProps, 'fitted'>;\nexport const cardBodyClassName = 'ui-card__body';\n\n/**\n * A CardBody is used to display data in Card body.\n */\nexport const CardBody = (React.forwardRef<HTMLDivElement, CardBodyProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardBody.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardBody.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardBody.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardBodyStylesProps>(CardBody.displayName, {\n    className: cardBodyClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, CardBodyProps> & FluentComponentStaticProps<CardBodyProps>;\n\nCardBody.displayName = 'CardBody';\n\nCardBody.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardBody.handledProps = Object.keys(CardBody.propTypes) as any;\n\nCardBody.create = createShorthandFactory({ Component: CardBody });\n"],"file":"CardBody.js"}