{"version":3,"sources":["components/Datepicker/Datepicker.tsx"],"names":["datepickerClassName","formatRestrictedInput","restrictedOptions","localizationStrings","formattedString","minDate","maxDate","inputBoundedFormatString","formatMonthDayYear","inputMinBoundedFormatString","inputMaxBoundedFormatString","inputAriaLabel","Datepicker","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","inputRef","useRef","dateFormatting","formatDay","formatYear","formatMonthYear","parseDate","months","shortMonths","days","shortDays","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","goToToday","openCalendarTitle","inputPlaceholder","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","calendar","popup","input","className","design","styles","variables","allowManualInput","ariaLabelledby","ariaInvalid","valueFormatter","useCallback","date","defaultValue","defaultCalendarOpenState","value","calendarOpenState","initialValue","openState","setOpenState","defaultSelectedDate","selectedDate","undefined","setSelectedDate","useState","formattedDate","setFormattedDate","useEffect","restrictedDatesOptions","restrictedDates","required","error","setError","calendarOptions","navigatedDate","today","Date","firstDayOfWeek","firstWeekOfYear","dateRangeType","daysToSelectInDayView","showWeekNumbers","workWeekDays","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","open","e","preventDefault","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","overrideDatepickerCalendarProps","predefinedProps","onDateChange","itemProps","targetDay","originalDate","calendarElement","DatepickerCalendar","defaultProps","overrideProps","overrideInputProps","onClick","onChange","target","parsedDate","validationError","onBlur","fallbackToLastCorrectDateOnBlur","futureFormattedDate","node","current","triggerButtonElement","inputOnly","disabled","element","unstable_wrapWithFocusZone","root","buttonOnly","Input","placeholder","readOnly","Popup","trapFocus","disableFirstFocus","position","align","trigger","content","onOpenChange","type","propTypes","commonPropTypes","createCommon","customPropTypes","itemShorthand","PropTypes","bool","func","onDateChangeError","instanceOf","arrayOf","oneOf","Object","keys","DayOfWeek","map","name","FirstWeekOfYear","DateRangeType","number","string","datepickerBehavior","Monday","FirstDay","Day","DEFAULT_CALENDAR_STRINGS","create","Component","Calendar","CalendarHeader","DatepickerCalendarHeader","CalendarHeaderAction","DatepickerCalendarHeaderAction","CalendarHeaderCell","DatepickerCalendarHeaderCell","CalendarCell","DatepickerCalendarCell","CalendarCellButton","DatepickerCalendarCellButton","CalendarGrid","DatepickerCalendarGrid","CalendarGridRow","DatepickerCalendarGridRow"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  datepickerBehavior,\n  DatepickerBehaviorProps,\n  AccessibilityAttributes,\n} from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  FirstWeekOfYear,\n  DEFAULT_CALENDAR_STRINGS,\n  IDayGridOptions,\n  ICalendarStrings,\n  IDatepickerOptions,\n  IRestrictedDatesOptions,\n} from '../../utils/date-time-utilities';\n\nimport {\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useAutoControlled,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nimport { CalendarIcon } from '@fluentui/react-icons-northstar';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { handleRef } from '@fluentui/react-component-ref';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { Button } from '../Button/Button';\nimport { Input, InputProps } from '../Input/Input';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { DatepickerCalendar, DatepickerCalendarProps } from './DatepickerCalendar';\nimport { DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeader } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarHeaderAction } from './DatepickerCalendarHeaderAction';\nimport { DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { DatepickerCalendarGrid } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow } from './DatepickerCalendarGridRow';\nimport { validateDate } from './validateDate';\nimport { format } from '@uifabric/utilities';\n\nexport interface DatepickerProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDatepickerOptions> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerBehaviorProps>;\n\n  /** Identifies the element (or elements) that labels the current element. Will be passed to `input` with usage accessibibility behavior. */\n  'aria-labelledby'?: AccessibilityAttributes['aria-labelledby'];\n\n  /** Indicates the entered value does not conform to the format expected by the application. Will be passed to `input` with usage accessibibility behavior. */\n  'aria-invalid'?: AccessibilityAttributes['aria-invalid'];\n\n  /** Shorthand for the datepicker calendar. */\n  calendar?: ShorthandValue<DatepickerCalendarProps>;\n\n  /** Shorthand for the datepicker popup. */\n  popup?: ShorthandValue<PopupProps>;\n\n  /** Shorthand for the date text input. */\n  input?: ShorthandValue<InputProps>;\n\n  /** Datepicker shows it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Date needs to be entered, otherwise datepicker produces an error state. */\n  required?: boolean;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerProps & { value: Date }>;\n\n  /**\n   * Called on error when changing the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChangeError?: ComponentEventHandler<DatepickerProps & { error: string }>;\n\n  /** Target dates can be also entered through the input field. */\n  allowManualInput?: boolean;\n\n  /** The component automatically overrides faulty manual input upon blur. */\n  fallbackToLastCorrectDateOnBlur?: boolean;\n\n  /** Initial 'calendarOpenState' value. */\n  defaultCalendarOpenState?: boolean;\n\n  /** Controls the calendar's open state. */\n  calendarOpenState?: boolean;\n\n  /** Initial 'selectedDate' value. */\n  defaultSelectedDate?: Date;\n\n  /** Controls the calendar's 'selectedDate'. */\n  selectedDate?: Date;\n\n  /** Marks that the datepicker should only render the input field and not the trigger button with an icon. */\n  inputOnly?: boolean;\n\n  /** Marks that the datepicker should only render the trigger button with an icon and not the input field. */\n  buttonOnly?: boolean;\n}\n\nexport type DatepickerStylesProps = Pick<DatepickerProps, 'allowManualInput'>;\n\nexport const datepickerClassName = 'ui-datepicker';\n\nconst formatRestrictedInput = (restrictedOptions: IRestrictedDatesOptions, localizationStrings: ICalendarStrings) => {\n  let formattedString = '';\n  if (!!restrictedOptions.minDate && !!restrictedOptions.maxDate) {\n    formattedString = format(\n      localizationStrings.inputBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.minDate, localizationStrings),\n      localizationStrings.formatMonthDayYear(restrictedOptions.maxDate, localizationStrings),\n    );\n  } else if (!!restrictedOptions.minDate) {\n    formattedString = format(\n      localizationStrings.inputMinBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.minDate, localizationStrings),\n    );\n  } else if (!!restrictedOptions.maxDate) {\n    formattedString = format(\n      localizationStrings.inputMaxBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.maxDate, localizationStrings),\n    );\n  } else {\n    formattedString = localizationStrings.inputAriaLabel;\n  }\n\n  return formattedString;\n};\n\n/**\n * A Datepicker is a control which is used to display dates grid and allow user to select them.\n *\n * @accessibilityIssues\n * [NVDA - Aria-selected is not narrated for the gridcell](https://github.com/nvaccess/nvda/issues/11986)\n */\nexport const Datepicker = (React.forwardRef<HTMLDivElement, DatepickerProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Datepicker.displayName, context.telemetry);\n  setStart();\n  const inputRef = React.useRef<HTMLElement>();\n\n  // FIXME: This object is created every render, causing a cascade of useCallback/useEffect re-runs.\n  // Needs to be reworked by someone who understands the intent for when various updates ought to happen.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const dateFormatting: ICalendarStrings = {\n    formatDay: props.formatDay,\n    formatYear: props.formatYear,\n    formatMonthDayYear: props.formatMonthDayYear,\n    formatMonthYear: props.formatMonthYear,\n    parseDate: props.parseDate,\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n    isRequiredErrorMessage: props.isRequiredErrorMessage,\n    invalidInputErrorMessage: props.invalidInputErrorMessage,\n    isOutOfBoundsErrorMessage: props.isOutOfBoundsErrorMessage,\n    goToToday: props.goToToday,\n    openCalendarTitle: props.openCalendarTitle,\n    inputPlaceholder: props.inputPlaceholder,\n    prevMonthAriaLabel: props.prevMonthAriaLabel,\n    nextMonthAriaLabel: props.nextMonthAriaLabel,\n    prevYearAriaLabel: props.prevYearAriaLabel,\n    nextYearAriaLabel: props.nextYearAriaLabel,\n    prevYearRangeAriaLabel: props.prevYearRangeAriaLabel,\n    nextYearRangeAriaLabel: props.nextYearRangeAriaLabel,\n    monthPickerHeaderAriaLabel: props.monthPickerHeaderAriaLabel,\n    yearPickerHeaderAriaLabel: props.yearPickerHeaderAriaLabel,\n    closeButtonAriaLabel: props.closeButtonAriaLabel,\n    weekNumberFormatString: props.weekNumberFormatString,\n    selectedDateFormatString: props.selectedDateFormatString,\n    todayDateFormatString: props.todayDateFormatString,\n    inputAriaLabel: props.inputAriaLabel,\n    inputBoundedFormatString: props.inputBoundedFormatString,\n    inputMinBoundedFormatString: props.inputMinBoundedFormatString,\n    inputMaxBoundedFormatString: props.inputMaxBoundedFormatString,\n  };\n\n  const {\n    calendar,\n    popup,\n    input,\n    className,\n    design,\n    styles,\n    variables,\n    formatMonthDayYear,\n    allowManualInput,\n    'aria-labelledby': ariaLabelledby,\n    'aria-invalid': ariaInvalid,\n  } = props;\n\n  const valueFormatter = React.useCallback(\n    date =>\n      date\n        ? formatMonthDayYear(date, {\n            months: dateFormatting.months,\n            shortMonths: dateFormatting.shortMonths,\n            days: dateFormatting.days,\n            shortDays: dateFormatting.shortDays,\n          })\n        : '',\n    [\n      dateFormatting.days,\n      dateFormatting.months,\n      dateFormatting.shortDays,\n      dateFormatting.shortMonths,\n      formatMonthDayYear,\n    ],\n  );\n\n  const [openState, setOpenState] = useAutoControlled<boolean>({\n    defaultValue: props.defaultCalendarOpenState,\n    value: props.calendarOpenState,\n    initialValue: false,\n  });\n\n  const [selectedDate, setSelectedDate] = useAutoControlled<Date | undefined>({\n    defaultValue: props.defaultSelectedDate,\n    value: props.selectedDate,\n    initialValue: undefined,\n  });\n\n  const [formattedDate, setFormattedDate] = React.useState<string>(valueFormatter(selectedDate));\n\n  React.useEffect(() => {\n    setFormattedDate(valueFormatter(selectedDate));\n  }, [selectedDate, valueFormatter]);\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate: props.minDate,\n    maxDate: props.maxDate,\n    restrictedDates: props.restrictedDates,\n  };\n\n  const [error, setError] = React.useState<string>(() =>\n    !!props.selectedDate || !!props.defaultSelectedDate\n      ? validateDate(selectedDate, formattedDate, restrictedDatesOptions, dateFormatting, props.required)\n      : '',\n  );\n\n  const calendarOptions: IDayGridOptions = {\n    selectedDate,\n    navigatedDate: !!selectedDate && !error ? selectedDate : props.today ?? new Date(),\n    firstDayOfWeek: props.firstDayOfWeek,\n    firstWeekOfYear: props.firstWeekOfYear,\n    dateRangeType: props.dateRangeType,\n    daysToSelectInDayView: props.daysToSelectInDayView,\n    today: props.today,\n    showWeekNumbers: props.showWeekNumbers,\n    workWeekDays: props.workWeekDays,\n    ...restrictedDatesOptions,\n  };\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Datepicker.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Datepicker.displayName,\n    actionHandlers: {\n      open: e => {\n        if (allowManualInput) {\n          setOpenState(!openState);\n        } else {\n          // Keep popup open in case we can only enter the date through calendar.\n          setOpenState(true);\n        }\n\n        e.preventDefault();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      'aria-invalid': ariaInvalid,\n      'aria-labelledby': ariaLabelledby,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<DatepickerStylesProps>(Datepicker.displayName, {\n    className: datepickerClassName,\n    mapPropsToStyles: () => ({\n      allowManualInput,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const overrideDatepickerCalendarProps = (predefinedProps: DatepickerCalendarProps): DatepickerCalendarProps => ({\n    onDateChange: (e, itemProps) => {\n      const targetDay = itemProps.value;\n      setSelectedDate(targetDay.originalDate);\n      setOpenState(false);\n      setError('');\n      setFormattedDate(valueFormatter(targetDay.originalDate));\n\n      _.invoke(props, 'onDateChange', e, { itemProps, value: targetDay.originalDate });\n    },\n  });\n\n  const calendarElement = createShorthand(DatepickerCalendar, calendar, {\n    defaultProps: () => getA11yProps('calendar', { ...calendarOptions, ...dateFormatting }),\n    overrideProps: overrideDatepickerCalendarProps,\n  });\n\n  const overrideInputProps = (predefinedProps: InputProps): InputProps => ({\n    onClick: (e): void => {\n      if (allowManualInput) {\n        setOpenState(!openState);\n      } else {\n        // Keep popup open in case we can only enter the date through calendar.\n        setOpenState(true);\n      }\n\n      _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n    },\n    onChange: (e, target: { value: string }) => {\n      const parsedDate = props.parseDate(target.value);\n      const validationError = validateDate(parsedDate, target.value, calendarOptions, dateFormatting, props.required);\n      setError(validationError);\n      setFormattedDate(target.value);\n      if (!!validationError) {\n        _.invoke(props, 'onDateChangeError', e, { ...props, error: validationError });\n      } else {\n        setSelectedDate(parsedDate);\n        _.invoke(props, 'onDateChange', e, { ...props, value: parsedDate });\n      }\n\n      _.invoke(predefinedProps, 'onChange', e, predefinedProps);\n    },\n    onBlur: e => {\n      if (props.fallbackToLastCorrectDateOnBlur && !!error) {\n        const futureFormattedDate = valueFormatter(selectedDate);\n        const validationError = validateDate(\n          selectedDate,\n          futureFormattedDate,\n          calendarOptions,\n          dateFormatting,\n          props.required,\n        );\n        setError(validationError);\n        setFormattedDate(futureFormattedDate);\n        if (!!validationError) {\n          _.invoke(props, 'onDateChangeError', e, { ...props, error: validationError });\n        }\n      }\n\n      _.invoke(predefinedProps, 'onBlur', e, predefinedProps);\n    },\n\n    inputRef: (node: HTMLInputElement) => {\n      handleRef(predefinedProps.inputRef, node);\n      inputRef.current = node;\n    },\n  });\n\n  const triggerButtonElement = props.inputOnly ? null : (\n    <Button icon={<CalendarIcon />} title={props.openCalendarTitle} iconOnly disabled={props.disabled} type=\"button\" />\n  );\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {!props.buttonOnly &&\n        createShorthand(Input, input, {\n          defaultProps: () =>\n            getA11yProps('input', {\n              placeholder: props.inputPlaceholder,\n              disabled: props.disabled,\n              error: !!error,\n              value: formattedDate,\n              readOnly: !allowManualInput,\n              required: props.required,\n              'aria-label': formatRestrictedInput(restrictedDatesOptions, dateFormatting),\n            }),\n          overrideProps: overrideInputProps,\n        })}\n      {createShorthand(Popup, popup, {\n        defaultProps: () => ({\n          open: openState && !props.disabled,\n          trapFocus: {\n            disableFirstFocus: true,\n          },\n          position: 'below' as const,\n          align: 'start' as const,\n        }),\n        overrideProps: (predefinedProps: PopupProps): PopupProps => ({\n          trigger: predefinedProps.trigger ?? triggerButtonElement,\n          target: props.buttonOnly ? null : inputRef.current,\n          content: calendarElement,\n          onOpenChange: (e, { open }) => {\n            // In case the event is a click on input, we ignore such events as it should be directly handled by input.\n            if (!(e.type === 'click' && e.target === inputRef?.current)) {\n              setOpenState(open);\n              _.invoke(predefinedProps, 'onOpenChange', e, { open });\n            }\n          },\n        }),\n      })}\n    </ElementType>,\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, DatepickerProps> &\n  FluentComponentStaticProps<DatepickerProps> & {\n    Calendar: typeof DatepickerCalendar;\n    CalendarHeader: typeof DatepickerCalendarHeader;\n    CalendarHeaderAction: typeof DatepickerCalendarHeaderAction;\n    CalendarHeaderCell: typeof DatepickerCalendarHeaderCell;\n    CalendarCell: typeof DatepickerCalendarCell;\n    CalendarCellButton: typeof DatepickerCalendarCellButton;\n    CalendarGrid: typeof DatepickerCalendarGrid;\n    CalendarGridRow: typeof DatepickerCalendarGridRow;\n    Input: typeof Input;\n  };\n\nDatepicker.displayName = 'Datepicker';\n\nDatepicker.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendar: customPropTypes.itemShorthand,\n  popup: customPropTypes.itemShorthand,\n  input: customPropTypes.itemShorthand,\n\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  onDateChange: PropTypes.func,\n  onDateChangeError: PropTypes.func,\n  allowManualInput: PropTypes.bool,\n  fallbackToLastCorrectDateOnBlur: PropTypes.bool,\n  defaultCalendarOpenState: PropTypes.bool,\n  calendarOpenState: PropTypes.bool,\n\n  selectedDate: PropTypes.instanceOf(Date),\n  defaultSelectedDate: PropTypes.instanceOf(Date),\n\n  inputOnly: PropTypes.bool,\n  buttonOnly: PropTypes.bool,\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  goToToday: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n\n  'aria-labelledby': PropTypes.string,\n  'aria-invalid': PropTypes.bool,\n};\n\nDatepicker.defaultProps = {\n  accessibility: datepickerBehavior,\n\n  inputOnly: false,\n  buttonOnly: false,\n  calendar: {},\n  popup: {},\n  input: {},\n\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n\n  fallbackToLastCorrectDateOnBlur: true,\n  allowManualInput: true,\n  required: false,\n\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepicker.handledProps = Object.keys(Datepicker.propTypes) as any;\n\nDatepicker.create = createShorthandFactory({ Component: Datepicker });\n\nDatepicker.Calendar = DatepickerCalendar;\nDatepicker.CalendarHeader = DatepickerCalendarHeader;\nDatepicker.CalendarHeaderAction = DatepickerCalendarHeaderAction;\nDatepicker.CalendarHeaderCell = DatepickerCalendarHeaderCell;\nDatepicker.CalendarCell = DatepickerCalendarCell;\nDatepicker.CalendarCellButton = DatepickerCalendarCellButton;\nDatepicker.CalendarGrid = DatepickerCalendarGrid;\nDatepicker.CalendarGridRow = DatepickerCalendarGridRow;\nDatepicker.Input = Input;\n"],"file":"Datepicker.js"}