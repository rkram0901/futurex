{"version":3,"sources":["components/Pill/PillAction.tsx"],"names":["pillActionClassName","PillAction","React","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","styles","variables","size","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","Object","keys","defaultProps","pillActionBehavior","shorthandConfig","mappedProp"],"mappings":";;;;;AAAA;;AACA;;AACA;;AASA;;AAUA;;;;;;AAeO,IAAMA,mBAAmB,GAAG,iBAA5B;AAEP;AACA;AACA;;;AACO,IAAMC,UAAU,gBAAIC,KAAK,CAACC,UAAN,CAAkD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC3F,MAAMC,OAAO,GAAG,sCAAhB;;AACA,sBAA6B,iCAAaL,UAAU,CAACM,WAAxB,EAAqCD,OAAO,CAACE,SAA7C,CAA7B;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,EAAAA,QAAQ;AAER,MAAQE,aAAR,GAAyFP,KAAzF,CAAQO,aAAR;AAAA,MAAuBC,QAAvB,GAAyFR,KAAzF,CAAuBQ,QAAvB;AAAA,MAAiCC,SAAjC,GAAyFT,KAAzF,CAAiCS,SAAjC;AAAA,MAA4CC,OAA5C,GAAyFV,KAAzF,CAA4CU,OAA5C;AAAA,MAAqDC,MAArD,GAAyFX,KAAzF,CAAqDW,MAArD;AAAA,MAA6DC,MAA7D,GAAyFZ,KAAzF,CAA6DY,MAA7D;AAAA,MAAqEC,SAArE,GAAyFb,KAAzF,CAAqEa,SAArE;AAAA,MAAgFC,IAAhF,GAAyFd,KAAzF,CAAgFc,IAAhF;AAEA,MAAMC,WAAW,GAAG,qCAAiBR,aAAjB,EAAgC;AAClDS,IAAAA,SAAS,EAAEnB,UAAU,CAACM,WAD4B;AAElDc,IAAAA,GAAG,EAAEf,OAAO,CAACe;AAFqC,GAAhC,CAApB;;AAKA,mBAAoB,8BAAiCpB,UAAU,CAACM,WAA5C,EAAyD;AAC3EM,IAAAA,SAAS,EAAEb,mBADgE;AAE3EsB,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AAAEJ,QAAAA,IAAI,EAAJA;AAAF,OAAP;AAAA,KAFyD;AAG3EK,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAAEV,QAAAA,SAAS,EAATA,SAAF;AAAaE,QAAAA,MAAM,EAANA,MAAb;AAAqBC,QAAAA,MAAM,EAANA,MAArB;AAA6BC,QAAAA,SAAS,EAATA;AAA7B,OAAP;AAAA,KAHmD;AAI3EI,IAAAA,GAAG,EAAEf,OAAO,CAACe;AAJ8D,GAAzD,CAApB;AAAA,MAAQG,OAAR,cAAQA,OAAR;;AAOA,MAAMC,WAAW,GAAG,mCAAerB,KAAf,CAApB;AACA,MAAMsB,cAAc,GAAG,sCAAkBzB,UAAU,CAAC0B,YAA7B,EAA2CvB,KAA3C,CAAvB;AAEA,MAAMwB,OAAO,gBACX,oBAAC,WAAD,EACMT,WAAW,CAAC,MAAD;AACbN,IAAAA,SAAS,EAAEW,OAAO,CAACK,IADN;AAEbxB,IAAAA,GAAG,EAAHA;AAFa,KAGVyB,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAACpB,QAAD;AAAf,GAA/B,CAHU,EAIVc,cAJU,EADjB,EAQG,0BAAcd,QAAd,IAA0BA,QAA1B,GAAqCE,OARxC,CADF;AAaAJ,EAAAA,MAAM;AAEN,SAAOkB,OAAP;AACD,CAtC0B,CAApB;;AAyCP3B,UAAU,CAACM,WAAX,GAAyB,YAAzB;AAEAN,UAAU,CAACgC,SAAX,qBACKC,uBAAgBC,YAAhB,EADL;AAIAlC,UAAU,CAAC0B,YAAX,GAA0BS,MAAM,CAACC,IAAP,CAAYpC,UAAU,CAACgC,SAAvB,CAA1B;AAEAhC,UAAU,CAACqC,YAAX,GAA0B;AACxB3B,EAAAA,aAAa,EAAE4B,iCADS;AAExBzB,EAAAA,OAAO,eAAE,oBAAC,8BAAD;AAFe,CAA1B;AAKAb,UAAU,CAACuC,eAAX,GAA6B;AAC3BC,EAAAA,UAAU,EAAE;AADe,CAA7B","sourcesContent":["import * as React from 'react';\nimport { Accessibility, pillActionBehavior, PillActionBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { CloseIcon } from '@fluentui/react-icons-northstar';\n\nexport interface PillActionProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<PillActionBehaviorProps>;\n\n  /**\n   * A Pill can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n}\n\nexport type PillActionStylesProps = Required<Pick<PillActionProps, 'size'>>;\nexport const pillActionClassName = 'ui-pill__action';\n\n/**\n * A PillAction allows user to execute an action.\n */\nexport const PillAction = (React.forwardRef<HTMLDivElement, PillActionProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PillAction.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, content, design, styles, variables, size } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillAction.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillActionStylesProps>(PillAction.displayName, {\n    className: pillActionClassName,\n    mapPropsToStyles: () => ({ size }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillAction.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, PillActionProps> &\n  FluentComponentStaticProps<PillActionProps>;\n\nPillAction.displayName = 'PillAction';\n\nPillAction.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nPillAction.handledProps = Object.keys(PillAction.propTypes) as any;\n\nPillAction.defaultProps = {\n  accessibility: pillActionBehavior,\n  content: <CloseIcon />,\n};\n\nPillAction.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"PillAction.js"}