"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.reactionGroupClassName = exports.ReactionGroup = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _isNil2 = _interopRequireDefault(require("lodash/isNil"));

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var React = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _Reaction = require("./Reaction");

var _reactBindings = require("@fluentui/react-bindings");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var reactionGroupClassName = 'ui-reactions';
exports.reactionGroupClassName = reactionGroupClassName;

/**
 * A ReactionGroup groups multiple Reaction elements.
 */
var ReactionGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var context = (0, _reactBindings.useFluentContext)();

  var _useTelemetry = (0, _reactBindings.useTelemetry)(ReactionGroup.displayName, context.telemetry),
      setStart = _useTelemetry.setStart,
      setEnd = _useTelemetry.setEnd;

  setStart();
  var children = props.children,
      items = props.items,
      content = props.content,
      className = props.className,
      design = props.design,
      styles = props.styles,
      variables = props.variables;
  var ElementType = (0, _reactBindings.getElementType)(props);
  var unhandledProps = (0, _reactBindings.useUnhandledProps)(ReactionGroup.handledProps, props);
  var getA11yProps = (0, _reactBindings.useAccessibility)(props.accessibility, {
    debugName: ReactionGroup.displayName,
    rtl: context.rtl
  });

  var _useStyles = (0, _reactBindings.useStyles)(ReactionGroup.displayName, {
    className: reactionGroupClassName,
    mapPropsToInlineStyles: function mapPropsToInlineStyles() {
      return {
        className: className,
        design: design,
        styles: styles,
        variables: variables
      };
    },
    rtl: context.rtl
  }),
      classes = _useStyles.classes,
      resolvedStyles = _useStyles.styles;

  var element = (0, _isNil2.default)(items) ? /*#__PURE__*/React.createElement(ElementType, (0, _extends2.default)({}, getA11yProps('root', Object.assign({
    className: classes.root,
    ref: ref
  }, unhandledProps)), _utils.rtlTextContainer.getAttributes({
    forElements: [children, content]
  })), (0, _utils.childrenExist)(children) ? children : content) : /*#__PURE__*/React.createElement(ElementType, (0, _extends2.default)({}, unhandledProps, {
    className: classes.root
  }), (0, _map2.default)(items, function (reaction) {
    return _Reaction.Reaction.create(reaction, {
      defaultProps: function defaultProps() {
        return {
          styles: resolvedStyles.reaction
        };
      }
    });
  }));
  setEnd();
  return element;
});
exports.ReactionGroup = ReactionGroup;
ReactionGroup.displayName = 'ReactionGroup';
ReactionGroup.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  items: customPropTypes.collectionShorthand
});
ReactionGroup.handledProps = Object.keys(ReactionGroup.propTypes);
ReactionGroup.create = (0, _utils.createShorthandFactory)({
  Component: ReactionGroup,
  mappedProp: 'content',
  mappedArrayProp: 'items'
});
//# sourceMappingURL=ReactionGroup.js.map
