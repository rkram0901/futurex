{"version":3,"sources":["components/Datepicker/Datepicker.tsx"],"names":["datepickerBehavior","DateRangeType","DayOfWeek","FirstWeekOfYear","DEFAULT_CALENDAR_STRINGS","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","useAutoControlled","CalendarIcon","customPropTypes","handleRef","PropTypes","React","commonPropTypes","createShorthand","createShorthandFactory","Button","Input","Popup","DatepickerCalendar","DatepickerCalendarCell","DatepickerCalendarCellButton","DatepickerCalendarHeader","DatepickerCalendarHeaderAction","DatepickerCalendarHeaderCell","DatepickerCalendarGrid","DatepickerCalendarGridRow","validateDate","format","datepickerClassName","formatRestrictedInput","restrictedOptions","localizationStrings","formattedString","minDate","maxDate","inputBoundedFormatString","formatMonthDayYear","inputMinBoundedFormatString","inputMaxBoundedFormatString","inputAriaLabel","Datepicker","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","inputRef","useRef","dateFormatting","formatDay","formatYear","formatMonthYear","parseDate","months","shortMonths","days","shortDays","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","goToToday","openCalendarTitle","inputPlaceholder","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","calendar","popup","input","className","design","styles","variables","allowManualInput","ariaLabelledby","ariaInvalid","valueFormatter","useCallback","date","defaultValue","defaultCalendarOpenState","value","calendarOpenState","initialValue","openState","setOpenState","defaultSelectedDate","selectedDate","undefined","setSelectedDate","useState","formattedDate","setFormattedDate","useEffect","restrictedDatesOptions","restrictedDates","required","error","setError","calendarOptions","navigatedDate","today","Date","firstDayOfWeek","firstWeekOfYear","dateRangeType","daysToSelectInDayView","showWeekNumbers","workWeekDays","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","open","e","preventDefault","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","overrideDatepickerCalendarProps","predefinedProps","onDateChange","itemProps","targetDay","originalDate","calendarElement","defaultProps","overrideProps","overrideInputProps","onClick","onChange","target","parsedDate","validationError","onBlur","fallbackToLastCorrectDateOnBlur","futureFormattedDate","node","current","triggerButtonElement","inputOnly","disabled","element","unstable_wrapWithFocusZone","root","buttonOnly","placeholder","readOnly","trapFocus","disableFirstFocus","position","align","trigger","content","onOpenChange","type","propTypes","createCommon","itemShorthand","bool","func","onDateChangeError","instanceOf","arrayOf","oneOf","Object","keys","map","name","number","string","Monday","FirstDay","Day","create","Component","Calendar","CalendarHeader","CalendarHeaderAction","CalendarHeaderCell","CalendarCell","CalendarCellButton","CalendarGrid","CalendarGridRow"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  datepickerBehavior,\n  DatepickerBehaviorProps,\n  AccessibilityAttributes,\n} from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  FirstWeekOfYear,\n  DEFAULT_CALENDAR_STRINGS,\n  IDayGridOptions,\n  ICalendarStrings,\n  IDatepickerOptions,\n  IRestrictedDatesOptions,\n} from '../../utils/date-time-utilities';\n\nimport {\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useAutoControlled,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nimport { CalendarIcon } from '@fluentui/react-icons-northstar';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { handleRef } from '@fluentui/react-component-ref';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { Button } from '../Button/Button';\nimport { Input, InputProps } from '../Input/Input';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { DatepickerCalendar, DatepickerCalendarProps } from './DatepickerCalendar';\nimport { DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeader } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarHeaderAction } from './DatepickerCalendarHeaderAction';\nimport { DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { DatepickerCalendarGrid } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow } from './DatepickerCalendarGridRow';\nimport { validateDate } from './validateDate';\nimport { format } from '@uifabric/utilities';\n\nexport interface DatepickerProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDatepickerOptions> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerBehaviorProps>;\n\n  /** Identifies the element (or elements) that labels the current element. Will be passed to `input` with usage accessibibility behavior. */\n  'aria-labelledby'?: AccessibilityAttributes['aria-labelledby'];\n\n  /** Indicates the entered value does not conform to the format expected by the application. Will be passed to `input` with usage accessibibility behavior. */\n  'aria-invalid'?: AccessibilityAttributes['aria-invalid'];\n\n  /** Shorthand for the datepicker calendar. */\n  calendar?: ShorthandValue<DatepickerCalendarProps>;\n\n  /** Shorthand for the datepicker popup. */\n  popup?: ShorthandValue<PopupProps>;\n\n  /** Shorthand for the date text input. */\n  input?: ShorthandValue<InputProps>;\n\n  /** Datepicker shows it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Date needs to be entered, otherwise datepicker produces an error state. */\n  required?: boolean;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerProps & { value: Date }>;\n\n  /**\n   * Called on error when changing the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChangeError?: ComponentEventHandler<DatepickerProps & { error: string }>;\n\n  /** Target dates can be also entered through the input field. */\n  allowManualInput?: boolean;\n\n  /** The component automatically overrides faulty manual input upon blur. */\n  fallbackToLastCorrectDateOnBlur?: boolean;\n\n  /** Initial 'calendarOpenState' value. */\n  defaultCalendarOpenState?: boolean;\n\n  /** Controls the calendar's open state. */\n  calendarOpenState?: boolean;\n\n  /** Initial 'selectedDate' value. */\n  defaultSelectedDate?: Date;\n\n  /** Controls the calendar's 'selectedDate'. */\n  selectedDate?: Date;\n\n  /** Marks that the datepicker should only render the input field and not the trigger button with an icon. */\n  inputOnly?: boolean;\n\n  /** Marks that the datepicker should only render the trigger button with an icon and not the input field. */\n  buttonOnly?: boolean;\n}\n\nexport type DatepickerStylesProps = Pick<DatepickerProps, 'allowManualInput'>;\n\nexport const datepickerClassName = 'ui-datepicker';\n\nconst formatRestrictedInput = (restrictedOptions: IRestrictedDatesOptions, localizationStrings: ICalendarStrings) => {\n  let formattedString = '';\n  if (!!restrictedOptions.minDate && !!restrictedOptions.maxDate) {\n    formattedString = format(\n      localizationStrings.inputBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.minDate, localizationStrings),\n      localizationStrings.formatMonthDayYear(restrictedOptions.maxDate, localizationStrings),\n    );\n  } else if (!!restrictedOptions.minDate) {\n    formattedString = format(\n      localizationStrings.inputMinBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.minDate, localizationStrings),\n    );\n  } else if (!!restrictedOptions.maxDate) {\n    formattedString = format(\n      localizationStrings.inputMaxBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.maxDate, localizationStrings),\n    );\n  } else {\n    formattedString = localizationStrings.inputAriaLabel;\n  }\n\n  return formattedString;\n};\n\n/**\n * A Datepicker is a control which is used to display dates grid and allow user to select them.\n *\n * @accessibilityIssues\n * [NVDA - Aria-selected is not narrated for the gridcell](https://github.com/nvaccess/nvda/issues/11986)\n */\nexport const Datepicker = (React.forwardRef<HTMLDivElement, DatepickerProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Datepicker.displayName, context.telemetry);\n  setStart();\n  const inputRef = React.useRef<HTMLElement>();\n\n  // FIXME: This object is created every render, causing a cascade of useCallback/useEffect re-runs.\n  // Needs to be reworked by someone who understands the intent for when various updates ought to happen.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const dateFormatting: ICalendarStrings = {\n    formatDay: props.formatDay,\n    formatYear: props.formatYear,\n    formatMonthDayYear: props.formatMonthDayYear,\n    formatMonthYear: props.formatMonthYear,\n    parseDate: props.parseDate,\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n    isRequiredErrorMessage: props.isRequiredErrorMessage,\n    invalidInputErrorMessage: props.invalidInputErrorMessage,\n    isOutOfBoundsErrorMessage: props.isOutOfBoundsErrorMessage,\n    goToToday: props.goToToday,\n    openCalendarTitle: props.openCalendarTitle,\n    inputPlaceholder: props.inputPlaceholder,\n    prevMonthAriaLabel: props.prevMonthAriaLabel,\n    nextMonthAriaLabel: props.nextMonthAriaLabel,\n    prevYearAriaLabel: props.prevYearAriaLabel,\n    nextYearAriaLabel: props.nextYearAriaLabel,\n    prevYearRangeAriaLabel: props.prevYearRangeAriaLabel,\n    nextYearRangeAriaLabel: props.nextYearRangeAriaLabel,\n    monthPickerHeaderAriaLabel: props.monthPickerHeaderAriaLabel,\n    yearPickerHeaderAriaLabel: props.yearPickerHeaderAriaLabel,\n    closeButtonAriaLabel: props.closeButtonAriaLabel,\n    weekNumberFormatString: props.weekNumberFormatString,\n    selectedDateFormatString: props.selectedDateFormatString,\n    todayDateFormatString: props.todayDateFormatString,\n    inputAriaLabel: props.inputAriaLabel,\n    inputBoundedFormatString: props.inputBoundedFormatString,\n    inputMinBoundedFormatString: props.inputMinBoundedFormatString,\n    inputMaxBoundedFormatString: props.inputMaxBoundedFormatString,\n  };\n\n  const {\n    calendar,\n    popup,\n    input,\n    className,\n    design,\n    styles,\n    variables,\n    formatMonthDayYear,\n    allowManualInput,\n    'aria-labelledby': ariaLabelledby,\n    'aria-invalid': ariaInvalid,\n  } = props;\n\n  const valueFormatter = React.useCallback(\n    date =>\n      date\n        ? formatMonthDayYear(date, {\n            months: dateFormatting.months,\n            shortMonths: dateFormatting.shortMonths,\n            days: dateFormatting.days,\n            shortDays: dateFormatting.shortDays,\n          })\n        : '',\n    [\n      dateFormatting.days,\n      dateFormatting.months,\n      dateFormatting.shortDays,\n      dateFormatting.shortMonths,\n      formatMonthDayYear,\n    ],\n  );\n\n  const [openState, setOpenState] = useAutoControlled<boolean>({\n    defaultValue: props.defaultCalendarOpenState,\n    value: props.calendarOpenState,\n    initialValue: false,\n  });\n\n  const [selectedDate, setSelectedDate] = useAutoControlled<Date | undefined>({\n    defaultValue: props.defaultSelectedDate,\n    value: props.selectedDate,\n    initialValue: undefined,\n  });\n\n  const [formattedDate, setFormattedDate] = React.useState<string>(valueFormatter(selectedDate));\n\n  React.useEffect(() => {\n    setFormattedDate(valueFormatter(selectedDate));\n  }, [selectedDate, valueFormatter]);\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate: props.minDate,\n    maxDate: props.maxDate,\n    restrictedDates: props.restrictedDates,\n  };\n\n  const [error, setError] = React.useState<string>(() =>\n    !!props.selectedDate || !!props.defaultSelectedDate\n      ? validateDate(selectedDate, formattedDate, restrictedDatesOptions, dateFormatting, props.required)\n      : '',\n  );\n\n  const calendarOptions: IDayGridOptions = {\n    selectedDate,\n    navigatedDate: !!selectedDate && !error ? selectedDate : props.today ?? new Date(),\n    firstDayOfWeek: props.firstDayOfWeek,\n    firstWeekOfYear: props.firstWeekOfYear,\n    dateRangeType: props.dateRangeType,\n    daysToSelectInDayView: props.daysToSelectInDayView,\n    today: props.today,\n    showWeekNumbers: props.showWeekNumbers,\n    workWeekDays: props.workWeekDays,\n    ...restrictedDatesOptions,\n  };\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Datepicker.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Datepicker.displayName,\n    actionHandlers: {\n      open: e => {\n        if (allowManualInput) {\n          setOpenState(!openState);\n        } else {\n          // Keep popup open in case we can only enter the date through calendar.\n          setOpenState(true);\n        }\n\n        e.preventDefault();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      'aria-invalid': ariaInvalid,\n      'aria-labelledby': ariaLabelledby,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<DatepickerStylesProps>(Datepicker.displayName, {\n    className: datepickerClassName,\n    mapPropsToStyles: () => ({\n      allowManualInput,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const overrideDatepickerCalendarProps = (predefinedProps: DatepickerCalendarProps): DatepickerCalendarProps => ({\n    onDateChange: (e, itemProps) => {\n      const targetDay = itemProps.value;\n      setSelectedDate(targetDay.originalDate);\n      setOpenState(false);\n      setError('');\n      setFormattedDate(valueFormatter(targetDay.originalDate));\n\n      _.invoke(props, 'onDateChange', e, { itemProps, value: targetDay.originalDate });\n    },\n  });\n\n  const calendarElement = createShorthand(DatepickerCalendar, calendar, {\n    defaultProps: () => getA11yProps('calendar', { ...calendarOptions, ...dateFormatting }),\n    overrideProps: overrideDatepickerCalendarProps,\n  });\n\n  const overrideInputProps = (predefinedProps: InputProps): InputProps => ({\n    onClick: (e): void => {\n      if (allowManualInput) {\n        setOpenState(!openState);\n      } else {\n        // Keep popup open in case we can only enter the date through calendar.\n        setOpenState(true);\n      }\n\n      _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n    },\n    onChange: (e, target: { value: string }) => {\n      const parsedDate = props.parseDate(target.value);\n      const validationError = validateDate(parsedDate, target.value, calendarOptions, dateFormatting, props.required);\n      setError(validationError);\n      setFormattedDate(target.value);\n      if (!!validationError) {\n        _.invoke(props, 'onDateChangeError', e, { ...props, error: validationError });\n      } else {\n        setSelectedDate(parsedDate);\n        _.invoke(props, 'onDateChange', e, { ...props, value: parsedDate });\n      }\n\n      _.invoke(predefinedProps, 'onChange', e, predefinedProps);\n    },\n    onBlur: e => {\n      if (props.fallbackToLastCorrectDateOnBlur && !!error) {\n        const futureFormattedDate = valueFormatter(selectedDate);\n        const validationError = validateDate(\n          selectedDate,\n          futureFormattedDate,\n          calendarOptions,\n          dateFormatting,\n          props.required,\n        );\n        setError(validationError);\n        setFormattedDate(futureFormattedDate);\n        if (!!validationError) {\n          _.invoke(props, 'onDateChangeError', e, { ...props, error: validationError });\n        }\n      }\n\n      _.invoke(predefinedProps, 'onBlur', e, predefinedProps);\n    },\n\n    inputRef: (node: HTMLInputElement) => {\n      handleRef(predefinedProps.inputRef, node);\n      inputRef.current = node;\n    },\n  });\n\n  const triggerButtonElement = props.inputOnly ? null : (\n    <Button icon={<CalendarIcon />} title={props.openCalendarTitle} iconOnly disabled={props.disabled} type=\"button\" />\n  );\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {!props.buttonOnly &&\n        createShorthand(Input, input, {\n          defaultProps: () =>\n            getA11yProps('input', {\n              placeholder: props.inputPlaceholder,\n              disabled: props.disabled,\n              error: !!error,\n              value: formattedDate,\n              readOnly: !allowManualInput,\n              required: props.required,\n              'aria-label': formatRestrictedInput(restrictedDatesOptions, dateFormatting),\n            }),\n          overrideProps: overrideInputProps,\n        })}\n      {createShorthand(Popup, popup, {\n        defaultProps: () => ({\n          open: openState && !props.disabled,\n          trapFocus: {\n            disableFirstFocus: true,\n          },\n          position: 'below' as const,\n          align: 'start' as const,\n        }),\n        overrideProps: (predefinedProps: PopupProps): PopupProps => ({\n          trigger: predefinedProps.trigger ?? triggerButtonElement,\n          target: props.buttonOnly ? null : inputRef.current,\n          content: calendarElement,\n          onOpenChange: (e, { open }) => {\n            // In case the event is a click on input, we ignore such events as it should be directly handled by input.\n            if (!(e.type === 'click' && e.target === inputRef?.current)) {\n              setOpenState(open);\n              _.invoke(predefinedProps, 'onOpenChange', e, { open });\n            }\n          },\n        }),\n      })}\n    </ElementType>,\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, DatepickerProps> &\n  FluentComponentStaticProps<DatepickerProps> & {\n    Calendar: typeof DatepickerCalendar;\n    CalendarHeader: typeof DatepickerCalendarHeader;\n    CalendarHeaderAction: typeof DatepickerCalendarHeaderAction;\n    CalendarHeaderCell: typeof DatepickerCalendarHeaderCell;\n    CalendarCell: typeof DatepickerCalendarCell;\n    CalendarCellButton: typeof DatepickerCalendarCellButton;\n    CalendarGrid: typeof DatepickerCalendarGrid;\n    CalendarGridRow: typeof DatepickerCalendarGridRow;\n    Input: typeof Input;\n  };\n\nDatepicker.displayName = 'Datepicker';\n\nDatepicker.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendar: customPropTypes.itemShorthand,\n  popup: customPropTypes.itemShorthand,\n  input: customPropTypes.itemShorthand,\n\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  onDateChange: PropTypes.func,\n  onDateChangeError: PropTypes.func,\n  allowManualInput: PropTypes.bool,\n  fallbackToLastCorrectDateOnBlur: PropTypes.bool,\n  defaultCalendarOpenState: PropTypes.bool,\n  calendarOpenState: PropTypes.bool,\n\n  selectedDate: PropTypes.instanceOf(Date),\n  defaultSelectedDate: PropTypes.instanceOf(Date),\n\n  inputOnly: PropTypes.bool,\n  buttonOnly: PropTypes.bool,\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  goToToday: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n\n  'aria-labelledby': PropTypes.string,\n  'aria-invalid': PropTypes.bool,\n};\n\nDatepicker.defaultProps = {\n  accessibility: datepickerBehavior,\n\n  inputOnly: false,\n  buttonOnly: false,\n  calendar: {},\n  popup: {},\n  input: {},\n\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n\n  fallbackToLastCorrectDateOnBlur: true,\n  allowManualInput: true,\n  required: false,\n\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepicker.handledProps = Object.keys(Datepicker.propTypes) as any;\n\nDatepicker.create = createShorthandFactory({ Component: Datepicker });\n\nDatepicker.Calendar = DatepickerCalendar;\nDatepicker.CalendarHeader = DatepickerCalendarHeader;\nDatepicker.CalendarHeaderAction = DatepickerCalendarHeaderAction;\nDatepicker.CalendarHeaderCell = DatepickerCalendarHeaderCell;\nDatepicker.CalendarCell = DatepickerCalendarCell;\nDatepicker.CalendarCellButton = DatepickerCalendarCellButton;\nDatepicker.CalendarGrid = DatepickerCalendarGrid;\nDatepicker.CalendarGridRow = DatepickerCalendarGridRow;\nDatepicker.Input = Input;\n"],"file":"Datepicker.js"}