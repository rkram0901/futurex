{"version":3,"sources":["components/Tree/TreeItem.tsx"],"names":["treeItemBehavior","getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","useFluentContext","customPropTypes","PropTypes","React","handleRef","Ref","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","shouldPreventDefaultOnKeyDown","TreeTitle","TreeContext","treeItemClassName","TreeItem","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","selectionIndicator","selectable","id","parent","useContext","getItemById","registerItemRef","toggleItemActive","focusItemById","expandSiblings","toggleItemSelect","getToFocusIDByFirstCharacter","selected","hasSubtree","childrenIds","getA11Props","actionHandlers","performClick","e","preventDefault","stopPropagation","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","handleSiblingsExpand","performSelection","handleSelection","debugName","mapPropsToBehavior","indeterminate","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","handleTitleOverrides","predefinedProps","onClick","titleProps","handleClick","target","currentTarget","handleKeyDown","key","length","match","toFocusID","elementRef","useCallback","node","ElementType","unhandledProps","handledProps","element","root","onKeyDown","getAttributes","forElements","create","defaultProps","as","render","overrideProps","elementWithRef","propTypes","createCommon","content","string","isRequired","number","items","collectionShorthand","onFocusFirstChild","func","onFocusParent","onTitleClick","onSiblingsExpand","bool","itemShorthand","shorthandAllowingChildren","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { handleRef, Ref } from '@fluentui/react-component-ref';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n  shouldPreventDefaultOnKeyDown,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n  ComponentKeyboardEventHandler,\n} from '../../types';\nimport { TreeTitle, TreeTitleProps } from './TreeTitle';\nimport { BoxProps } from '../Box/Box';\nimport { TreeContext } from './context';\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. If set to true, item is initialy expanded. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n\n  /** Whether or not the item can be selectable. */\n  selectable?: boolean;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /**\n   * Called on item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<TreeItemProps>;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>> & {\n  selectable?: boolean;\n};\nexport const treeItemClassName = 'ui-tree__item';\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport const TreeItem = (React.forwardRef<HTMLDivElement, TreeItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n    selectionIndicator,\n    selectable,\n    id,\n    parent,\n  } = props;\n\n  const {\n    getItemById,\n    registerItemRef,\n    toggleItemActive,\n    focusItemById,\n    expandSiblings,\n    toggleItemSelect,\n    getToFocusIDByFirstCharacter,\n  } = React.useContext(TreeContext);\n\n  const { selected, hasSubtree, childrenIds } = getItemById(id);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        if (shouldPreventDefaultOnKeyDown(e)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        toggleItemActive(e, id);\n        _.invoke(props, 'onTitleClick', e, props);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        toggleItemActive(e, id);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n      performSelection: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        handleSelection(e);\n      },\n    },\n    debugName: TreeItem.displayName,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree,\n      treeSize,\n      selected: selected === true,\n      selectable,\n      indeterminate: selected === 'indeterminate',\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: treeItemClassName,\n    mapPropsToStyles: () => ({\n      level,\n      selectable,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const handleSelection = e => {\n    if (selectable) {\n      toggleItemSelect(e, id);\n    }\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    focusItemById(childrenIds?.[0]);\n  };\n\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    focusItemById(parent);\n  };\n\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    expandSiblings(e, props.id);\n  };\n\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    id,\n    onClick: (e, titleProps) => {\n      _.invoke(props, 'onTitleClick', e, props);\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (e.target === e.currentTarget) {\n      // onClick listener for mouse click on treeItem DOM only,\n      // which could be triggered by VO+space on selectable tree parent node\n      handleSelection(e);\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key && e.key.length === 1 && e.key.match(/\\S/) && e.key !== '*') {\n      e.preventDefault();\n      e.stopPropagation();\n      const toFocusID = getToFocusIDByFirstCharacter(e, props.id);\n      if (toFocusID !== props.id) {\n        focusItemById(toFocusID);\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const elementRef = React.useCallback(\n    node => {\n      registerItemRef(id, node);\n      handleRef(contentRef, node);\n    },\n    [id, contentRef, registerItemRef],\n  );\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        id,\n        ref,\n        selected: selected === true,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                hasSubtree,\n                as: hasSubtree ? 'span' : 'a',\n                level,\n                treeSize,\n                expanded,\n                index,\n                selected: selected === true,\n                selectable,\n                parent,\n                ...(hasSubtree && {\n                  indeterminate: selected === 'indeterminate',\n                }),\n                selectionIndicator,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  const elementWithRef = <Ref innerRef={elementRef}>{element}</Ref>;\n  setEnd();\n\n  return elementWithRef;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, TreeItemProps> & FluentComponentStaticProps<TreeItemProps>;\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  selectable: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n};\n\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n  selectable: true,\n};\n\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n"],"file":"TreeItem.js"}