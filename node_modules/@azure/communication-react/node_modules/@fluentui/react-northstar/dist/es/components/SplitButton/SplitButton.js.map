{"version":3,"sources":["components/SplitButton/SplitButton.tsx"],"names":["splitButtonBehavior","customPropTypes","PropTypes","React","ALIGNMENTS","POSITIONS","AUTOSIZES","isFromKeyboard","checkIsFromKeyboard","commonPropTypes","createShorthand","createShorthandFactory","SplitButtonToggle","Button","MenuButton","SplitButtonDivider","Ref","useTelemetry","useAutoControlled","useAccessibility","getElementType","useFluentContext","useUnhandledProps","useStyles","splitButtonClassName","SplitButton","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","button","disabled","menu","primary","secondary","toggleButton","size","position","align","flipBoundary","flat","overflowBoundary","popperRef","positionFixed","offset","unstable_disableTether","unstable_pinned","autoSize","className","design","styles","accessibility","variables","targetRef","useRef","ElementType","unhandledProps","handledProps","defaultValue","defaultOpen","value","open","initialValue","setOpen","useState","setIsFromKeyboard","getA11yProps","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","handleMenuButtonOverrides","predefinedProps","onMenuItemClick","e","menuItemProps","onOpenChange","popupProps","stopPropagation","handleMenuButtonTriggerOverrides","onClick","buttonProps","onFocus","element","root","create","defaultProps","on","trigger","menuButton","overrideProps","target","current","isOpen","Toggle","propTypes","createCommon","content","itemShorthand","bool","oneOfType","arrayOf","itemShorthandWithoutJSX","onMainButtonClick","func","every","disallow","oneOf","object","number","Object","keys","Component"],"mappings":"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","sourcesContent":["import { Accessibility, splitButtonBehavior, SplitButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { ALIGNMENTS, POSITIONS, AUTOSIZES } from '../../utils/positioner';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  isFromKeyboard as checkIsFromKeyboard,\n  commonPropTypes,\n  SizeValue,\n  createShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { SplitButtonToggle, SplitButtonToggleProps } from './SplitButtonToggle';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { MenuButton, MenuButtonProps } from '../MenuButton/MenuButton';\nimport { MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PopupProps } from '../Popup/Popup';\nimport { SplitButtonDivider } from './SplitButtonDivider';\nimport { Ref } from '@fluentui/react-component-ref';\nimport { PositioningProps, AutoSize } from '../../utils/positioner/types';\n\nimport {\n  useTelemetry,\n  useAutoControlled,\n  useAccessibility,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface SplitButtonProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<SplitButtonBehaviorProps>;\n\n  /** Shorthand for the main button. */\n  button?: ShorthandValue<ButtonProps>;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** A split button can be disabled. */\n  disabled?: boolean;\n\n  /** Shorthand for the menu. */\n  menu?: ShorthandValue<MenuProps> | ShorthandCollection<MenuItemProps>;\n\n  /**\n   * Called after user's click on the main button.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMainButtonClick?: ComponentEventHandler<ButtonProps>;\n\n  /**\n   * Called after user's click on a menu item.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMenuItemClick?: ComponentEventHandler<MenuItemProps>;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: ComponentEventHandler<SplitButtonProps>;\n\n  /** Defines whether menu is displayed. */\n  open?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  primary?: boolean;\n\n  /** A split button can be formatted to show different levels of emphasis. */\n  secondary?: boolean;\n\n  /** A split button can be sized */\n  size?: SizeValue;\n\n  /** A button can be elevated or flat. */\n  flat?: boolean;\n\n  /** Shorthand for the toggle button. */\n  toggleButton?: ShorthandValue<SplitButtonToggleProps>;\n}\n\nexport const splitButtonClassName = 'ui-splitbutton';\n\nexport type SplitButtonStylesProps = Required<Pick<SplitButtonProps, 'size'>> & {\n  flat: boolean;\n  isFromKeyboard: boolean;\n};\n\n/**\n * A SplitButton enables users to take one of several related actions, one being dominant and rest being displayed in a menu.\n */\nexport const SplitButton = (React.forwardRef<HTMLDivElement, SplitButtonProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(SplitButton.displayName, context.telemetry);\n  setStart();\n\n  const {\n    button,\n    disabled,\n    menu,\n    primary,\n    secondary,\n    toggleButton,\n    size,\n    position,\n    align,\n    flipBoundary,\n    flat,\n    overflowBoundary,\n    popperRef,\n    positionFixed,\n    offset,\n    unstable_disableTether,\n    unstable_pinned,\n    autoSize,\n    className,\n    design,\n    styles,\n    accessibility,\n    variables,\n  } = props;\n\n  const targetRef = React.useRef<HTMLDivElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(SplitButton.handledProps, props);\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n    initialValue: false,\n  });\n\n  const [isFromKeyboard, setIsFromKeyboard] = React.useState<boolean>(false);\n\n  const getA11yProps = useAccessibility<SplitButtonBehaviorProps>(accessibility, {\n    debugName: SplitButton.displayName,\n    mapPropsToBehavior: () => ({\n      open,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<SplitButtonStylesProps>(SplitButton.displayName, {\n    className: splitButtonClassName,\n    mapPropsToStyles: () => ({\n      isFromKeyboard,\n      size,\n      flat,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleMenuButtonOverrides = (predefinedProps: MenuButtonProps) => ({\n    onMenuItemClick: (e: React.SyntheticEvent, menuItemProps: MenuItemProps) => {\n      setOpen(false);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: false });\n\n      _.invoke(predefinedProps, 'onMenuItemClick', e, menuItemProps);\n      _.invoke(props, 'onMenuItemClick', e, menuItemProps);\n    },\n    onOpenChange: (e: React.SyntheticEvent, popupProps: PopupProps) => {\n      e.stopPropagation();\n      setOpen(popupProps.open);\n      _.invoke(props, 'onOpenChange', e, { ...props, open: popupProps.open });\n    },\n  });\n\n  const handleMenuButtonTriggerOverrides = (predefinedProps: ButtonProps) => ({\n    onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps);\n      _.invoke(props, 'onMainButtonClick', e, buttonProps);\n    },\n    onFocus: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n      _.invoke(predefinedProps, 'onFocus', e, buttonProps);\n      setIsFromKeyboard(checkIsFromKeyboard());\n    },\n  });\n\n  const element = (\n    <Ref innerRef={targetRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {MenuButton.create(\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('menuButton', {\n                menu,\n                on: [],\n                open,\n                trigger: createShorthand(Button, button, {\n                  defaultProps: () => ({\n                    styles: resolvedStyles.menuButton,\n                    primary,\n                    secondary,\n                    disabled,\n                  }),\n                  overrideProps: handleMenuButtonTriggerOverrides,\n                }),\n                target: targetRef.current,\n                position,\n                align,\n                flipBoundary,\n                overflowBoundary,\n                popperRef,\n                positionFixed,\n                offset,\n                unstable_disableTether,\n                unstable_pinned,\n                autoSize,\n              }),\n            overrideProps: handleMenuButtonOverrides,\n          },\n        )}\n\n        {createShorthand(\n          SplitButtonDivider,\n          {},\n          {\n            defaultProps: () =>\n              getA11yProps('divider', {\n                primary,\n              }),\n          },\n        )}\n        {SplitButtonToggle.create(toggleButton, {\n          defaultProps: () =>\n            getA11yProps('toggleButton', {\n              disabled,\n              primary,\n              secondary,\n              size,\n              flat,\n            }),\n          overrideProps: (predefinedProps: ButtonProps) => ({\n            onClick: (e: React.SyntheticEvent, buttonProps: ButtonProps) => {\n              _.invoke(predefinedProps, 'onClick', e, buttonProps);\n\n              setOpen(isOpen => {\n                const open = !isOpen;\n                _.invoke(props, 'onOpenChange', e, { ...props, open });\n                return open;\n              });\n            },\n          }),\n        })}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, SplitButtonProps> &\n  FluentComponentStaticProps<SplitButtonProps> & {\n    Toggle: typeof SplitButtonToggle;\n  };\n\nSplitButton.displayName = 'SplitButton';\n\nSplitButton.Toggle = SplitButtonToggle;\n\nSplitButton.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  button: customPropTypes.itemShorthand,\n  defaultOpen: PropTypes.bool,\n  menu: PropTypes.oneOfType([\n    customPropTypes.itemShorthand,\n    PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX),\n  ]),\n  onMainButtonClick: PropTypes.func,\n  onMenuItemClick: PropTypes.func,\n  onOpenChange: PropTypes.func,\n  open: PropTypes.bool,\n  size: customPropTypes.size,\n  flat: PropTypes.bool,\n  popperRef: customPropTypes.ref,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  toggleButton: customPropTypes.itemShorthand,\n  position: PropTypes.oneOf(POSITIONS),\n  align: PropTypes.oneOf(ALIGNMENTS),\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  positionFixed: PropTypes.bool,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  autoSize: PropTypes.oneOf<AutoSize>(AUTOSIZES),\n};\n\nSplitButton.defaultProps = {\n  accessibility: splitButtonBehavior,\n  toggleButton: {},\n  position: 'below',\n  align: 'start',\n};\n\nSplitButton.handledProps = Object.keys(SplitButton.propTypes) as any;\n\nSplitButton.create = createShorthandFactory({\n  Component: SplitButton,\n});\n"],"file":"SplitButton.js"}