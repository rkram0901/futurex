{"version":3,"sources":["components/Dropdown/DropdownSearchInput.tsx"],"names":["customPropTypes","React","PropTypes","cx","createShorthandFactory","commonPropTypes","Input","useFluentContext","useTelemetry","useStyles","useUnhandledProps","dropdownSearchInputClassName","dropdownSearchInputSlotClassNames","input","wrapper","DropdownSearchInput","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibilityComboboxProps","accessibilityInputProps","inputRef","inline","placeholder","disabled","className","design","styles","variables","unhandledProps","handledProps","mapPropsToStyles","mapPropsToInlineStyles","resolvedStyles","handleFocus","e","handleInputKeyDown","handleInputBlur","handleKeyUp","element","root","type","onBlur","onKeyDown","propTypes","createCommon","accessibility","children","content","object","bool","onFocus","func","onInputBlur","onInputKeyDown","onKeyUp","string","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport { Input } from '../Input/Input';\nimport {\n  useFluentContext,\n  useTelemetry,\n  useStyles,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface DropdownSearchInputSlotClassNames {\n  input: string;\n  wrapper: string;\n}\n\nexport interface DropdownSearchInputProps extends UIComponentProps<DropdownSearchInputProps> {\n  /** Accessibility props for combobox slot. */\n  accessibilityComboboxProps?: any;\n\n  /** Accessibility props for input slot. */\n  accessibilityInputProps?: any;\n\n  /** A dropdown search input can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** A dropdown search input can be formatted to appear inline in the context of a Dropdown. */\n  inline?: boolean;\n\n  /** Ref for input DOM node. */\n  inputRef?: React.Ref<HTMLInputElement>;\n\n  /**\n   * Called on input element focus.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onFocus?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input element blur.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputBlur?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key down event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onInputKeyDown?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /**\n   * Called on input key up event.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyUp?: ComponentEventHandler<DropdownSearchInputProps>;\n\n  /** A placeholder message. */\n  placeholder?: string;\n}\n\nexport const dropdownSearchInputClassName = 'ui-dropdown__searchinput';\nexport const dropdownSearchInputSlotClassNames: DropdownSearchInputSlotClassNames = {\n  input: `${dropdownSearchInputClassName}__input`,\n  wrapper: `${dropdownSearchInputClassName}__wrapper`,\n};\n\nexport type DropdownSearchInputStylesProps = Required<Pick<DropdownSearchInputProps, 'inline'>>;\n\n/**\n * A DropdownSearchInput represents item of 'search' Dropdown.\n * Used to display the search input field.\n */\nexport const DropdownSearchInput = (React.forwardRef<HTMLInputElement, DropdownSearchInputProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DropdownSearchInput.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibilityComboboxProps,\n    accessibilityInputProps,\n    inputRef,\n    inline,\n    placeholder,\n    disabled,\n    className,\n    design,\n    styles,\n    variables,\n  } = props;\n\n  const unhandledProps = useUnhandledProps(DropdownSearchInput.handledProps, props);\n\n  const { styles: resolvedStyles } = useStyles<DropdownSearchInputStylesProps>(DropdownSearchInput.displayName, {\n    className: dropdownSearchInputClassName,\n    mapPropsToStyles: () => ({ inline }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleInputKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputKeyDown', e, props);\n  };\n\n  const handleInputBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onInputBlur', e, props);\n  };\n\n  const handleKeyUp = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onKeyUp', e, props);\n  };\n\n  const element = (\n    <Input\n      ref={ref}\n      disabled={disabled}\n      inputRef={inputRef}\n      onFocus={handleFocus}\n      onKeyUp={handleKeyUp}\n      {...unhandledProps}\n      wrapper={{\n        className: cx(dropdownSearchInputSlotClassNames.wrapper, className),\n        styles: resolvedStyles.root,\n        ...accessibilityComboboxProps,\n        ...unhandledProps.wrapper,\n      }}\n      input={{\n        type: 'text',\n        className: dropdownSearchInputSlotClassNames.input,\n        styles: resolvedStyles.input,\n        placeholder,\n        onBlur: handleInputBlur,\n        onKeyDown: handleInputKeyDown,\n        ...accessibilityInputProps,\n        ...unhandledProps.input,\n      }}\n    />\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'input', HTMLInputElement, DropdownSearchInputProps> &\n  FluentComponentStaticProps<DropdownSearchInputProps>;\n\nDropdownSearchInput.displayName = 'DropdownSearchInput';\n\nDropdownSearchInput.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    children: false,\n    content: false,\n  }),\n  accessibilityInputProps: PropTypes.object,\n  accessibilityComboboxProps: PropTypes.object,\n  disabled: PropTypes.bool,\n  inline: PropTypes.bool,\n  inputRef: customPropTypes.ref,\n  onFocus: PropTypes.func,\n  onInputBlur: PropTypes.func,\n  onInputKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  placeholder: PropTypes.string,\n};\n\nDropdownSearchInput.handledProps = Object.keys(DropdownSearchInput.propTypes) as any;\n\nDropdownSearchInput.create = createShorthandFactory({ Component: DropdownSearchInput });\n"],"file":"DropdownSearchInput.js"}