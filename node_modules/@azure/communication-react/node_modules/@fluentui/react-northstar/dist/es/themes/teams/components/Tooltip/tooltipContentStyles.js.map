{"version":3,"sources":["themes/teams/components/Tooltip/tooltipContentStyles.ts"],"names":["getContainerStyles","getPointerStyles","pointerSvgUrl","tooltipContentStyles","root","p","props","v","variables","display","position","maxWidth","zIndex","pointing","pointerEvents","placement","basePlacement","padding","pointerMargin","open","pointer","rtl","width","pointerWidth","height","pointerHeight","backgroundColor","subtle","subtleBackgroundColor","borderSize","borderColor","subtleBorderColor","gap","pointerGap","svg","content","textAlign","color","background","borderRadius","boxShadow","subtleForegroundColor","borderStyle","borderWidth"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { TooltipContentStylesProps } from '../../../../components/Tooltip/TooltipContent';\nimport { TooltipContentVariables } from './tooltipContentVariables';\nimport { getContainerStyles, getPointerStyles } from '../../getPointerStyles';\nimport { pointerSvgUrl } from '../../pointerSvgUrl';\n\nexport const tooltipContentStyles: ComponentSlotStylesPrepared<TooltipContentStylesProps, TooltipContentVariables> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'none',\n    position: 'absolute',\n\n    maxWidth: v.maxWidth,\n    zIndex: v.zIndex,\n\n    ...(p.pointing && {\n      pointerEvents: 'all',\n\n      ...getContainerStyles({\n        placement: p.basePlacement,\n        padding: v.pointerMargin,\n      }),\n    }),\n\n    ...(p.open && {\n      display: 'block',\n    }),\n  }),\n  pointer: ({ props: p, variables: v, rtl }): ICSSInJSStyle => ({\n    display: 'block',\n    position: 'absolute',\n    width: v.pointerWidth,\n    height: v.pointerHeight,\n\n    ...getPointerStyles({\n      backgroundColor: p.subtle ? v.subtleBackgroundColor : v.backgroundColor,\n      borderSize: v.borderSize,\n      borderColor: p.subtle ? v.subtleBorderColor : 'transparent',\n      gap: v.pointerGap,\n      padding: v.pointerMargin,\n      height: v.pointerHeight,\n      width: v.pointerWidth,\n\n      placement: p.basePlacement,\n      rtl,\n      svg: pointerSvgUrl(p.subtle ? v.subtleBackgroundColor : v.backgroundColor),\n    }),\n  }),\n  content: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    display: 'block',\n    padding: v.padding,\n    textAlign: 'left',\n\n    color: v.color,\n    background: v.backgroundColor,\n    borderRadius: v.borderRadius,\n    boxShadow: v.boxShadow,\n\n    ...(p.subtle && {\n      background: v.subtleBackgroundColor,\n      color: v.subtleForegroundColor,\n      borderStyle: 'solid',\n      borderWidth: v.borderSize,\n      borderColor: v.subtleBorderColor,\n    }),\n\n    ...(p.pointing && {\n      pointerEvents: 'all',\n    }),\n  }),\n};\n"],"file":"tooltipContentStyles.js"}