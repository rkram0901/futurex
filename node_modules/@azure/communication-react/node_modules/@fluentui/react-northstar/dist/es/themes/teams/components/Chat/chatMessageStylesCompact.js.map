{"version":3,"sources":["themes/teams/components/Chat/chatMessageStylesCompact.ts"],"names":["chatMessageSlotClassNames","pxToRem","screenReaderContainerStyles","getBorderFocusStyles","chatMessageStylesCompact","root","siteVariables","theme","v","variables","borderFocusStyles","borderRadius","highlight","backgroundColor","compactHoverBackground","border","compactHoverBorder","timestamp","opacity","compactBorder","padding","paddingCompact","width","hasMention","isImportant","bar","hasMentionColor","isImportantColor","position","height","left","top","author","p","props","attached","color","mine","authorColorMineCompact","contentColor","float","fontWeight","authorFontWeightCompact","marginRight","authorMarginRightCompact","badge","alignSelf","flexShrink","margin","compactSpacing","compactBody","display","justifyContent","minWidth","reactionGroup","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\n\nimport { chatMessageSlotClassNames, ChatMessageStylesProps } from '../../../../components/Chat/ChatMessage';\nimport { pxToRem } from '../../../../utils';\nimport { screenReaderContainerStyles } from '../../../../utils/accessibility/Styles/accessibilityStyles';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { ChatMessageVariables } from './chatMessageVariables';\n\n/** ChatMessage styles specific for the compact density. */\nexport const chatMessageStylesCompact: ComponentSlotStylesPrepared<ChatMessageStylesProps, ChatMessageVariables> = {\n  root: ({ theme: { siteVariables }, variables: v }): ICSSInJSStyle => {\n    const borderFocusStyles = getBorderFocusStyles({ borderRadius: 'inherit', variables: siteVariables });\n    const highlight = {\n      backgroundColor: v.compactHoverBackground,\n      border: v.compactHoverBorder,\n      [`& .${chatMessageSlotClassNames.timestamp}`]: {\n        opacity: 1,\n      },\n    };\n\n    return {\n      border: v.compactBorder,\n      padding: v.paddingCompact,\n      width: '100%',\n\n      ...((v.hasMention || v.isImportant) && {\n        [`& .${chatMessageSlotClassNames.bar}`]: {\n          backgroundColor: v.hasMention ? v.hasMentionColor : v.isImportantColor,\n          position: 'absolute',\n          borderRadius: pxToRem(2),\n          height: pxToRem(20),\n          left: pxToRem(-56),\n          top: v.paddingCompact,\n          width: pxToRem(2),\n        },\n      }),\n\n      ':focus-visible': {\n        // Add focus border styles as they would be replaced otherwise\n        ...borderFocusStyles[':focus-visible'],\n        ...highlight,\n      },\n\n      '&:hover': highlight,\n    };\n  },\n\n  author: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    ...((p.attached === 'bottom' || p.attached === true) && (screenReaderContainerStyles as ICSSInJSStyle)),\n    color: p.mine ? v.authorColorMineCompact : v.contentColor,\n    float: 'left',\n    fontWeight: v.authorFontWeightCompact,\n    marginRight: v.authorMarginRightCompact,\n  }),\n\n  badge: ({ variables: v }): ICSSInJSStyle => ({\n    alignSelf: 'flex-start',\n    flexShrink: 0,\n    margin: `${pxToRem(-2)} ${pxToRem(-2)} ${pxToRem(-2)} ${v.compactSpacing}`,\n  }),\n\n  compactBody: (): ICSSInJSStyle => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    '& > div': {\n      minWidth: 0,\n    },\n  }),\n\n  reactionGroup: (): ICSSInJSStyle => ({\n    display: 'flex',\n    marginTop: pxToRem(4),\n  }),\n\n  timestamp: ({ variables: v }): ICSSInJSStyle => ({\n    alignSelf: 'flex-start',\n    flexShrink: 0,\n    marginLeft: v.compactSpacing,\n    marginTop: pxToRem(2),\n    opacity: 0,\n  }),\n};\n"],"file":"chatMessageStylesCompact.js"}