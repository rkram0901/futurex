{"version":3,"sources":["components/Chat/ChatMessage.tsx"],"names":["chatMessageBehavior","IS_FOCUSABLE_ATTRIBUTE","keyboardKey","menuAsToolbarBehavior","getElementType","useAccessibility","useAutoControlled","useContextSelector","useFluentContext","useStyles","useTelemetry","useUnhandledProps","useMergedRefs","Ref","customPropTypes","cx","PropTypes","React","childrenExist","commonPropTypes","createShorthand","createShorthandFactory","getOrGenerateIdFromShorthand","rtlTextContainer","getScrollParent","partitionPopperPropsFromShorthand","usePopper","Box","Flex","Label","Menu","PortalInner","Reaction","Text","useChatContextSelectors","ChatItemContext","ChatMessageDetails","ChatMessageHeader","ChatMessageReadStatus","chatMessageClassName","chatMessageSlotClassNames","actionMenu","author","badge","bar","compactBody","content","reactionGroup","timestamp","partitionActionMenuPropsFromShorthand","value","Array","isArray","inline","showActionMenu","props","ChatMessage","forwardRef","inputProps","ref","context","displayName","telemetry","setStart","setEnd","parentAttached","v","attached","chatProps","density","accessibility","behaviors","message","undefined","badgePosition","children","className","design","details","header","mine","positionActionMenu","reactionGroupPosition","readStatus","styles","overflow","unstable_overflow","variables","actionMenuOptions","positioningProps","inlineActionMenu","controlledShowActionMenu","defaultValue","setShowActionMenu","hasActionMenu","hasHeaderReactionGroup","actionMenuId","useRef","current","modifiers","useCallback","target","container","name","options","fallbackPlacements","boundary","popperRef","align","position","positionFixed","enabled","messageRef","targetRef","actionsMenuRef","containerRef","useState","focused","setFocused","getA11Props","actionHandlers","preventDefault","event","currentTarget","focus","stopPropagation","debugName","mapPropsToBehavior","rtl","mapPropsToStyles","hasBadge","mapPropsToInlineStyles","classes","resolvedStyles","handleFocus","e","updatePosition","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","handleMouseLeave","renderActionMenu","actionMenuElement","create","defaultProps","overrideProps","id","handleKeyDown","toFocusItemInActionMenu","querySelector","querySelectorAll","keyCode","Enter","Tab","isShift","shiftKey","focusableElementsInsideMessage","firstFocusableInsideMessage","lastFocusableInsideMessage","length","boundaryElementInsideMessage","childrenPropExists","rootClasses","root","ElementType","unhandledProps","handledProps","badgeElement","reactionGroupElement","Group","authorElement","size","timestampElement","messageContent","detailsElement","readStatusElement","elements","headerElement","bodyElement","element","unstable_wrapWithFocusZone","onBlur","onFocus","onMouseEnter","onMouseLeave","onKeyDown","getAttributes","forElements","propTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","bool","oneOf","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  chatMessageBehavior,\n  ChatMessageBehaviorProps,\n  IS_FOCUSABLE_ATTRIBUTE,\n  keyboardKey,\n  menuAsToolbarBehavior,\n} from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useAccessibility,\n  useAutoControlled,\n  useContextSelector,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useMergedRefs,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ComponentEventHandler,\n  ComponentKeyboardEventHandler,\n  FluentComponentStaticProps,\n  ObjectShorthandValue,\n  ShorthandCollection,\n  ShorthandValue,\n} from '../../types';\nimport {\n  ChildrenComponentProps,\n  childrenExist,\n  commonPropTypes,\n  ContentComponentProps,\n  createShorthand,\n  createShorthandFactory,\n  getOrGenerateIdFromShorthand,\n  rtlTextContainer,\n  UIComponentProps,\n} from '../../utils';\nimport {\n  getScrollParent,\n  partitionPopperPropsFromShorthand,\n  PopperModifiersFn,\n  PopperRefHandle,\n  PopperShorthandProps,\n  usePopper,\n} from '../../utils/positioner';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Flex } from '../Flex/Flex';\nimport { Label, LabelProps } from '../Label/Label';\nimport { Menu, MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { PortalInner } from '../Portal/PortalInner';\nimport { Reaction, ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { Text, TextProps } from '../Text/Text';\nimport { useChatContextSelectors } from './chatContext';\nimport { ChatDensity } from './chatDensity';\nimport { ChatItemContext } from './chatItemContext';\nimport { ChatMessageDetails, ChatMessageDetailsProps } from './ChatMessageDetails';\nimport { ChatMessageHeader, ChatMessageHeaderProps } from './ChatMessageHeader';\nimport { ChatMessageReadStatus, ChatMessageReadStatusProps } from './ChatMessageReadStatus';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  badge: string;\n  bar: string;\n  compactBody: string;\n  content: string;\n  reactionGroup: string;\n  timestamp: string;\n}\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /**\n   * Menu with actions of the message.\n   * popper: alters the action menu positioning.\n   * inline: whether the action menu should be rendered inline with the chat message, or in the body. It's true by default.\n   * showActionMenu: controls if the action menu is visible or not.\n   */\n  actionMenu?:\n    | ShorthandValue<MenuProps & { popper?: PopperShorthandProps; inline?: boolean; showActionMenu?: boolean }>\n    | ShorthandCollection<MenuItemProps & { inline?: boolean; showActionMenu?: boolean }>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /** A message can have a custom body. Only rendered in compact density. */\n  compactBody?: ShorthandValue<BoxProps>;\n\n  /** Chat density. Is automatically set by the Chat. */\n  density?: ChatDensity;\n\n  /** Message details info slot. Displayed in the header or body in comfy and compact density respectively. */\n  details?: ShorthandValue<ChatMessageDetailsProps>;\n\n  /** A message can have a custom header. */\n  header?: ShorthandValue<ChatMessageHeaderProps>;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called on chat message item key down.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user leaves by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons. */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Message read status indicator. */\n  readStatus?: ShorthandValue<ChatMessageReadStatusProps>;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'density' | 'mine'> & {\n  hasBadge: boolean;\n  hasHeaderReactionGroup: boolean;\n\n  // focused, hasActionMenu and showActionMenu controls the visibility of action menu\n  focused: boolean;\n  hasActionMenu: boolean;\n  showActionMenu: boolean;\n};\n\nexport const chatMessageClassName = 'ui-chat__message';\nexport const chatMessageSlotClassNames: ChatMessageSlotClassNames = {\n  actionMenu: `${chatMessageClassName}__actions`,\n  author: `${chatMessageClassName}__author`,\n  badge: `${chatMessageClassName}__badge`,\n  bar: `${chatMessageClassName}__bar`,\n  compactBody: `${chatMessageClassName}__compact-body`,\n  content: `${chatMessageClassName}__content`,\n  reactionGroup: `${chatMessageClassName}__reactions`,\n  timestamp: `${chatMessageClassName}__timestamp`,\n};\n\nfunction partitionActionMenuPropsFromShorthand<P>(\n  value: ShorthandValue<P & { inline?: boolean; showActionMenu?: boolean }>,\n): [ShorthandValue<P> | ObjectShorthandValue<P>, boolean | undefined, boolean | undefined] {\n  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n    const { inline, showActionMenu, ...props } = value as ObjectShorthandValue<P> & {\n      inline?: boolean;\n      showActionMenu?: boolean;\n    };\n\n    return [props as ObjectShorthandValue<P>, inline ?? true, showActionMenu];\n  }\n\n  return [value, true, false];\n}\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport const ChatMessage = (React.forwardRef<HTMLDivElement, ChatMessageProps>((inputProps, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const chatProps = useChatContextSelectors({\n    density: v => v.density,\n    accessibility: v => v.behaviors.message,\n  });\n\n  const props = {\n    ...inputProps,\n    density: inputProps.density === undefined ? chatProps.density : inputProps.density,\n    accessibility:\n      inputProps.accessibility === undefined\n        ? chatProps.accessibility || chatMessageBehavior\n        : inputProps.accessibility,\n  };\n  const {\n    accessibility,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    compactBody,\n    content,\n    density,\n    design,\n    details,\n    header,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    readStatus,\n    styles,\n    timestamp,\n    unstable_overflow: overflow,\n    variables,\n  } = props;\n\n  const [actionMenuOptions, positioningProps] = partitionPopperPropsFromShorthand(props.actionMenu);\n  const [actionMenu, inlineActionMenu, controlledShowActionMenu] = partitionActionMenuPropsFromShorthand(\n    actionMenuOptions,\n  );\n  const [showActionMenu, setShowActionMenu] = useAutoControlled<boolean>({\n    defaultValue: false,\n    value: controlledShowActionMenu,\n  });\n  const hasActionMenu = !_.isNil(actionMenu);\n  const hasHeaderReactionGroup = !!reactionGroup && reactionGroupPosition === 'start';\n\n  const actionMenuId = React.useRef<string>();\n  actionMenuId.current = getOrGenerateIdFromShorthand(`${chatMessageClassName}-`, actionMenu, actionMenuId.current);\n\n  const modifiers = React.useCallback<PopperModifiersFn>(\n    (target, container) => {\n      return (\n        positionActionMenu && [\n          // https://popper.js.org/docs/v2/modifiers/flip/\n          // Forces to flip only in \"top-*\" positions\n          { name: 'flip', options: { fallbackPlacements: ['top'] } },\n          overflow && {\n            name: 'preventOverflow',\n            options: { boundary: getScrollParent(container) },\n          },\n        ]\n      );\n    },\n    [positionActionMenu, overflow],\n  );\n\n  const popperRef = React.useRef<PopperRefHandle>();\n  const { targetRef: messageRef, containerRef: actionsMenuRef } = usePopper({\n    align: 'end',\n    position: 'above',\n    positionFixed: overflow,\n\n    enabled: hasActionMenu && positionActionMenu,\n    modifiers,\n\n    ...positioningProps,\n    popperRef: useMergedRefs(positioningProps?.popperRef, popperRef),\n  });\n\n  // `focused` state is used for show/hide actionMenu\n  const [focused, setFocused] = React.useState<boolean>(false);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        if (messageRef.current) {\n          messageRef.current.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n    debugName: ChatMessage.displayName,\n    mapPropsToBehavior: () => ({\n      hasActionMenu,\n      inlineActionMenu,\n      actionMenuId: actionMenuId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: chatMessageClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      density,\n      focused,\n      hasActionMenu,\n      hasBadge: !!badge,\n      hasHeaderReactionGroup,\n      mine,\n      showActionMenu,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n\n    // react onFocus is called even when nested component receives focus (i.e. it bubbles)\n    // so when focus moves within actionMenu, the `focus` state in chatMessage remains true, and keeps actionMenu visible\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    setShowActionMenu(false);\n\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    popperRef.current?.updatePosition();\n    if (hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(true);\n    }\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = (e: React.SyntheticEvent) => {\n    if (!focused && hasActionMenu && !inlineActionMenu) {\n      setShowActionMenu(false);\n    }\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: chatMessageSlotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n      overrideProps: {\n        id: actionMenuId.current,\n      },\n    });\n\n    const content = actionMenuElement ? <Ref innerRef={actionsMenuRef}>{actionMenuElement}</Ref> : actionMenuElement;\n\n    return inlineActionMenu || !content ? content : <PortalInner>{content}</PortalInner>;\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (hasActionMenu && !inlineActionMenu) {\n      // reference: https://github.com/microsoft/fluentui/pull/17329\n\n      const toFocusItemInActionMenu =\n        actionsMenuRef.current?.querySelector('[tabindex=\"0\"]') ??\n        actionsMenuRef.current?.querySelectorAll('[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])')[0];\n\n      if (e.keyCode === keyboardKey.Enter) {\n        toFocusItemInActionMenu?.focus();\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (e.keyCode === keyboardKey.Tab) {\n        // TAB/SHIFT+TAB cycles focus among actionMenu and focusable elements within chat message\n        const isShift = !!e.shiftKey;\n\n        const focusableElementsInsideMessage: NodeListOf<HTMLElement> = e.currentTarget.querySelectorAll(\n          '[tabindex=\"-1\"]:not([data-is-focusable=\"false\"])',\n        );\n        const firstFocusableInsideMessage = focusableElementsInsideMessage[0];\n        const lastFocusableInsideMessage = focusableElementsInsideMessage[focusableElementsInsideMessage.length - 1];\n\n        if (e.target === toFocusItemInActionMenu) {\n          // focus is now inside action menu\n          // cycle focus into the first/last focusable element inside chat message\n          if (isShift) {\n            lastFocusableInsideMessage?.focus();\n          } else {\n            firstFocusableInsideMessage?.focus();\n          }\n          e.stopPropagation();\n          e.preventDefault();\n        } else {\n          const boundaryElementInsideMessage = isShift ? firstFocusableInsideMessage : lastFocusableInsideMessage;\n          if (e.target === boundaryElementInsideMessage) {\n            // focus is now on the first/last focusable element inside chat message\n            toFocusItemInActionMenu.focus(); // cycle focus back into action Menu\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        }\n      }\n    }\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: density === 'comfy' ? 'small' : undefined,\n      styles: resolvedStyles.author,\n      className: chatMessageSlotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: chatMessageSlotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = Box.create(content, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n\n  const detailsElement = createShorthand(ChatMessageDetails, details, {\n    defaultProps: () => ({ attached, density, hasHeaderReactionGroup, mine }),\n  });\n\n  const readStatusElement = createShorthand(ChatMessageReadStatus, readStatus, {\n    defaultProps: () => ({ density }),\n  });\n\n  let elements = <></>;\n  if (density === 'compact') {\n    const headerElement = createShorthand(ChatMessageHeader, header);\n\n    const bodyElement = Box.create(compactBody || {}, {\n      defaultProps: () =>\n        getA11Props('compactBody', {\n          className: chatMessageSlotClassNames.compactBody,\n          styles: resolvedStyles.compactBody,\n        }),\n      overrideProps: () => ({\n        content: (\n          <>\n            <Flex.Item grow={1}>\n              <div>\n                {authorElement}\n                {messageContent}\n              </div>\n            </Flex.Item>\n            {timestampElement}\n            {detailsElement}\n            {badgeElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {headerElement}\n        {bodyElement}\n        {reactionGroupElement}\n        {readStatusElement}\n      </>\n    );\n  } else {\n    const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n      overrideProps: () => ({\n        content: (\n          <>\n            {authorElement}\n            {timestampElement}\n            {detailsElement}\n            {reactionGroupPosition === 'start' && reactionGroupElement}\n          </>\n        ),\n      }),\n    });\n\n    elements = (\n      <>\n        {actionMenuElement}\n        <div className={chatMessageSlotClassNames.bar} />\n        {badgePosition === 'start' && badgeElement}\n        {headerElement}\n        {messageContent}\n        {reactionGroupPosition === 'end' && reactionGroupElement}\n        {badgePosition === 'end' && badgeElement}\n        {readStatusElement}\n      </>\n    );\n  }\n\n  const element = (\n    <Ref innerRef={messageRef}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            onMouseLeave: handleMouseLeave,\n            onKeyDown: handleKeyDown,\n            ref,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? children : elements}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, ChatMessageProps> &\n  FluentComponentStaticProps<ChatMessageProps>;\n\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\n\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  compactBody: customPropTypes.itemShorthand,\n  density: PropTypes.oneOf<ChatDensity>(['comfy', 'compact']),\n  details: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  mine: PropTypes.bool,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  readStatus: customPropTypes.itemShorthand,\n  timestamp: customPropTypes.itemShorthand,\n  unstable_overflow: PropTypes.bool,\n};\n\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\n"],"file":"ChatMessage.js"}