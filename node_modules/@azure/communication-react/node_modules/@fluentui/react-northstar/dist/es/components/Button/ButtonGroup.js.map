{"version":3,"sources":["components/Button/ButtonGroup.tsx"],"names":["buttonGroupBehavior","customPropTypes","PropTypes","React","childrenExist","commonPropTypes","rtlTextContainer","createShorthandFactory","createShorthand","Button","getElementType","useAccessibility","useUnhandledProps","useTelemetry","useStyles","useFluentContext","buttonGroupClassName","ButtonGroup","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","children","buttons","circular","content","className","design","styles","variables","ElementType","unhandledProps","handledProps","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11yProps","accessibility","debugName","getStyleForButtonIndex","isFirst","isLast","resultStyles","firstButton","lastButton","middleButton","emptyButtons","element","root","getAttributes","forElements","button","idx","defaultProps","length","propTypes","createCommon","collectionShorthand","bool","Object","keys","create","Component","mappedProp","mappedArrayProp"],"mappings":";;AAAA,SAAkDA,mBAAlD,QAA6E,yBAA7E;AACA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAIA,SACEC,aADF,EAKEC,eALF,EAMEC,gBANF,EAOEC,sBAPF,EAQEC,eARF,QASO,aATP;AAUA,SAASC,MAAT,QAAoC,UAApC;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,iBAHF,EAIEC,YAJF,EAKEC,SALF,EAMEC,gBANF,QAQO,0BARP;AAyBA,OAAO,IAAMC,oBAAoB,GAAG,YAA7B;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,WAAN;AAAA,MAAMA,WAAW,gBAAId,KAAK,CAACe,UAAN,CAAmD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7F,QAAMC,OAAO,GAAGN,gBAAgB,EAAhC;;AACA,wBAA6BF,YAAY,CAACI,WAAW,CAACK,WAAb,EAA0BD,OAAO,CAACE,SAAlC,CAAzC;AAAA,QAAQC,QAAR,iBAAQA,QAAR;AAAA,QAAkBC,MAAlB,iBAAkBA,MAAlB;;AACAD,IAAAA,QAAQ;AACR,QAAQE,QAAR,GAAuFP,KAAvF,CAAQO,QAAR;AAAA,QAAkBC,OAAlB,GAAuFR,KAAvF,CAAkBQ,OAAlB;AAAA,QAA2BC,QAA3B,GAAuFT,KAAvF,CAA2BS,QAA3B;AAAA,QAAqCC,OAArC,GAAuFV,KAAvF,CAAqCU,OAArC;AAAA,QAA8CC,SAA9C,GAAuFX,KAAvF,CAA8CW,SAA9C;AAAA,QAAyDC,MAAzD,GAAuFZ,KAAvF,CAAyDY,MAAzD;AAAA,QAAiEC,MAAjE,GAAuFb,KAAvF,CAAiEa,MAAjE;AAAA,QAAyEC,SAAzE,GAAuFd,KAAvF,CAAyEc,SAAzE;AACA,QAAMC,WAAW,GAAGxB,cAAc,CAACS,KAAD,CAAlC;AACA,QAAMgB,cAAc,GAAGvB,iBAAiB,CAACK,WAAW,CAACmB,YAAb,EAA2BjB,KAA3B,CAAxC;;AACA,qBAA4CL,SAAS,CAAyBG,WAAW,CAACK,WAArC,EAAkD;AACrGQ,MAAAA,SAAS,EAAEd,oBAD0F;AAErGqB,MAAAA,gBAAgB,EAAE;AAAA,eAAO;AACvBT,UAAAA,QAAQ,EAARA;AADuB,SAAP;AAAA,OAFmF;AAKrGU,MAAAA,sBAAsB,EAAE;AAAA,eAAO;AAC7BR,UAAAA,SAAS,EAATA,SAD6B;AAE7BC,UAAAA,MAAM,EAANA,MAF6B;AAG7BC,UAAAA,MAAM,EAANA,MAH6B;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAAA,OAL6E;AAWrGM,MAAAA,GAAG,EAAElB,OAAO,CAACkB;AAXwF,KAAlD,CAArD;AAAA,QAAQC,OAAR,cAAQA,OAAR;AAAA,QAAyBC,cAAzB,cAAiBT,MAAjB;;AAcA,QAAMU,YAAY,GAAG/B,gBAAgB,CAA2BQ,KAAK,CAACwB,aAAjC,EAAgD;AACnFC,MAAAA,SAAS,EAAE3B,WAAW,CAACK,WAD4D;AAEnFiB,MAAAA,GAAG,EAAElB,OAAO,CAACkB;AAFsE,KAAhD,CAArC;;AAKA,QAAMM,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACb,MAAD,EAASc,OAAT,EAAkBC,MAAlB,EAA6B;AAC1D,UAAIC,YAAY,GAAG,EAAnB;;AACA,UAAIF,OAAJ,EAAa;AACXE,QAAAA,YAAY,GAAGhB,MAAM,CAACiB,WAAtB;AACD;;AACD,UAAIF,MAAJ,EAAY;AACVC,QAAAA,YAAY,qBAAQA,YAAR,EAAyBhB,MAAM,CAACkB,UAAhC,CAAZ;AACD;;AACD,UAAI,CAACJ,OAAD,IAAY,CAACC,MAAjB,EAAyB;AACvBC,QAAAA,YAAY,GAAGhB,MAAM,CAACmB,YAAtB;AACD;;AACD,aAAOH,YAAP;AACD,KAZD;;AAcA,QAAMI,YAAY,GAAG,OAAQzB,OAAR,CAArB;;AAEA,QAAM0B,OAAO,gBACX,oBAAC,WAAD,oBAEOX,YAAY,CAAC,MAAD;AACbZ,MAAAA,SAAS,EAAEU,OAAO,CAACc,IADN;AAEblC,MAAAA,GAAG,EAAHA;AAFa,OAGVe,cAHU,EAFnB,EAOQiB,YAAY,sBAAS9C,gBAAgB,CAACiD,aAAjB,CAA+B;AAAEC,MAAAA,WAAW,EAAE,CAAC9B,QAAD,EAAWG,OAAX;AAAf,KAA/B,CAAT,CAPpB,GAUGuB,YAAY,GACThD,aAAa,CAACsB,QAAD,CAAb,GACEA,QADF,GAEEG,OAHO,GAIT,KAAMF,OAAN,EAAe,UAAC8B,MAAD,EAASC,GAAT;AAAA,aACblD,eAAe,CAACC,MAAD,EAASgD,MAAT,EAAiB;AAC9BE,QAAAA,YAAY,EAAE;AAAA,iBAAO;AACnB/B,YAAAA,QAAQ,EAARA,QADmB;AAEnBI,YAAAA,MAAM,EAAEa,sBAAsB,CAACJ,cAAD,EAAiBiB,GAAG,KAAK,CAAzB,EAA4BA,GAAG,KAAK/B,OAAO,CAACiC,MAAR,GAAiB,CAArD;AAFX,WAAP;AAAA;AADgB,OAAjB,CADF;AAAA,KAAf,CAdN,CADF;AA0BAnC,IAAAA,MAAM;AAEN,WAAO4B,OAAP;AACD,GAvE2B,CAArB;AA0EPpC,EAAAA,WAAW,CAACK,WAAZ,GAA0B,aAA1B;AAEAL,EAAAA,WAAW,CAAC4C,SAAZ,qBACKxD,eAAe,CAACyD,YAAhB,EADL;AAEEnC,IAAAA,OAAO,EAAE1B,eAAe,CAAC8D,mBAF3B;AAGEnC,IAAAA,QAAQ,EAAE1B,SAAS,CAAC8D;AAHtB;AAMA/C,EAAAA,WAAW,CAAC0C,YAAZ,GAA2B;AACzBhB,IAAAA,aAAa,EAAE3C;AADU,GAA3B;AAIAiB,EAAAA,WAAW,CAACmB,YAAZ,GAA2B6B,MAAM,CAACC,IAAP,CAAYjD,WAAW,CAAC4C,SAAxB,CAA3B;AAEA5C,EAAAA,WAAW,CAACkD,MAAZ,GAAqB5D,sBAAsB,CAAC;AAC1C6D,IAAAA,SAAS,EAAEnD,WAD+B;AAE1CoD,IAAAA,UAAU,EAAE,SAF8B;AAG1CC,IAAAA,eAAe,EAAE;AAHyB,GAAD,CAA3C;AAxFO,SAAMrD,WAAN;AAAA","sourcesContent":["import { Accessibility, ButtonGroupBehaviorProps, buttonGroupBehavior } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport { ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n  createShorthand,\n} from '../../utils';\nimport { Button, ButtonProps } from './Button';\nimport {\n  getElementType,\n  useAccessibility,\n  useUnhandledProps,\n  useTelemetry,\n  useStyles,\n  useFluentContext,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface ButtonGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ButtonGroupBehaviorProps>;\n\n  /** The buttons contained inside the ButtonGroup. */\n  buttons?: ShorthandCollection<ButtonProps>;\n\n  /** The buttons inside group can appear circular. */\n  circular?: boolean;\n}\n\nexport type ButtonGroupStylesProps = Required<Pick<ButtonGroupProps, 'circular'>>;\n\nexport const buttonGroupClassName = 'ui-buttons';\n\n/**\n * A ButtonGroup represents multiple related actions as a group.\n */\nexport const ButtonGroup = (React.forwardRef<HTMLDivElement, ButtonGroupProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ButtonGroup.displayName, context.telemetry);\n  setStart();\n  const { children, buttons, circular, content, className, design, styles, variables } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ButtonGroup.handledProps, props);\n  const { classes, styles: resolvedStyles } = useStyles<ButtonGroupStylesProps>(ButtonGroup.displayName, {\n    className: buttonGroupClassName,\n    mapPropsToStyles: () => ({\n      circular,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<ButtonGroupBehaviorProps>(props.accessibility, {\n    debugName: ButtonGroup.displayName,\n    rtl: context.rtl,\n  });\n\n  const getStyleForButtonIndex = (styles, isFirst, isLast) => {\n    let resultStyles = {};\n    if (isFirst) {\n      resultStyles = styles.firstButton;\n    }\n    if (isLast) {\n      resultStyles = { ...resultStyles, ...styles.lastButton };\n    }\n    if (!isFirst && !isLast) {\n      resultStyles = styles.middleButton;\n    }\n    return resultStyles;\n  };\n\n  const emptyButtons = _.isNil(buttons);\n\n  const element = (\n    <ElementType\n      {...{\n        ...getA11yProps('root', {\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        }),\n        ...(emptyButtons && { ...rtlTextContainer.getAttributes({ forElements: [children, content] }) }),\n      }}\n    >\n      {emptyButtons\n        ? childrenExist(children)\n          ? children\n          : content\n        : _.map(buttons, (button, idx) =>\n            createShorthand(Button, button, {\n              defaultProps: () => ({\n                circular,\n                styles: getStyleForButtonIndex(resolvedStyles, idx === 0, idx === buttons.length - 1),\n              }),\n            }),\n          )}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, ButtonGroupProps> &\n  FluentComponentStaticProps<ButtonGroupProps>;\n\nButtonGroup.displayName = 'ButtonGroup';\n\nButtonGroup.propTypes = {\n  ...commonPropTypes.createCommon(),\n  buttons: customPropTypes.collectionShorthand,\n  circular: PropTypes.bool,\n};\n\nButtonGroup.defaultProps = {\n  accessibility: buttonGroupBehavior,\n};\n\nButtonGroup.handledProps = Object.keys(ButtonGroup.propTypes) as any;\n\nButtonGroup.create = createShorthandFactory({\n  Component: ButtonGroup,\n  mappedProp: 'content',\n  mappedArrayProp: 'buttons',\n});\n"],"file":"ButtonGroup.js"}