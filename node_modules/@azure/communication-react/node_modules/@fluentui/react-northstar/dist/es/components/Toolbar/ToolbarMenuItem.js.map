{"version":3,"sources":["components/Toolbar/ToolbarMenuItem.tsx"],"names":["toolbarMenuItemBehavior","indicatorBehavior","React","cx","PropTypes","EventListener","Ref","customPropTypes","compose","focusAsync","mergeVariablesOverrides","useTelemetry","useStyles","useAutoControlled","useFluentContext","getElementType","useUnhandledProps","useAccessibility","useContextSelectors","Unstable_NestingAuto","createShorthand","commonPropTypes","childrenExist","doesNodeContainClick","partitionPopperPropsFromShorthand","Popper","Box","Popup","ToolbarMenu","ToolbarMenuItemIcon","ToolbarVariablesContext","ToolbarVariablesProvider","ToolbarMenuItemSubmenuIndicator","ToolbarMenuItemActiveIndicator","ToolbarMenuContext","ToolbarMenuItemContent","ChevronEndIcon","toolbarMenuItemClassName","toolbarMenuItemSlotClassNames","wrapper","submenu","ToolbarMenuItem","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","active","activeIndicator","children","content","disabled","disabledFocusable","submenuIndicator","icon","popup","inSubmenu","className","design","styles","variables","menu","menuPositioningProps","defaultValue","defaultMenuOpen","value","menuOpen","initialValue","setMenuOpen","itemRef","useRef","menuRef","menuSlot","v","slots","parentVariables","useContext","mergedVariables","ElementType","slotProps","resolveSlotProps","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","hasMenu","actionHandlers","performClick","event","preventDefault","handleClick","openMenu","closeAllMenusAndFocusNextParentItem","closeAllMenus","closeMenu","closeMenuAndFocusTrigger","doNotNavigateNextParentItem","stopPropagation","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unstable_props","classes","resolvedStyles","e","trySetMenuOpen","isSubmenuOpen","current","newValue","onStateChanged","outsideClickHandler","getRefs","isItemClick","target","isNestedClick","childRef","isInside","handleMenuOverrides","predefinedProps","onItemClick","itemProps","element","root","onClick","defaultProps","hasChildren","popupElement","onOpenChange","overrideProps","trigger","undefined","menuItemInner","maybeSubmenu","nestingRef","node","wrapperElement","create","trapFocus","shorthandConfig","mappedProp","propTypes","createCommon","bool","shorthandAllowingChildren","index","number","oneOfType","itemShorthand","collectionShorthand","func","onMenuOpenChange","shape","never","string","as"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuItemBehavior,\n  ToolbarMenuItemBehaviorProps,\n  indicatorBehavior,\n} from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport * as PropTypes from 'prop-types';\n\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  compose,\n  focusAsync,\n  mergeVariablesOverrides,\n  useTelemetry,\n  useStyles,\n  useAutoControlled,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useContextSelectors,\n} from '@fluentui/react-bindings';\n\nimport { GetRefs, NodeRef, Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\n\nimport {\n  createShorthand,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  UIComponentProps,\n  childrenExist,\n  doesNodeContainClick,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection } from '../../types';\nimport { partitionPopperPropsFromShorthand, Popper, PopperShorthandProps } from '../../utils/positioner';\n\nimport { Box, BoxProps } from '../Box/Box';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { ToolbarMenu, ToolbarMenuProps, ToolbarMenuItemShorthandKinds } from './ToolbarMenu';\nimport { ToolbarMenuItemIcon, ToolbarMenuItemIconProps } from './ToolbarMenuItemIcon';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarMenuItemSubmenuIndicator } from './ToolbarMenuItemSubmenuIndicator';\nimport { ToolbarMenuItemActiveIndicator } from './ToolbarMenuItemActiveIndicator';\nimport { ToolbarItemSubscribedValue, ToolbarMenuContext } from './toolbarMenuContext';\nimport { ToolbarMenuItemContent } from './ToolbarMenuItemContent';\nimport { ChevronEndIcon } from '@fluentui/react-icons-northstar';\n\nexport interface ToolbarMenuItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuItemBehaviorProps>;\n\n  /** A toolbar item can be active. */\n  active?: boolean;\n\n  /** A slot for a selected indicator in the dropdown list. */\n  activeIndicator?: ShorthandValue<BoxProps>;\n\n  /** A toolbar item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** A toolbar item can be disabled and focusable at the same time. */\n  disabledFocusable?: boolean;\n\n  /** Name or shorthand for Toolbar Item Icon */\n  icon?: ShorthandValue<ToolbarMenuItemIconProps>;\n\n  /** ToolbarMenuItem index inside ToolbarMenu. */\n  index?: number;\n\n  /** Shorthand for the submenu indicator. */\n  submenuIndicator?: ShorthandValue<BoxProps>;\n\n  /** Indicates whether the menu item is part of submenu. */\n  inSubmenu?: boolean;\n\n  /** Shorthand for the submenu. */\n  menu?:\n    | ShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<ToolbarMenuItemProps, ToolbarMenuItemShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /** Default menu open */\n  defaultMenuOpen?: boolean;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /**\n   * Called when the menu inside the item opens or closes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `menuOpen` reflecting the new state.\n   */\n  onMenuOpenChange?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /**\n   * Attaches a `Popup` component to the ToolbarMenuItem.\n   * Accepts all props as a `Popup`, except `trigger` and `children`.\n   * Traps focus by default.\n   * @see PopupProps\n   */\n  popup?: Omit<PopupProps, 'trigger' | 'children'> | string;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuItemStylesProps = Pick<ToolbarMenuItemProps, 'disabled' | 'disabledFocusable'> & {\n  hasContent: boolean;\n};\n\nexport interface ToolbarMenuItemSlotClassNames {\n  wrapper: string;\n  submenu: string;\n}\n\nexport const toolbarMenuItemClassName = 'ui-toolbar__menuitem';\nexport const toolbarMenuItemSlotClassNames: ToolbarMenuItemSlotClassNames = {\n  wrapper: `${toolbarMenuItemClassName}__wrapper`,\n  submenu: `${toolbarMenuItemClassName}__submenu`,\n};\n\n/**\n * A ToolbarMenuItem renders ToolbarMenu item as button.\n */\nexport const ToolbarMenuItem = compose<'button', ToolbarMenuItemProps, ToolbarMenuItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      active,\n      activeIndicator,\n      children,\n      content,\n      disabled,\n      disabledFocusable,\n      submenuIndicator,\n      icon,\n      popup,\n      wrapper,\n      inSubmenu,\n      className,\n      design,\n      styles,\n      variables,\n    } = props;\n    const [menu, menuPositioningProps] = partitionPopperPropsFromShorthand(props.menu);\n\n    const [menuOpen, setMenuOpen] = useAutoControlled({\n      defaultValue: props.defaultMenuOpen,\n      value: props.menuOpen,\n      initialValue: false,\n    });\n\n    const itemRef = React.useRef<HTMLElement>();\n    const menuRef = React.useRef<HTMLElement>();\n\n    const { menuSlot } = (useContextSelectors(ToolbarMenuContext, {\n      menuSlot: v => v.slots.menu,\n    }) as unknown) as ToolbarItemSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarMenuItemProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const getA11yProps = useAccessibility(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: () => ({\n        hasMenu: !!menu,\n        active,\n        menuOpen,\n        disabled,\n        disabledFocusable,\n        'aria-label': props['aria-label'],\n        'aria-labelledby': props['aria-labelledby'],\n        'aria-describedby': props['aria-describedby'],\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n        openMenu: event => openMenu(event),\n        closeAllMenusAndFocusNextParentItem: event => closeAllMenus(event),\n        closeMenu: event => closeMenu(event),\n        closeMenuAndFocusTrigger: event => closeMenu(event),\n        doNotNavigateNextParentItem: event => {\n          event.stopPropagation();\n        },\n        closeAllMenus: event => closeAllMenus(event),\n      },\n      rtl: context.rtl,\n    });\n\n    const { classes, styles: resolvedStyles } = useStyles<ToolbarMenuItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        disabled,\n        disabledFocusable,\n        hasContent: !!content,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const openMenu = (e: React.KeyboardEvent) => {\n      if (menu && !menuOpen) {\n        trySetMenuOpen(true, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    const closeMenu = (e: React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n\n      trySetMenuOpen(false, e, () => {\n        focusAsync(itemRef.current);\n      });\n\n      e.stopPropagation();\n    };\n\n    const closeAllMenus = (e: React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n      trySetMenuOpen(false, e, () => {\n        if (!inSubmenu) {\n          focusAsync(itemRef.current);\n        }\n      });\n\n      // avoid spacebar scrolling the page\n      if (!inSubmenu) {\n        e.preventDefault();\n      }\n    };\n\n    const isSubmenuOpen = (): boolean => {\n      return !!(menu && menuOpen);\n    };\n\n    const trySetMenuOpen = (newValue: boolean, e: Event | React.SyntheticEvent, onStateChanged?: any) => {\n      setMenuOpen(newValue);\n      // The reason why post-effect is not passed as callback to trySetState method\n      // is that in 'controlled' mode the post-effect is applied before final re-rendering\n      // which cause a broken behavior: for e.g. when it is needed to focus submenu trigger on ESC.\n      // TODO: all DOM post-effects should be applied at componentDidMount & componentDidUpdated stages.\n      onStateChanged && onStateChanged();\n      _.invoke(props, 'onMenuOpenChange', e, {\n        ...props,\n        menuOpen: newValue,\n      });\n    };\n\n    const outsideClickHandler = (getRefs: GetRefs) => (e: MouseEvent) => {\n      const isItemClick = doesNodeContainClick(itemRef.current, e, context.target);\n      const isNestedClick = _.some(getRefs(), (childRef: NodeRef) => {\n        return doesNodeContainClick(childRef.current as HTMLElement, e, context.target);\n      });\n      const isInside = isItemClick || isNestedClick;\n\n      if (!isInside) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const handleMenuOverrides = (predefinedProps: ToolbarMenuProps) => ({\n      onItemClick: (e, itemProps: ToolbarMenuItemProps) => {\n        const { popup, menuOpen } = itemProps;\n        _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n        if (popup) {\n          return;\n        }\n\n        trySetMenuOpen(menuOpen, e);\n        if (!menuOpen) {\n          _.invoke(itemRef.current, 'focus');\n        }\n      },\n    });\n\n    const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (menu) {\n        // the menuItem element was clicked => toggle the open/close and stop propagation\n        trySetMenuOpen(!menuOpen, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (popup) {\n        e.stopPropagation();\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          disabled,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? (\n          children\n        ) : (\n          <>\n            {createShorthand(composeOptions.slots.icon, icon, { defaultProps: () => slotProps.icon })}\n            {createShorthand(composeOptions.slots.content, content, {\n              defaultProps: () => getA11yProps('content', slotProps.content),\n            })}\n            {active &&\n              createShorthand(composeOptions.slots.activeIndicator, activeIndicator, {\n                defaultProps: () => slotProps.activeIndicator,\n              })}\n            {menu &&\n              createShorthand(composeOptions.slots.submenuIndicator, submenuIndicator, {\n                defaultProps: () => slotProps.submenuIndicator,\n              })}\n          </>\n        )}\n      </ElementType>\n    );\n\n    const hasChildren = childrenExist(children);\n\n    if (popup && !hasChildren) {\n      const popupElement = createShorthand(composeOptions.slots.popup, popup, {\n        defaultProps: () => ({\n          ...slotProps.popup,\n          onOpenChange: e => {\n            e.stopPropagation();\n          },\n        }),\n        overrideProps: {\n          trigger: element,\n          children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger`\n        },\n      });\n      setEnd();\n\n      return popupElement;\n    }\n\n    const menuItemInner = hasChildren ? (children as React.ReactElement) : <Ref innerRef={itemRef}>{element}</Ref>;\n\n    const maybeSubmenu =\n      menu && menuOpen ? (\n        <Unstable_NestingAuto>\n          {(getRefs, nestingRef) => {\n            return (\n              <>\n                <Ref\n                  innerRef={(node: HTMLElement) => {\n                    nestingRef.current = node;\n                    menuRef.current = node;\n                  }}\n                >\n                  <Popper\n                    align=\"top\"\n                    position={context.rtl ? 'before' : 'after'}\n                    targetRef={itemRef}\n                    {...menuPositioningProps}\n                  >\n                    <ToolbarVariablesProvider value={mergedVariables}>\n                      {createShorthand(composeOptions.slots.menu || menuSlot || ToolbarMenu, menu, {\n                        defaultProps: () => ({\n                          className: toolbarMenuItemSlotClassNames.submenu,\n                          styles: resolvedStyles.menu,\n                          submenu: true,\n                          submenuIndicator,\n                          ...slotProps.menu,\n                        }),\n                        overrideProps: handleMenuOverrides,\n                      })}\n                    </ToolbarVariablesProvider>\n                  </Popper>\n                </Ref>\n                <EventListener listener={outsideClickHandler(getRefs)} target={context.target} type=\"click\" />\n              </>\n            );\n          }}\n        </Unstable_NestingAuto>\n      ) : null;\n\n    if (!wrapper) {\n      setEnd();\n      return menuItemInner;\n    }\n\n    const wrapperElement = Box.create(wrapper, {\n      defaultProps: () =>\n        getA11yProps('wrapper', {\n          className: cx(toolbarMenuItemSlotClassNames.wrapper, classes.wrapper),\n        }),\n      overrideProps: () => ({\n        children: (\n          <>\n            {menuItemInner}\n            {maybeSubmenu}\n          </>\n        ),\n      }),\n    });\n    setEnd();\n\n    return wrapperElement;\n  },\n  {\n    className: toolbarMenuItemClassName,\n    displayName: 'ToolbarMenuItem',\n\n    slots: {\n      icon: ToolbarMenuItemIcon,\n      submenuIndicator: ToolbarMenuItemSubmenuIndicator,\n      activeIndicator: ToolbarMenuItemActiveIndicator,\n      popup: Popup,\n      content: ToolbarMenuItemContent,\n    },\n    slotProps: props => ({\n      icon: {\n        hasContent: !!props.content,\n      },\n      submenuIndicator: {\n        accessibility: indicatorBehavior,\n      },\n      activeIndicator: {\n        accessibility: indicatorBehavior,\n      },\n      popup: {\n        trapFocus: true,\n      },\n      content: {},\n    }),\n\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n      'disabledFocusable',\n      'active',\n      'activeIndicator',\n      'defaultMenuOpen',\n      'disabled',\n      'icon',\n      'index',\n      'submenuIndicator',\n      'inSubmenu',\n      'menu',\n      'menuOpen',\n      'onClick',\n      'onMenuOpenChange',\n      'popup',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarMenuItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  activeIndicator: customPropTypes.shorthandAllowingChildren,\n  defaultMenuOpen: PropTypes.bool,\n  disabled: PropTypes.bool,\n  disabledFocusable: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  index: PropTypes.number,\n  submenuIndicator: customPropTypes.shorthandAllowingChildren,\n  inSubmenu: PropTypes.bool,\n  menu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  menuOpen: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMenuOpenChange: PropTypes.func,\n  popup: PropTypes.oneOfType([\n    PropTypes.shape({\n      ...Popup.propTypes,\n      trigger: customPropTypes.never,\n      children: customPropTypes.never,\n    }),\n    PropTypes.string,\n  ]),\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuItem.defaultProps = {\n  as: 'button',\n  accessibility: toolbarMenuItemBehavior,\n  activeIndicator: {},\n  submenuIndicator: <ChevronEndIcon outline />,\n  wrapper: { as: 'li' },\n};\n"],"file":"ToolbarMenuItem.js"}