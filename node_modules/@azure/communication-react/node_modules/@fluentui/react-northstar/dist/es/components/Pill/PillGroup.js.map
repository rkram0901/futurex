{"version":3,"sources":["components/Pill/PillGroup.tsx"],"names":["React","PillGroupBehavior","getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","commonPropTypes","rtlTextContainer","PillsContextProvider","pillGroupClassName","PillGroup","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","design","styles","variables","getA11Props","debugName","rtl","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","pillBehavior","unstable_behaviorDefinition","childBehaviors","pill","childProps","useMemo","element","unstable_wrapWithFocusZone","root","getAttributes","forElements","propTypes","createCommon","defaultProps","Object","keys","shorthandConfig","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Accessibility, PillGroupBehavior, PillGroupBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { PillsContextProvider, PillsContextValue } from './pillContext';\n\nexport interface PillGroupProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<PillGroupBehaviorProps>;\n}\n\nexport type PillGroupStylesProps = never;\nexport const pillGroupClassName = 'ui-pills';\n\n/**\n * A PillGroup can be used as container for Pill.\n */\nexport const PillGroup = (React.forwardRef<HTMLDivElement, PillGroupProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PillGroup.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, design, styles, variables } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillGroup.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillGroupStylesProps>(PillGroup.displayName, {\n    className: pillGroupClassName,\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillGroup.handledProps, props);\n  const pillBehavior = getA11Props.unstable_behaviorDefinition().childBehaviors?.pill;\n\n  const childProps: PillsContextValue = React.useMemo(\n    () => ({\n      pillBehavior,\n    }),\n    [pillBehavior],\n  );\n\n  const element = getA11Props.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      <PillsContextProvider value={childProps}>{children}</PillsContextProvider>\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, PillGroupProps> & FluentComponentStaticProps<PillGroupProps>;\n\nPillGroup.displayName = 'PillGroup';\n\nPillGroup.propTypes = commonPropTypes.createCommon();\n\nPillGroup.defaultProps = {\n  accessibility: PillGroupBehavior,\n};\n\nPillGroup.handledProps = Object.keys(PillGroup.propTypes) as any;\n\nPillGroup.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"PillGroup.js"}