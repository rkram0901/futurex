import { Accessibility, TableCellBehaviorProps } from '@fluentui/accessibility';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import { ChildrenComponentProps, ContentComponentProps, UIComponentProps } from '../../utils';
import { BoxProps } from '../Box/Box';
import { ShorthandValue, FluentComponentStaticProps } from '../../types';
export interface TableCellProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {
    /**
     * Accessibility behavior if overridden by the user.
     * @available TableCellBehavior
     * */
    accessibility?: Accessibility<TableCellBehaviorProps>;
    /**
     * Truncate cell's content
     */
    truncateContent?: boolean;
}
export declare type TableCellStylesProps = Pick<TableCellProps, 'truncateContent'>;
export interface TableCellSlotClassNames {
    content: string;
}
export declare const tableCellClassName = "ui-table__cell";
export declare const tableCellSlotClassNames: TableCellSlotClassNames;
/**
 * Component represents a table cell.
 */
export declare const TableCell: (<TExtendedElementType extends React.ElementType<any> = "div">(props: React.RefAttributes<HTMLDivElement> & Omit<import("@fluentui/react-bindings").PropsOfElement<TExtendedElementType>, "as" | keyof TableCellProps> & {
    as?: TExtendedElementType;
} & TableCellProps) => JSX.Element) & {
    propTypes?: React.WeakValidationMap<TableCellProps> & {
        as: React.Requireable<string | ((props: any, context?: any) => any) | (new (props: any, context?: any) => any)>;
    };
    contextTypes?: PropTypes.ValidationMap<any>;
    defaultProps?: Partial<TableCellProps & {
        as: "div";
    }>;
    displayName?: string;
    readonly __PRIVATE_PROPS?: React.RefAttributes<HTMLDivElement> & Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & {
        ref?: React.Ref<HTMLDivElement>;
    }, "as" | keyof TableCellProps> & {
        as?: "div";
    } & TableCellProps;
} & FluentComponentStaticProps<TableCellProps>;
