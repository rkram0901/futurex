{"version":3,"sources":["components/Carousel/CarouselPaddle.tsx"],"names":["buttonBehavior","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getElementType","useFluentContext","useAccessibility","useStyles","useTelemetry","useUnhandledProps","Box","carouselPaddleClassName","carouselPaddleSlotClassNames","content","CarouselPaddle","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","as","children","className","disabled","design","hidden","next","previous","styles","variables","disableClickableNav","hasChildren","getA11Props","debugName","mapPropsToBehavior","String","actionHandlers","performClick","event","preventDefault","handleClick","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","unhandledProps","handledProps","ElementType","e","result","getAttributes","forElements","onClick","root","create","defaultProps","propTypes","createCommon","bool","func","every","disallow","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport {\n  getElementType,\n  useFluentContext,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport { Box, BoxProps } from '../Box/Box';\n\nexport interface CarouselPaddleProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A paddle can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** Indicates whether the paddle should be hidden. */\n  hidden?: boolean;\n\n  /**\n   * Called after a user clicks the paddle.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselPaddleProps>;\n\n  /** A paddle can indicate that it slides to the next item. */\n  next?: boolean;\n\n  /** A paddle can indicate that it slides to the previous item. */\n  previous?: boolean;\n\n  /** A navigation may be clickable */\n  disableClickableNav?: boolean;\n}\n\nexport type CarouselPaddleSlotClassNames = {\n  content: string;\n};\n\nexport type CarouselPaddleStylesProps = Pick<\n  CarouselPaddleProps,\n  'disabled' | 'next' | 'previous' | 'hidden' | 'disableClickableNav'\n>;\nexport const carouselPaddleClassName = 'ui-carousel__paddle';\nexport const carouselPaddleSlotClassNames: CarouselPaddleSlotClassNames = {\n  content: `${carouselPaddleClassName}__content`,\n};\n\n/**\n * A CarouselPaddle allows users to customize the paddles inside the Carousel component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport const CarouselPaddle = (React.forwardRef<HTMLButtonElement, CarouselPaddleProps & { as: React.ReactNode }>(\n  (props, ref) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(CarouselPaddle.displayName, context.telemetry);\n    setStart();\n\n    const {\n      accessibility,\n      as,\n      children,\n      className,\n      content,\n      disabled,\n      design,\n      hidden,\n      next,\n      previous,\n      styles,\n      variables,\n      disableClickableNav,\n    } = props;\n\n    const hasChildren = childrenExist(children);\n\n    const getA11Props = useAccessibility(accessibility, {\n      debugName: CarouselPaddle.displayName,\n      mapPropsToBehavior: () => ({\n        as: String(as),\n        disabled,\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n      },\n      rtl: context.rtl,\n    });\n    const { classes, styles: resolvedStyles } = useStyles<CarouselPaddleStylesProps>(CarouselPaddle.displayName, {\n      className: carouselPaddleClassName,\n      mapPropsToStyles: () => ({\n        disabled,\n        hidden,\n        next,\n        previous,\n        disableClickableNav,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    });\n\n    const unhandledProps = useUnhandledProps(CarouselPaddle.handledProps, props);\n    const ElementType = getElementType(props);\n\n    const handleClick = (e: React.SyntheticEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const result = (\n      <ElementType\n        {...rtlTextContainer.getAttributes({ forElements: [children] })}\n        {...getA11Props('root', {\n          onClick: handleClick,\n          disabled,\n          className: classes.root,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {hasChildren\n          ? children\n          : Box.create(content, {\n              defaultProps: () =>\n                getA11Props('content', {\n                  as: 'span',\n                  className: carouselPaddleSlotClassNames.content,\n                  styles: resolvedStyles.content,\n                }),\n            })}\n      </ElementType>\n    );\n\n    setEnd();\n\n    return result;\n  },\n) as unknown) as ForwardRefWithAs<'button', HTMLButtonElement, CarouselPaddleProps> &\n  FluentComponentStaticProps<CarouselPaddleProps>;\n\nCarouselPaddle.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  content: {},\n};\n\nCarouselPaddle.displayName = 'CarouselPaddle';\n\nCarouselPaddle.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  hidden: PropTypes.bool,\n  onClick: PropTypes.func,\n  next: customPropTypes.every([customPropTypes.disallow(['previous']), PropTypes.bool]),\n  previous: customPropTypes.every([customPropTypes.disallow(['next']), PropTypes.bool]),\n  disableClickableNav: PropTypes.bool,\n};\n\nCarouselPaddle.handledProps = Object.keys(CarouselPaddle.propTypes) as any;\n\nCarouselPaddle.create = createShorthandFactory({ Component: CarouselPaddle, mappedProp: 'content' });\n"],"file":"CarouselPaddle.js"}