{"version":3,"sources":["components/Dropdown/DropdownSelectedItem.tsx"],"names":["dropdownSelectedItemBehavior","getCode","keyboardKey","Ref","customPropTypes","React","PropTypes","CloseIcon","createShorthandFactory","commonPropTypes","Image","Box","useUnhandledProps","useStyles","useFluentContext","useTelemetry","getElementType","useAccessibility","dropdownSelectedItemClassName","dropdownSelectedItemSlotClassNames","header","icon","image","DropdownSelectedItem","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","active","className","design","styles","variables","itemRef","useRef","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","rtl","useEffect","current","focus","mapPropsToStyles","hasImage","mapPropsToInlineStyles","classes","resolvedStyles","handleClick","e","handleKeyDown","handleIconOverrides","iconProps","onClick","stopPropagation","onKeyDown","Enter","headerElement","create","defaultProps","as","iconElement","overrideProps","imageElement","avatar","element","root","propTypes","createCommon","children","bool","itemShorthand","shorthandAllowingChildren","itemShorthandWithoutJSX","func","onRemove","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  dropdownSelectedItemBehavior,\n  DropdownSelectedItemBehaviorProps,\n  getCode,\n  keyboardKey,\n} from '@fluentui/accessibility';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport { CloseIcon } from '@fluentui/react-icons-northstar';\nimport {\n  ComponentEventHandler,\n  ShorthandValue,\n  ComponentKeyboardEventHandler,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { UIComponentProps } from '../../utils/commonPropInterfaces';\nimport { createShorthandFactory, commonPropTypes } from '../../utils';\nimport { Image, ImageProps } from '../Image/Image';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  useUnhandledProps,\n  useStyles,\n  useFluentContext,\n  useTelemetry,\n  getElementType,\n  useAccessibility,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface DropdownSelectedItemSlotClassNames {\n  header: string;\n  icon: string;\n  image: string;\n}\n\nexport interface DropdownSelectedItemProps extends UIComponentProps<DropdownSelectedItemProps> {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<DropdownSelectedItemBehaviorProps>;\n\n  /** A selected item can be active. */\n  active?: boolean;\n\n  /** Header of the selected item. */\n  header?: ShorthandValue<BoxProps>;\n\n  /** Icon of the selected item. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** Image of the selected item. */\n  image?: ShorthandValue<ImageProps>;\n\n  /**\n   * Called on selected item click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onClick?: ComponentEventHandler<DropdownSelectedItemProps>;\n\n  /**\n   * Called on selected item key down.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onKeyDown?: ComponentKeyboardEventHandler<DropdownSelectedItemProps>;\n\n  /**\n   * Called when item is removed from the selection list.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onRemove?: ComponentEventHandler<DropdownSelectedItemProps>;\n}\n\nexport const dropdownSelectedItemClassName = 'ui-dropdown__selecteditem';\nexport const dropdownSelectedItemSlotClassNames: DropdownSelectedItemSlotClassNames = {\n  header: `${dropdownSelectedItemClassName}__header`,\n  icon: `${dropdownSelectedItemClassName}__icon`,\n  image: `${dropdownSelectedItemClassName}__image`,\n};\n\nexport type DropdownSelectedItemStylesProps = { hasImage: boolean };\n\n/**\n * A DropdownSelectedItem represents a selected item of 'multiple-selection' Dropdown.\n */\nexport const DropdownSelectedItem = (React.forwardRef<HTMLSpanElement, DropdownSelectedItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DropdownSelectedItem.displayName, context.telemetry);\n  setStart();\n\n  const { active, header, icon, image, className, design, styles, variables } = props;\n\n  const itemRef = React.useRef<HTMLElement>();\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DropdownSelectedItem.handledProps, props);\n\n  const getA11yProps = useAccessibility<DropdownSelectedItemBehaviorProps>(props.accessibility, {\n    debugName: DropdownSelectedItem.displayName,\n    mapPropsToBehavior: () => ({\n      header: header as string,\n      active,\n    }),\n    rtl: context.rtl,\n  });\n\n  React.useEffect(() => {\n    if (active) {\n      itemRef.current.focus();\n    }\n  }, [active]);\n\n  const { classes, styles: resolvedStyles } = useStyles<DropdownSelectedItemStylesProps>(\n    DropdownSelectedItem.displayName,\n    {\n      className: dropdownSelectedItemClassName,\n      mapPropsToStyles: () => ({\n        hasImage: !!image,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleKeyDown = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onKeyDown', e, props);\n  };\n\n  const handleIconOverrides = iconProps => ({\n    ...iconProps,\n    onClick: (e: React.SyntheticEvent, iconProps: BoxProps) => {\n      e.stopPropagation();\n      _.invoke(props, 'onRemove', e, iconProps);\n      _.invoke(props, 'onClick', e, iconProps);\n    },\n    onKeyDown: (e: React.KeyboardEvent, iconProps: BoxProps) => {\n      e.stopPropagation();\n      if (getCode(e) === keyboardKey.Enter) {\n        _.invoke(props, 'onRemove', e, iconProps);\n      }\n      _.invoke(props, 'onKeyDown', e, iconProps);\n    },\n  });\n\n  const headerElement = Box.create(header, {\n    defaultProps: () =>\n      getA11yProps('header', {\n        as: 'span',\n        className: dropdownSelectedItemSlotClassNames.header,\n        styles: resolvedStyles.header,\n      }),\n  });\n\n  const iconElement = Box.create(icon, {\n    defaultProps: () =>\n      getA11yProps('icon', {\n        className: dropdownSelectedItemSlotClassNames.icon,\n        styles: resolvedStyles.icon,\n      }),\n    overrideProps: handleIconOverrides,\n  });\n\n  const imageElement = Image.create(image, {\n    defaultProps: () =>\n      getA11yProps('image', {\n        avatar: true,\n        className: dropdownSelectedItemSlotClassNames.image,\n        styles: resolvedStyles.image,\n      }),\n  });\n\n  const element = (\n    <Ref innerRef={itemRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          onKeyDown: handleKeyDown,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {imageElement}\n        {headerElement}\n        {iconElement}\n      </ElementType>\n    </Ref>\n  );\n\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, DropdownSelectedItemProps> &\n  FluentComponentStaticProps<DropdownSelectedItemProps>;\n\nDropdownSelectedItem.displayName = 'DropdownSelectedItem';\n\nDropdownSelectedItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n  }),\n  active: PropTypes.bool,\n  header: customPropTypes.itemShorthand,\n  icon: customPropTypes.shorthandAllowingChildren,\n  image: customPropTypes.itemShorthandWithoutJSX,\n  onClick: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onRemove: PropTypes.func,\n};\n\nDropdownSelectedItem.handledProps = Object.keys(DropdownSelectedItem.propTypes) as any;\n\nDropdownSelectedItem.defaultProps = {\n  accessibility: dropdownSelectedItemBehavior,\n  as: 'span',\n  icon: <CloseIcon />,\n};\n\nDropdownSelectedItem.create = createShorthandFactory({\n  Component: DropdownSelectedItem,\n  mappedProp: 'header',\n});\n"],"file":"DropdownSelectedItem.js"}