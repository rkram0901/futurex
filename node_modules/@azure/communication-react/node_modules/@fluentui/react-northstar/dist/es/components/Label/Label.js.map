{"version":3,"sources":["components/Label/Label.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","Image","Box","labelClassName","Label","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","circular","color","content","icon","iconPosition","design","styles","variables","image","imagePosition","getA11Props","debugName","rtl","mapPropsToStyles","hasActionableIcon","hasImage","hasIcon","mapPropsToInlineStyles","classes","resolvedStyles","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","imageElement","create","defaultProps","iconElement","contentElement","startImage","startIcon","endIcon","endImage","propTypes","createCommon","bool","shorthandAllowingChildren","oneOf","itemShorthandWithoutJSX","fluid","Object","keys","as","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  ColorComponentProps,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { Image, ImageProps } from '../Image/Image';\nimport { Box, BoxProps } from '../Box/Box';\n\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\n\nexport interface LabelProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ColorComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A Label can be circular. */\n  circular?: boolean;\n\n  /** A Label can take up the width of its container. */\n  fluid?: boolean;\n\n  /** A Label can have an icon. */\n  icon?: ShorthandValue<BoxProps>;\n\n  /** A Label can position its Icon at the start or end of the layout. */\n  iconPosition?: 'start' | 'end';\n\n  /** A Label can contain an image. */\n  image?: ShorthandValue<ImageProps>;\n\n  /** A Label can position its image at the start or end of the layout. */\n  imagePosition?: 'start' | 'end';\n}\n\nexport type LabelStylesProps = Pick<LabelProps, 'circular' | 'color' | 'imagePosition' | 'iconPosition'> & {\n  hasImage: boolean;\n  hasIcon: boolean;\n  hasActionableIcon: boolean;\n};\nexport const labelClassName = 'ui-label';\n\n/**\n * A Label allows user to classify content.\n */\nexport const Label = (React.forwardRef<HTMLSpanElement, LabelProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Label.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    circular,\n    color,\n    content,\n    icon,\n    iconPosition,\n    design,\n    styles,\n    variables,\n    image,\n    imagePosition,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: Label.displayName,\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<LabelStylesProps>(Label.displayName, {\n    className: labelClassName,\n    mapPropsToStyles: () => ({\n      hasActionableIcon: _.has(icon, 'onClick'),\n      hasImage: !!image,\n      hasIcon: !!icon,\n      circular,\n      color,\n      imagePosition,\n      iconPosition,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Label.handledProps, props);\n\n  if (childrenExist(children)) {\n    const element = (\n      <ElementType\n        {...getA11Props('root', {\n          className: classes.root,\n          ref,\n          ...rtlTextContainer.getAttributes({ forElements: [children] }),\n          ...unhandledProps,\n        })}\n      >\n        {children}\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  }\n\n  const imageElement = Image.create(image, {\n    defaultProps: () => ({\n      styles: resolvedStyles.image,\n    }),\n  });\n  const iconElement = Box.create(icon, {\n    defaultProps: () => ({\n      styles: resolvedStyles.icon,\n    }),\n  });\n  const contentElement = Box.create(content, {\n    defaultProps: () => ({\n      styles: resolvedStyles.content,\n    }),\n  });\n\n  const startImage = imagePosition === 'start' && imageElement;\n  const startIcon = iconPosition === 'start' && iconElement;\n  const endIcon = iconPosition === 'end' && iconElement;\n  const endImage = imagePosition === 'end' && imageElement;\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {startImage}\n      {startIcon}\n      {contentElement}\n      {endIcon}\n      {endImage}\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, LabelProps> & FluentComponentStaticProps;\n\nLabel.displayName = 'Label';\n\nLabel.propTypes = {\n  ...commonPropTypes.createCommon({ color: true, content: 'shorthand' }),\n  circular: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  iconPosition: PropTypes.oneOf(['start', 'end']),\n  image: customPropTypes.itemShorthandWithoutJSX,\n  imagePosition: PropTypes.oneOf(['start', 'end']),\n  fluid: PropTypes.bool,\n};\nLabel.handledProps = Object.keys(Label.propTypes) as any;\n\nLabel.defaultProps = {\n  as: 'span',\n  imagePosition: 'start',\n  iconPosition: 'end',\n};\n\nLabel.create = createShorthandFactory({ Component: Label, mappedProp: 'content' });\n"],"file":"Label.js"}