{"version":3,"sources":["components/Pill/PillIcon.tsx"],"names":["React","pillIconBehavior","PropTypes","customPropTypes","getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","childrenExist","commonPropTypes","rtlTextContainer","pillIconClassName","PillIcon","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","styles","variables","size","selectable","image","getA11Props","debugName","rtl","mapPropsToStyles","hasImage","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","defaultProps","as","propTypes","createCommon","bool","oneOf","shorthandAllowingChildren","Object","keys","shorthandConfig","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Accessibility, pillIconBehavior } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\nimport { FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { PillImageProps } from './PillImage';\n\nexport interface PillIconProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * A Pill Icon can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n\n  /**\n   * A Pill Icon can represent selection state\n   */\n  selectable?: boolean;\n\n  /**\n   * A PillImage shorthand for the image slot.\n   */\n  image?: ShorthandValue<PillImageProps>;\n}\n\nexport type PillIconStylesProps = Required<Pick<PillIconProps, 'size' | 'selectable'>> & {\n  hasImage: boolean;\n};\nexport const pillIconClassName = 'ui-pill__icon';\n\n/**\n * A PillIcon allows user set an icon.\n */\nexport const PillIcon = (React.forwardRef<HTMLSpanElement, PillIconProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PillIcon.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, content, design, styles, variables, size, selectable, image } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillIcon.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillIconStylesProps>(PillIcon.displayName, {\n    className: pillIconClassName,\n    mapPropsToStyles: () => ({ size, selectable, hasImage: !!image }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillIcon.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, PillIconProps> & FluentComponentStaticProps<PillIconProps>;\n\nPillIcon.defaultProps = {\n  accessibility: pillIconBehavior,\n  as: 'span' as const,\n};\n\nPillIcon.displayName = 'PillIcon';\n\nPillIcon.propTypes = {\n  ...commonPropTypes.createCommon(),\n  selectable: PropTypes.bool,\n  size: PropTypes.oneOf<'small' | 'smaller' | 'medium'>(['small', 'smaller', 'medium']),\n  image: customPropTypes.shorthandAllowingChildren,\n};\n\nPillIcon.handledProps = Object.keys(PillIcon.propTypes) as any;\n\nPillIcon.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"PillIcon.js"}