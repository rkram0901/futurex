{"version":3,"sources":["components/Alert/AlertDismissAction.tsx"],"names":["buttonBehavior","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","Box","alertDismissActionClassName","alertDismissActionSlotClassNames","content","AlertDismissAction","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","as","children","className","disabled","design","styles","variables","danger","warning","info","success","hasChildren","hasContent","getA11Props","debugName","mapPropsToBehavior","String","actionHandlers","performClick","event","preventDefault","handleClick","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","resolvedStyles","unhandledProps","handledProps","ElementType","e","result","getAttributes","forElements","onClick","root","create","defaultProps","propTypes","createCommon","bool","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, buttonBehavior, ButtonBehaviorProps } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport { Box, BoxProps } from '../Box/Box';\n\nexport interface AlertDismissActionProps\n  extends UIComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>>,\n    ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ButtonBehaviorProps>;\n\n  /** A dismiss action can show that it cannot be interacted with. */\n  disabled?: boolean;\n\n  /** An alert may be formatted to display a danger message. */\n  danger?: boolean;\n\n  /** An alert can be formatted to display a warning message. */\n  warning?: boolean;\n\n  /** An alert can be formatted to display a successful message. */\n  success?: boolean;\n\n  /** An alert may be formatted to display information. */\n  info?: boolean;\n\n  /**\n   * Called after a user clicks the paddle.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<AlertDismissActionProps>;\n}\n\nexport type AlertDismissActionSlotClassNames = {\n  content: string;\n};\n\nexport type AlertDismissActionStylesProps = Pick<\n  AlertDismissActionProps,\n  'disabled' | 'danger' | 'warning' | 'info' | 'success'\n> & {\n  hasContent?: boolean;\n};\n\nexport const alertDismissActionClassName = 'ui-alert__dismissaction';\nexport const alertDismissActionSlotClassNames: AlertDismissActionSlotClassNames = {\n  content: `${alertDismissActionClassName}__content`,\n};\n\n/**\n * A AlertDismissAction allows users to customize the dismissAction slot  inside the Alert component.\n *\n * @accessibility\n * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.\n */\nexport const AlertDismissAction = (React.forwardRef<\n  HTMLButtonElement,\n  AlertDismissActionProps & { as: React.ReactNode }\n>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(AlertDismissAction.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    as,\n    children,\n    className,\n    content,\n    disabled,\n    design,\n    styles,\n    variables,\n    danger,\n    warning,\n    info,\n    success,\n  } = props;\n\n  const hasChildren = childrenExist(children);\n  const hasContent = !!content && !_.isEmpty(content);\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: AlertDismissAction.displayName,\n    mapPropsToBehavior: () => ({\n      as: String(as),\n      disabled,\n    }),\n    actionHandlers: {\n      performClick: event => {\n        event.preventDefault();\n        handleClick(event);\n      },\n    },\n    rtl: context.rtl,\n  });\n  const { classes, styles: resolvedStyles } = useStyles<AlertDismissActionStylesProps>(AlertDismissAction.displayName, {\n    className: alertDismissActionClassName,\n    mapPropsToStyles: () => ({\n      disabled,\n      danger,\n      warning,\n      info,\n      success,\n      hasContent: hasContent || hasChildren,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const unhandledProps = useUnhandledProps(AlertDismissAction.handledProps, props);\n  const ElementType = getElementType(props);\n\n  const handleClick = (e: React.SyntheticEvent) => {\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const result = (\n    <ElementType\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n      {...getA11Props('root', {\n        onClick: handleClick,\n        disabled,\n        className: classes.root,\n        ...unhandledProps,\n        ref,\n      })}\n    >\n      {hasChildren\n        ? children\n        : Box.create(content, {\n            defaultProps: () =>\n              getA11Props('content', {\n                as: 'span',\n                className: alertDismissActionSlotClassNames.content,\n                styles: resolvedStyles.content,\n              }),\n          })}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return result;\n}) as unknown) as ForwardRefWithAs<'button', HTMLButtonElement, AlertDismissActionProps> &\n  FluentComponentStaticProps<AlertDismissActionProps>;\n\nAlertDismissAction.defaultProps = {\n  as: 'button',\n  accessibility: buttonBehavior,\n  content: {},\n};\n\nAlertDismissAction.displayName = 'AlertDismissAction';\n\nAlertDismissAction.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: 'shorthand',\n  }),\n  disabled: PropTypes.bool,\n  danger: PropTypes.bool,\n  warning: PropTypes.bool,\n  info: PropTypes.bool,\n  onClick: PropTypes.func,\n  success: PropTypes.bool,\n};\n\nAlertDismissAction.handledProps = Object.keys(AlertDismissAction.propTypes) as any;\n\nAlertDismissAction.create = createShorthandFactory({ Component: AlertDismissAction, mappedProp: 'content' });\n"],"file":"AlertDismissAction.js"}