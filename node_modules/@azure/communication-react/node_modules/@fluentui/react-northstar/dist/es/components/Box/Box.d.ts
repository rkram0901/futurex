import { Accessibility } from '@fluentui/accessibility';
import * as React from 'react';
import { ContentComponentProps, ChildrenComponentProps, UIComponentProps, ShorthandFactory } from '../../utils';
export interface BoxProps extends UIComponentProps<BoxProps>, ContentComponentProps, ChildrenComponentProps {
    /** Accessibility behavior if overridden by the user. */
    accessibility?: Accessibility<never>;
}
export declare type BoxStylesProps = {};
export declare const boxClassName = "ui-box";
/**
 * A Box is a basic component, commonly used for slots in other Fluent UI components.
 * By default it just renders a `div`.
 */
export declare const Box: (<TExtendedElementType extends React.ElementType<any> = "div">(props: Omit<import("@fluentui/react-bindings").PropsOfElement<TExtendedElementType>, "as" | keyof BoxProps> & {
    as?: TExtendedElementType;
} & BoxProps) => JSX.Element) & {
    propTypes?: React.WeakValidationMap<BoxProps> & {
        as: React.Requireable<string | ((props: any, context?: any) => any) | (new (props: any, context?: any) => any)>;
    };
    contextTypes?: import("prop-types").ValidationMap<any>;
    defaultProps?: Partial<BoxProps & {
        as: "div";
    }>;
    displayName?: string;
    readonly __PRIVATE_PROPS?: Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & {
        ref?: React.Ref<HTMLDivElement>;
    }, "as" | keyof BoxProps> & {
        as?: "div";
    } & BoxProps;
} & {
    create: ShorthandFactory<BoxProps>;
};
