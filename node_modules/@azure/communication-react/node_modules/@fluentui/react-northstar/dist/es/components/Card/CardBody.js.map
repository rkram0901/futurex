{"version":3,"sources":["components/Card/CardBody.tsx"],"names":["React","commonPropTypes","createShorthandFactory","useTelemetry","useStyles","getElementType","useUnhandledProps","useFluentContext","useAccessibility","PropTypes","cardBodyClassName","CardBody","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","bool","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FluentComponentStaticProps } from '../../types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport { UIComponentProps, ChildrenComponentProps, commonPropTypes, createShorthandFactory } from '../../utils';\nimport {\n  useTelemetry,\n  useStyles,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useAccessibility,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\n\nexport interface CardBodyProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** A body can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardBodyStylesProps = Pick<CardBodyProps, 'fitted'>;\nexport const cardBodyClassName = 'ui-card__body';\n\n/**\n * A CardBody is used to display data in Card body.\n */\nexport const CardBody = (React.forwardRef<HTMLDivElement, CardBodyProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardBody.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardBody.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardBody.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardBodyStylesProps>(CardBody.displayName, {\n    className: cardBodyClassName,\n    mapPropsToStyles: () => ({ fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, CardBodyProps> & FluentComponentStaticProps<CardBodyProps>;\n\nCardBody.displayName = 'CardBody';\n\nCardBody.propTypes = {\n  ...commonPropTypes.createCommon(),\n  fitted: PropTypes.bool,\n};\n\nCardBody.handledProps = Object.keys(CardBody.propTypes) as any;\n\nCardBody.create = createShorthandFactory({ Component: CardBody });\n"],"file":"CardBody.js"}