{"version":3,"sources":["components/Video/Video.tsx"],"names":["Ref","PropTypes","React","videoBehavior","createShorthandFactory","commonPropTypes","getElementType","useStyles","useFluentContext","useUnhandledProps","useTelemetry","useAccessibility","videoClassName","Video","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","controls","autoPlay","loop","poster","src","muted","variables","className","design","styles","videoRef","useRef","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","useEffect","current","mapPropsToInlineStyles","classes","element","root","create","Component","mappedProp","propTypes","createCommon","children","content","bool","string","defaultProps","as","Object","keys"],"mappings":"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","sourcesContent":["import { Ref } from '@fluentui/react-component-ref';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { Accessibility, VideoBehaviorProps, videoBehavior } from '@fluentui/accessibility';\nimport { createShorthandFactory, UIComponentProps, commonPropTypes } from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport {\n  getElementType,\n  useStyles,\n  useFluentContext,\n  useUnhandledProps,\n  useTelemetry,\n  useAccessibility,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface VideoProps extends UIComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<VideoBehaviorProps>;\n\n  /** Whether the video should start playing when rendered. Autoplay videos must be muted or they will not play immediately in certain browers like Chrome. */\n  autoPlay?: boolean;\n\n  /** Whether to display the native video controls. */\n  controls?: boolean;\n\n  /** Whether the video should automatically restart after it ends. */\n  loop?: boolean;\n\n  /** Whether the video should be allowed to play audio. */\n  muted?: boolean;\n\n  /** Image source URL for when video isn't playing. */\n  poster?: string;\n\n  /** Video source URL. */\n  src?: string;\n}\n\nexport const videoClassName = 'ui-video';\n\nexport type VideoStylesProps = Required<Pick<VideoProps, 'variables'>>;\n\n/**\n * A Video provides ability to embed video content.\n */\nexport const Video = (React.forwardRef<HTMLVideoElement, VideoProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Video.displayName, context.telemetry);\n  setStart();\n\n  const { controls, autoPlay, loop, poster, src, muted, variables, className, design, styles } = props;\n  const videoRef = React.useRef<HTMLVideoElement>();\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Video.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Video.displayName,\n  });\n\n  React.useEffect(() => {\n    // this is a workaround for a potential memory leak in Chromium which retains a Detached HTMLVideoElement when <video autoplay> is unmounted\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=969049\n    return () => {\n      if (videoRef.current) {\n        // we want to perform the cleanup on the latest element rendered\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        videoRef.current.src = '';\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    // React doesn't guaranty that props will be set:\n    // https://github.com/facebook/react/issues/10389\n    if (videoRef.current) {\n      videoRef.current.muted = !!muted;\n    }\n  }, [muted]);\n\n  const { classes } = useStyles<VideoStylesProps>(Video.displayName, {\n    className: videoClassName,\n    mapPropsToInlineStyles: () => ({ className, variables, design, styles }),\n  });\n\n  const element = (\n    <Ref innerRef={videoRef}>\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          autoPlay,\n          controls,\n          ref,\n          loop,\n          poster,\n          src,\n          ...unhandledProps,\n        })}\n      />\n    </Ref>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'video', HTMLVideoElement, VideoProps> & FluentComponentStaticProps<VideoProps>;\n\nVideo.create = createShorthandFactory({ Component: Video, mappedProp: 'src' });\n\nVideo.displayName = 'Video';\n\nVideo.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  autoPlay: PropTypes.bool,\n  controls: PropTypes.bool,\n  loop: PropTypes.bool,\n  muted: PropTypes.bool,\n  poster: PropTypes.string,\n  src: PropTypes.string,\n};\n\nVideo.defaultProps = {\n  as: 'video' as const,\n  accessibility: videoBehavior,\n  controls: true,\n  autoPlay: false,\n  muted: false,\n};\n\nVideo.handledProps = Object.keys(Video.propTypes) as any;\n"],"file":"Video.js"}