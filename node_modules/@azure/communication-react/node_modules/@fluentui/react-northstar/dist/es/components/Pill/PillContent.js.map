{"version":3,"sources":["components/Pill/PillContent.tsx"],"names":["React","PropTypes","getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","childrenExist","commonPropTypes","rtlTextContainer","pillContentClassName","PillContent","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","styles","variables","size","actionable","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","propTypes","createCommon","bool","Object","keys","defaultProps","as","shorthandConfig","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\n\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface PillContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * A Pill can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n\n  /**\n   * A Pill can be actionable.\n   */\n  actionable?: boolean;\n}\n\nexport type PillContentStylesProps = Required<Pick<PillContentProps, 'size' | 'actionable'>>;\nexport const pillContentClassName = 'ui-pillcontent';\n\n/**\n * A PillContent allows user to classify content.\n */\nexport const PillContent = (React.forwardRef<HTMLSpanElement, PillContentProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PillContent.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, content, design, styles, variables, size, actionable } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillContent.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillContentStylesProps>(PillContent.displayName, {\n    className: pillContentClassName,\n    mapPropsToStyles: () => ({ size, actionable }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillContent.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'span', HTMLSpanElement, PillContentProps> &\n  FluentComponentStaticProps<PillContentProps>;\n\nPillContent.displayName = 'PillContent';\n\nPillContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  actionable: PropTypes.bool,\n};\n\nPillContent.handledProps = Object.keys(PillContent.propTypes) as any;\n\nPillContent.defaultProps = {\n  as: 'span',\n};\n\nPillContent.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"PillContent.js"}