{"version":3,"sources":["components/Card/CardPreview.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useStyles","useTelemetry","useFluentContext","PropTypes","React","commonPropTypes","createShorthandFactory","cardPreviewClassName","CardPreview","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","children","horizontal","fitted","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","element","root","propTypes","createCommon","bool","Object","keys","create","Component"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ForwardRefWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { FluentComponentStaticProps } from '../../types';\nimport { ChildrenComponentProps, commonPropTypes, createShorthandFactory, UIComponentProps } from '../../utils';\n\nexport interface CardPreviewProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** If preview is in horizontal card. */\n  horizontal?: boolean;\n\n  /** A preview can be fitted, without any space above or below it. */\n  fitted?: boolean;\n}\n\nexport type CardPreviewStylesProps = Pick<CardPreviewProps, 'horizontal' | 'fitted'>;\nexport const cardPreviewClassName = 'ui-card__preview';\n\n/**\n * A CardPreview is used to display data Card preview.\n */\nexport const CardPreview = (React.forwardRef<HTMLDivElement, CardPreviewProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CardPreview.displayName, context.telemetry);\n  setStart();\n\n  const { className, design, styles, variables, children, horizontal, fitted } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CardPreview.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CardPreview.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CardPreviewStylesProps>(CardPreview.displayName, {\n    className: cardPreviewClassName,\n    mapPropsToStyles: () => ({ horizontal, fitted }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {children}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, CardPreviewProps> &\n  FluentComponentStaticProps<CardPreviewProps>;\n\nCardPreview.displayName = 'CardPreview';\n\nCardPreview.propTypes = {\n  ...commonPropTypes.createCommon(),\n  horizontal: PropTypes.bool,\n  fitted: PropTypes.bool,\n};\n\nCardPreview.handledProps = Object.keys(CardPreview.propTypes) as any;\n\nCardPreview.create = createShorthandFactory({ Component: CardPreview });\n"],"file":"CardPreview.js"}