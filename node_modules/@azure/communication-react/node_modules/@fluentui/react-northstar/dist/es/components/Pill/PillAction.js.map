{"version":3,"sources":["components/Pill/PillAction.tsx"],"names":["React","pillActionBehavior","getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","childrenExist","commonPropTypes","rtlTextContainer","CloseIcon","pillActionClassName","PillAction","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","styles","variables","size","getA11Props","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","propTypes","createCommon","Object","keys","defaultProps","shorthandConfig","mappedProp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Accessibility, pillActionBehavior, PillActionBehaviorProps } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  SizeValue,\n} from '../../utils';\nimport { FluentComponentStaticProps } from '../../types';\nimport { CloseIcon } from '@fluentui/react-icons-northstar';\n\nexport interface PillActionProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<PillActionBehaviorProps>;\n\n  /**\n   * A Pill can be sized.\n   */\n  size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;\n}\n\nexport type PillActionStylesProps = Required<Pick<PillActionProps, 'size'>>;\nexport const pillActionClassName = 'ui-pill__action';\n\n/**\n * A PillAction allows user to execute an action.\n */\nexport const PillAction = (React.forwardRef<HTMLDivElement, PillActionProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PillAction.displayName, context.telemetry);\n  setStart();\n\n  const { accessibility, children, className, content, design, styles, variables, size } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: PillAction.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<PillActionStylesProps>(PillAction.displayName, {\n    className: pillActionClassName,\n    mapPropsToStyles: () => ({ size }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PillAction.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, PillActionProps> &\n  FluentComponentStaticProps<PillActionProps>;\n\nPillAction.displayName = 'PillAction';\n\nPillAction.propTypes = {\n  ...commonPropTypes.createCommon(),\n};\n\nPillAction.handledProps = Object.keys(PillAction.propTypes) as any;\n\nPillAction.defaultProps = {\n  accessibility: pillActionBehavior,\n  content: <CloseIcon />,\n};\n\nPillAction.shorthandConfig = {\n  mappedProp: 'content',\n};\n"],"file":"PillAction.js"}