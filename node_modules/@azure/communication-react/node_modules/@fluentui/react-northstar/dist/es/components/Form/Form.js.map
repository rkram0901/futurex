{"version":3,"sources":["components/Form/Form.tsx"],"names":["customPropTypes","PropTypes","React","childrenExist","commonPropTypes","rtlTextContainer","createShorthandFactory","FormField","useTelemetry","getElementType","useUnhandledProps","useStyles","useFluentContext","useAccessibility","formClassName","Form","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","action","children","accessibility","ElementType","unhandledProps","handledProps","mapPropsToInlineStyles","rtl","classes","getA11yProps","debugName","handleSubmit","e","args","renderFields","fields","field","create","element","root","getAttributes","forElements","propTypes","createCommon","content","string","collectionShorthand","onSubmit","func","defaultProps","as","Object","keys","Component"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport { FormField, FormFieldProps } from './FormField';\nimport {\n  useTelemetry,\n  getElementType,\n  useUnhandledProps,\n  useStyles,\n  useFluentContext,\n  useAccessibility,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface FormProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** The HTML form action. */\n  action?: string;\n\n  /**\n   * @deprecated\n   * Shorthand array of props for the FormFields inside the Form.\n   */\n  fields?: ShorthandCollection<FormFieldProps>;\n\n  /**\n   * The HTML form submit handler.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onSubmit?: ComponentEventHandler<FormProps>;\n}\n\nexport const formClassName = 'ui-form';\n\nexport type FormStylesProps = never;\n\n/**\n * A Form is used to collect, oprionally validate, and submit the user input, in a structured way.\n */\nexport const Form = (React.forwardRef<HTMLFormElement, FormProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Form.displayName, context.telemetry);\n  setStart();\n  const { className, design, styles, variables, action, children, accessibility } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Form.handledProps, props);\n\n  const { classes } = useStyles<FormStylesProps>(Form.displayName, {\n    className: formClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: Form.displayName,\n    rtl: context.rtl,\n  });\n\n  const handleSubmit = (e, ...args) => {\n    const { action } = props;\n\n    // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n    // method.\n    if (!action) _.invoke(e, 'preventDefault');\n    _.invoke(props, 'onSubmit', e, props, ...args);\n  };\n\n  const renderFields = () => {\n    const { fields } = props;\n    return _.map(fields, field => FormField.create(field));\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n      action={action}\n      onSubmit={handleSubmit}\n    >\n      {childrenExist(children) ? children : renderFields()}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'form', HTMLFormElement, FormProps> & FluentComponentStaticProps<FormProps>;\n\nForm.displayName = 'Form';\n\nForm.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  action: PropTypes.string,\n  fields: customPropTypes.collectionShorthand,\n  onSubmit: PropTypes.func,\n};\n\nForm.defaultProps = {\n  as: 'form' as const,\n};\n\nForm.handledProps = Object.keys(Form.propTypes) as any;\n\nForm.create = createShorthandFactory({\n  Component: Form,\n});\n"],"file":"Form.js"}