{"version":3,"sources":["components/Loader/Loader.tsx"],"names":["loaderBehavior","customPropTypes","useTelemetry","useFluentContext","getElementType","useUnhandledProps","useStyles","useAccessibility","PropTypes","React","createShorthandFactory","commonPropTypes","getOrGenerateIdFromShorthand","Box","Text","loaderClassName","loaderSlotClassNames","indicator","label","svg","Loader","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","delay","secondary","inline","labelPosition","className","design","styles","variables","size","ElementType","unhandledProps","handledProps","delayTimer","useRef","useState","visible","setVisible","labelId","current","mapPropsToStyles","mapPropsToInlineStyles","rtl","classes","resolvedStyles","getA11yProps","accessibility","debugName","mapPropsToBehavior","useEffect","setTimeout","clearTimeout","svgElement","create","defaultProps","element","root","children","id","propTypes","createCommon","content","number","itemShorthand","bool","oneOf","Object","keys","Component","mappedProp","shorthandConfig"],"mappings":"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","sourcesContent":["import { Accessibility, loaderBehavior, LoaderBehaviorProps } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  ShorthandConfig,\n  useTelemetry,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useStyles,\n  useAccessibility,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  SizeValue,\n  getOrGenerateIdFromShorthand,\n} from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Text, TextProps } from '../Text/Text';\n\nexport interface LoaderSlotClassNames {\n  indicator: string;\n  label: string;\n  svg: string;\n}\n\nexport interface LoaderProps extends UIComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<LoaderBehaviorProps>;\n\n  /** Time in milliseconds after component mount before spinner is visible. */\n  delay?: number;\n\n  /** A loader can contain an indicator. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** Loaders can appear inline with content. */\n  inline?: boolean;\n\n  /** A loader can contain a label. */\n  label?: ShorthandValue<TextProps>;\n\n  /** A label in the loader can have different positions. */\n  labelPosition?: 'above' | 'below' | 'start' | 'end';\n\n  /** A size of the loader. */\n  size?: SizeValue;\n\n  /** A loader can contain a custom svg element. */\n  svg?: ShorthandValue<BoxProps>;\n\n  /** A loader can be secondary */\n  secondary?: boolean;\n}\n\nexport interface LoaderState {\n  visible: boolean;\n  labelId: string;\n}\n\nexport const loaderClassName = 'ui-loader';\nexport const loaderSlotClassNames: LoaderSlotClassNames = {\n  indicator: `${loaderClassName}__indicator`,\n  label: `${loaderClassName}__label`,\n  svg: `${loaderClassName}__svg`,\n};\n\nexport type LoaderStylesProps = Pick<LoaderProps, 'inline' | 'labelPosition' | 'size' | 'secondary'>;\n\n/**\n * A loader alerts a user that content is being loaded or processed and they should wait for the activity to complete.\n *\n * @accessibility\n * Implements [ARIA progressbar](https://www.w3.org/TR/wai-aria-1.1/#progressbar) role.\n */\nexport const Loader = (React.forwardRef<HTMLDivElement, LoaderProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Loader.displayName, context.telemetry);\n  setStart();\n  const {\n    delay,\n    secondary,\n    label,\n    indicator,\n    svg,\n    inline,\n    labelPosition,\n    className,\n    design,\n    styles,\n    variables,\n    size,\n  } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Loader.handledProps, props);\n\n  const delayTimer = React.useRef<number>();\n  const [visible, setVisible] = React.useState(props.delay === 0);\n\n  const labelId = React.useRef<string>();\n  labelId.current = getOrGenerateIdFromShorthand('loader-label-', label, labelId.current);\n\n  const { classes, styles: resolvedStyles } = useStyles<LoaderStylesProps>(Loader.displayName, {\n    className: loaderClassName,\n    mapPropsToStyles: () => ({\n      inline,\n      labelPosition,\n      size,\n      secondary,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<LoaderBehaviorProps>(props.accessibility, {\n    debugName: Loader.displayName,\n    mapPropsToBehavior: () => ({\n      labelId: labelId.current,\n    }),\n    rtl: context.rtl,\n  });\n\n  React.useEffect(() => {\n    if (delay > 0) {\n      // @ts-ignore We have a collision between types from DOM and @types/node\n      delayTimer.current = setTimeout(() => {\n        setVisible(true);\n      }, delay);\n    }\n\n    return () => clearTimeout(delayTimer.current);\n  }, [delay]);\n\n  const svgElement = Box.create(svg, {\n    defaultProps: () => ({ className: loaderSlotClassNames.svg, styles: resolvedStyles.svg }),\n  });\n\n  const element = visible && (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n    >\n      {Box.create(indicator, {\n        defaultProps: () =>\n          getA11yProps('indicator', {\n            children: svgElement,\n            className: loaderSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n      })}\n      {Text.create(label, {\n        defaultProps: () =>\n          getA11yProps('label', {\n            className: loaderSlotClassNames.label,\n            styles: resolvedStyles.label,\n            id: labelId.current,\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, LoaderProps> &\n  FluentComponentStaticProps<LoaderProps> & {\n    shorthandConfig: ShorthandConfig<LoaderProps>;\n  };\n\nLoader.displayName = 'Loader';\n\nLoader.propTypes = {\n  ...commonPropTypes.createCommon({\n    children: false,\n    content: false,\n  }),\n  delay: PropTypes.number,\n  indicator: customPropTypes.itemShorthand,\n  inline: PropTypes.bool,\n  label: customPropTypes.itemShorthand,\n  labelPosition: PropTypes.oneOf(['above', 'below', 'start', 'end']),\n  size: customPropTypes.size,\n  svg: customPropTypes.itemShorthand,\n  secondary: PropTypes.bool,\n};\n\nLoader.defaultProps = {\n  accessibility: loaderBehavior,\n  delay: 0,\n  indicator: {},\n  labelPosition: 'below',\n  svg: '',\n  size: 'medium',\n};\n\nLoader.handledProps = Object.keys(Loader.propTypes) as any;\n\nLoader.create = createShorthandFactory({ Component: Loader, mappedProp: 'label' });\n\nLoader.shorthandConfig = { mappedProp: 'label' };\n"],"file":"Loader.js"}