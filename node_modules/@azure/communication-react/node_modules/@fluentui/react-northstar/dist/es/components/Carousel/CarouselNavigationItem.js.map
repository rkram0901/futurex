{"version":3,"sources":["components/Carousel/CarouselNavigationItem.tsx"],"names":["PropTypes","React","customPropTypes","tabBehavior","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","Box","useTelemetry","getElementType","useFluentContext","useUnhandledProps","useAccessibility","useStyles","carouselNavigationItemClassName","carouselNavigationItemSlotClassNames","indicator","content","CarouselNavigationItem","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","children","thumbnails","vertical","active","iconOnly","primary","className","design","styles","variables","disableClickableNav","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","event","defaultPrevented","handleClick","mapPropsToBehavior","mapPropsToStyles","hasContent","hasIndicator","mapPropsToInlineStyles","rtl","classes","resolvedStyles","renderContent","create","defaultProps","as","e","handleBlur","handleFocus","element","root","onBlur","onFocus","onClick","getAttributes","forElements","propTypes","createCommon","bool","shorthandAllowingChildren","index","number","func","every","disallow","secondary","Object","keys","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport { Accessibility, tabBehavior, TabBehaviorProps } from '@fluentui/accessibility';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  ContentComponentProps,\n  ChildrenComponentProps,\n} from '../../utils';\n\nimport { ShorthandValue, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport {\n  useTelemetry,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\n\nexport interface CarouselNavigationItemSlotClassNames {\n  indicator: string;\n  content: string;\n}\n\nexport interface CarouselNavigationItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<TabBehaviorProps>;\n\n  /** A menu item can be active. */\n  active?: boolean;\n\n  /** Indicator for the Carousel Navigation Item. */\n  indicator?: ShorthandValue<BoxProps>;\n\n  /** A Carousel Navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** CarouselNavigationIntem index inside CarouselNavigation. */\n  index?: number;\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation item can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation item can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n\n  thumbnails?: boolean;\n\n  /** A navigation may be clickable */\n  disableClickableNav?: boolean;\n}\n\nexport type CarouselNavigationItemStylesProps = Required<\n  Pick<\n    CarouselNavigationItemProps,\n    'thumbnails' | 'vertical' | 'active' | 'iconOnly' | 'primary' | 'disableClickableNav'\n  >\n> & {\n  hasContent: boolean;\n  hasIndicator: boolean;\n};\n\nexport const carouselNavigationItemClassName = 'ui-carousel__navigationitem';\nexport const carouselNavigationItemSlotClassNames: CarouselNavigationItemSlotClassNames = {\n  indicator: `${carouselNavigationItemClassName}__indicator`,\n  content: `${carouselNavigationItemClassName}__content`,\n};\n\n/**\n * A CarouselItem is an actionable item within a Carousel.\n */\nexport const CarouselNavigationItem = (React.forwardRef<HTMLLIElement, CarouselNavigationItemProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselNavigationItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    children,\n    thumbnails,\n    vertical,\n    active,\n    content,\n    iconOnly,\n    primary,\n    indicator,\n    className,\n    design,\n    styles,\n    variables,\n    disableClickableNav,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigationItem.handledProps, props);\n\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: CarouselNavigationItem.displayName,\n    actionHandlers: {\n      performClick: event => !event.defaultPrevented && handleClick(event),\n    },\n    mapPropsToBehavior: () => ({\n      active,\n    }),\n  });\n\n  const { classes, styles: resolvedStyles } = useStyles<CarouselNavigationItemStylesProps>(\n    CarouselNavigationItem.displayName,\n    {\n      className: carouselNavigationItemClassName,\n      mapPropsToStyles: () => ({\n        thumbnails,\n        vertical,\n        active,\n        hasContent: !!content,\n        iconOnly,\n        primary,\n        hasIndicator: !!indicator,\n        disableClickableNav,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables,\n      }),\n      rtl: context.rtl,\n    },\n  );\n  const renderContent = () => {\n    return content\n      ? Box.create(content, {\n          defaultProps: () => ({\n            as: 'span',\n            className: carouselNavigationItemSlotClassNames.content,\n            styles: resolvedStyles.content,\n          }),\n        })\n      : Box.create(indicator, {\n          defaultProps: () => ({\n            className: carouselNavigationItemSlotClassNames.indicator,\n            styles: resolvedStyles.indicator,\n          }),\n        });\n  };\n\n  const handleClick = (e: Event | React.SyntheticEvent) => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onClick: handleClick,\n        ref,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'li', HTMLLIElement, CarouselNavigationItemProps> &\n  FluentComponentStaticProps<CarouselNavigationItemProps>;\n\nCarouselNavigationItem.displayName = 'CarouselNavigationItem';\n\nCarouselNavigationItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  indicator: customPropTypes.shorthandAllowingChildren,\n  iconOnly: PropTypes.bool,\n  index: PropTypes.number,\n  onClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n  disableClickableNav: PropTypes.bool,\n};\n\nCarouselNavigationItem.handledProps = Object.keys(CarouselNavigationItem.propTypes) as any;\n\nCarouselNavigationItem.defaultProps = {\n  accessibility: tabBehavior,\n  as: 'li',\n  indicator: {},\n};\n\nCarouselNavigationItem.create = createShorthandFactory({\n  Component: CarouselNavigationItem,\n  mappedArrayProp: 'content',\n});\n"],"file":"CarouselNavigationItem.js"}