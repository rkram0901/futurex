{"version":3,"sources":["components/Animation/Animation.tsx"],"names":["useUnhandledProps","unstable_calculateAnimationTimeout","calculateAnimationTimeout","useFluentContext","useTelemetry","useMergedRefs","Ref","cx","PropTypes","React","Transition","childrenExist","commonPropTypes","useAnimationStyles","Animation","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","appear","children","className","mountOnEnter","timeout","visible","unmountOnExit","handleAnimationEvent","event","animationClasses","animationDuration","animationDelay","timeoutResult","unhandledProps","handledProps","nodeRef","useRef","mergedRef","isChildrenFunction","child","Children","only","element","state","childWithClasses","classes","cloneElement","propTypes","createCommon","accessibility","as","content","oneOfType","func","name","string","delay","direction","duration","fillMode","iterationCount","keyframeParams","object","playState","timingFunction","bool","number","shape","enter","exit","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Object","keys"],"mappings":"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","sourcesContent":["import {\n  useUnhandledProps,\n  unstable_calculateAnimationTimeout as calculateAnimationTimeout,\n  useFluentContext,\n  useTelemetry,\n  useMergedRefs,\n  ForwardRefComponent,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { Transition } from 'react-transition-group';\n\nimport { childrenExist, commonPropTypes, ChildrenComponentProps } from '../../utils';\nimport { ComponentEventHandler } from '../../types';\nimport { useAnimationStyles } from './useAnimationStyles';\n\nexport type AnimationChildrenProp = (props: {\n  classes: string;\n  state: 'unmounted' | 'exited' | 'entering' | 'entered' | 'exiting';\n}) => React.ReactNode;\n\nexport interface AnimationProps extends ChildrenComponentProps<AnimationChildrenProp | React.ReactChild> {\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  /** The name for the animation that should be applied, defined in the theme. */\n  name?: string;\n\n  /** Specifies a delay for the start of an animation. Negative values are\n   * also allowed. If using negative values, the animation will start as if it had already been\n   * playing for that amount of time.\n   */\n  delay?: string;\n\n  /** Specifies whether an animation should be played forwards, backwards or in alternate cycles.\n   * It can have the following values:\n   * - normal (default) - The animation is played as normal (forwards)\n   * - reverse - The animation is played in reverse direction (backwards)\n   * - alternate - The animation is played forwards first, then backwards\n   * - alternate-reverse - The animation is played backwards first, then forwards\n   */\n  direction?: string;\n\n  /** Specifies how long an animation should take to complete. */\n  duration?: string;\n\n  /**\n   * Specifies a style for the target element when the animation is not playing (i.e. before it starts, after it ends, or both).\n   * It can have the following values:\n   * - none (default) - Animation will not apply any styles to the element before or after it is executing\n   * - forwards - The element will retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count)\n   * - backwards - The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period\n   * - both - The animation will follow the rules for both forwards and backwards, extending the animation properties in both directions\n   * */\n  fillMode?: string;\n\n  /** Specifies the number of times an animation should run. */\n  iterationCount?: string;\n\n  /** Custom parameters for the keyframe defined for the animation. */\n  keyframeParams?: object;\n\n  /**\n   * Specifies whether the animation is running or paused. It can have the following values:\n   * - paused - Specifies that the animation is paused\n   * - running - Default value. Specifies that the animation is running\n   * - initial - Sets this property to its default value.\n   * - inherit - Inherits this property from its parent element.\n   * */\n  playState?: string;\n\n  /**\n   * Specifies the speed curve of the animation. It can have the following values:\n   * - ease - Specifies an animation with a slow start, then fast, then end slowly (this is default)\n   * - linear - Specifies an animation with the same speed from start to end\n   * - ease-in - Specifies an animation with a slow start\n   * - ease-out - Specifies an animation with a slow end\n   * - ease-in-out - Specifies an animation with a slow start and end\n   * - cubic-bezier(n,n,n,n) - Lets you define your own values in a cubic-bezier function\n   */\n  timingFunction?: string;\n\n  /** Show the component; triggers the enter or exit animation. */\n  visible?: boolean;\n\n  /** Run the enter animation when the component mounts, if it is initially shown. */\n  appear?: boolean;\n\n  /** Wait until the first \"enter\" transition to mount the component (add it to the DOM). */\n  mountOnEnter?: boolean;\n\n  /** Unmount the component (remove it from the DOM) when it is not shown. */\n  unmountOnExit?: boolean;\n\n  /** The duration of the transition, in milliseconds. */\n  timeout?: number | { enter?: number; exit?: number; appear?: number };\n\n  /**\n   * Callback fired before the \"entering\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onEnter?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired after the \"entering\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onEntering?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired after the \"entered\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onEntered?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onExit?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onExiting?: ComponentEventHandler<AnimationProps>;\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onExited?: ComponentEventHandler<AnimationProps>;\n}\n\n/**\n * An Animation provides animation effects to rendered elements.\n */\nexport const Animation = React.forwardRef<HTMLDivElement, AnimationProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Animation.displayName, context.telemetry);\n  setStart();\n\n  const { appear, children, className, mountOnEnter, timeout, visible, unmountOnExit } = props;\n\n  const handleAnimationEvent = (\n    event: 'onEnter' | 'onEntering' | 'onEntered' | 'onExit' | 'onExiting' | 'onExited',\n  ) => () => {\n    _.invoke(props, event, null, props);\n  };\n\n  const { className: animationClasses, animationDuration, animationDelay } = useAnimationStyles(\n    Animation.displayName,\n    props,\n  );\n  const timeoutResult = timeout || calculateAnimationTimeout(animationDuration, animationDelay) || 0;\n\n  const unhandledProps = useUnhandledProps(Animation.handledProps, props);\n\n  const nodeRef = React.useRef();\n  const mergedRef = useMergedRefs(ref, nodeRef);\n\n  if (_.isNil(children)) {\n    setEnd();\n    return null;\n  }\n\n  const isChildrenFunction = typeof children === 'function';\n  const child = childrenExist(children) && !isChildrenFunction && (React.Children.only(children) as React.ReactElement);\n\n  const element = (\n    <Transition\n      nodeRef={nodeRef}\n      in={visible}\n      appear={appear}\n      mountOnEnter={mountOnEnter}\n      unmountOnExit={unmountOnExit}\n      timeout={timeoutResult}\n      onEnter={handleAnimationEvent('onEnter')}\n      onEntering={handleAnimationEvent('onEntering')}\n      onEntered={handleAnimationEvent('onEntered')}\n      onExit={handleAnimationEvent('onExit')}\n      onExiting={handleAnimationEvent('onExiting')}\n      onExited={handleAnimationEvent('onExited')}\n      {...unhandledProps}\n      className={!isChildrenFunction ? cx(animationClasses, className, (child as any)?.props?.className) : ''}\n    >\n      {isChildrenFunction ? (\n        ({ state }) => {\n          const childWithClasses = (children as AnimationChildrenProp)({\n            classes: cx(animationClasses, className, (child as any)?.props?.className),\n            state,\n          }) as React.ReactElement;\n          return childWithClasses ? <Ref innerRef={mergedRef}>{childWithClasses}</Ref> : childWithClasses;\n        }\n      ) : (\n        <Ref innerRef={mergedRef}>\n          {React.cloneElement(child, { className: cx(animationClasses, className, (child as any)?.props?.className) })}\n        </Ref>\n      )}\n    </Transition>\n  );\n  setEnd();\n\n  return element;\n}) as ForwardRefComponent<AnimationProps>;\n\nAnimation.displayName = 'Animation';\n\nAnimation.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    as: false,\n    content: false,\n    children: false,\n  }),\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n  name: PropTypes.string,\n  delay: PropTypes.string,\n  direction: PropTypes.string,\n  duration: PropTypes.string,\n  fillMode: PropTypes.string,\n  iterationCount: PropTypes.string,\n  keyframeParams: PropTypes.object,\n  playState: PropTypes.string,\n  timingFunction: PropTypes.string,\n  visible: PropTypes.bool,\n  appear: PropTypes.bool,\n  mountOnEnter: PropTypes.bool,\n  unmountOnExit: PropTypes.bool,\n  timeout: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      appear: PropTypes.number,\n      enter: PropTypes.number,\n      exit: PropTypes.number,\n    }),\n  ]),\n  onEnter: PropTypes.func,\n  onEntering: PropTypes.func,\n  onEntered: PropTypes.func,\n  onExit: PropTypes.func,\n  onExiting: PropTypes.func,\n  onExited: PropTypes.func,\n};\nAnimation.handledProps = Object.keys(Animation.propTypes) as any;\n"],"file":"Animation.js"}