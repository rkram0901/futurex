{"version":3,"sources":["themes/teams/components/Dialog/dialogStyles.ts"],"names":["buttonClassName","flexClassName","dialogStyles","root","v","variables","background","rootBackground","border","borderRadius","rootBorderRadius","outline","padding","rootPadding","position","width","rootWidth","maxWidth","maxHeight","overflowX","overflowY","display","gridTemplateColumns","msGridColumns","boxShadow","color","foregroundColor","rootPaddingZoom","footer","gridColumn","gridRow","msGridRow","actions","flexWrap","footerActionsBreakpoint","margin","marginBottom","content","contentMargin","msGridColumn","msGridColumnSpan","justifySelf","overflow","header","headerMargin","fontSize","headerFontSize","fontWeight","headerFontWeight","headerAction","headerActionMargin","overlay","p","props","alignItems","bottom","flexDirection","justifyContent","left","right","top","zIndex","overlayZIndex","backdrop","overlayBackground"],"mappings":"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","sourcesContent":["import { DialogStylesProps } from '../../../../components/Dialog/Dialog';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { DialogVariables } from './dialogVariables';\nimport { buttonClassName } from '../../../../components/Button/Button';\nimport { flexClassName } from '../../../../components/Flex/Flex';\n\nexport const dialogStyles: ComponentSlotStylesPrepared<DialogStylesProps, DialogVariables> = {\n  root: ({ variables: v }): ICSSInJSStyle => ({\n    background: v.rootBackground,\n    border: v.border,\n    borderRadius: v.rootBorderRadius,\n    outline: 'none',\n    padding: v.rootPadding,\n    position: 'relative',\n    width: v.rootWidth,\n    maxWidth: '100vw',\n    maxHeight: '100vh',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n\n    display: 'grid',\n    gridTemplateColumns: '1fr auto',\n    msGridColumns: '1fr auto',\n\n    boxShadow: v.boxShadow,\n    color: v.foregroundColor,\n    [`@media screen and (max-width: ${v.rootWidth})`]: {\n      padding: v.rootPaddingZoom,\n    },\n  }),\n\n  footer: (): ICSSInJSStyle => ({\n    gridColumn: '1 / -1',\n    gridRow: 3,\n    msGridRow: 3,\n  }),\n\n  actions: ({ variables: v }): ICSSInJSStyle => ({\n    display: 'flex',\n    width: '100%',\n    [`& .${flexClassName}`]: {\n      flexWrap: 'wrap',\n      width: '100%',\n    },\n    [`@media screen and (max-width: ${v.footerActionsBreakpoint})`]: {\n      [`& .${buttonClassName}`]: {\n        width: '100%',\n        maxWidth: '100%',\n        margin: 0,\n      },\n      [`& .${flexClassName} > :not(:last-child)`]: {\n        marginBottom: '0.5rem',\n      },\n    },\n  }),\n\n  content: ({ variables: v }): ICSSInJSStyle => ({\n    margin: v.contentMargin,\n\n    gridColumn: '1 / span 2',\n    gridRow: 2,\n\n    msGridColumn: 1,\n    msGridColumnSpan: 2,\n    msGridRow: 2,\n\n    justifySelf: 'left',\n    width: '100%',\n\n    [`@media screen and (max-width: ${v.rootWidth}), screen and (max-height: 400px)`]: {\n      maxHeight: '100%',\n      overflow: 'unset',\n    },\n  }),\n\n  header: ({ variables: v }): ICSSInJSStyle => ({\n    margin: v.headerMargin,\n    gridRow: 1,\n    msGridRow: 1,\n    gridColumn: 1,\n    msGridColumn: 1,\n    justifySelf: 'left',\n    fontSize: v.headerFontSize,\n    fontWeight: v.headerFontWeight,\n  }),\n\n  headerAction: ({ variables: v }) => ({\n    gridRow: 1,\n    msGridRow: 1,\n    gridColumn: 2,\n    msGridColumn: 2,\n    color: v.foregroundColor,\n    margin: v.headerActionMargin,\n  }),\n\n  overlay: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    alignItems: 'center',\n    background: 'transparent',\n    bottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    left: 0,\n    overflow: 'auto',\n    position: 'fixed',\n    right: 0,\n    top: 0,\n    zIndex: v.overlayZIndex,\n\n    ...(p.backdrop && { background: v.overlayBackground }),\n  }),\n};\n"],"file":"dialogStyles.js"}