import { Accessibility } from '@fluentui/accessibility';
import * as React from 'react';
import { UIComponentProps, SizeValue } from '../../utils';
import { FluentComponentStaticProps } from '../../types';
export interface PillImageProps extends UIComponentProps {
    /** Accessibility behavior if overridden by the user. */
    accessibility?: Accessibility<never>;
    /**
     * A PillImage can be sized.
     */
    size?: Extract<SizeValue, 'smaller' | 'small' | 'medium'>;
    /** PillImage source URL. */
    src?: string;
}
export declare type PillImageStylesProps = Required<Pick<PillImageProps, 'size'>>;
export declare const pillImageClassName = "ui-pill__image";
/**
 * An PillImage is a graphic representation used by Pill.
 */
export declare const PillImage: (<TExtendedElementType extends React.ElementType<any> = "img">(props: React.RefAttributes<HTMLImageElement> & Omit<import("@fluentui/react-bindings").PropsOfElement<TExtendedElementType>, "as" | keyof PillImageProps> & {
    as?: TExtendedElementType;
} & PillImageProps) => JSX.Element) & {
    propTypes?: React.WeakValidationMap<PillImageProps> & {
        as: React.Requireable<string | ((props: any, context?: any) => any) | (new (props: any, context?: any) => any)>;
    };
    contextTypes?: import("prop-types").ValidationMap<any>;
    defaultProps?: Partial<PillImageProps & {
        as: "img";
    }>;
    displayName?: string;
    readonly __PRIVATE_PROPS?: React.RefAttributes<HTMLImageElement> & Omit<Pick<React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>, "key" | keyof React.ImgHTMLAttributes<HTMLImageElement>> & {
        ref?: React.Ref<HTMLImageElement>;
    }, "as" | keyof PillImageProps> & {
        as?: "img";
    } & PillImageProps;
} & FluentComponentStaticProps<PillImageProps>;
