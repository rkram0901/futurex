{"version":3,"sources":["components/Carousel/CarouselNavigation.tsx"],"names":["tabListBehavior","useTelemetry","mergeVariablesOverrides","getElementType","useFluentContext","useUnhandledProps","useAccessibility","useStyles","PropTypes","React","customPropTypes","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","CarouselNavigationItem","carouselNavigationClassName","CarouselNavigation","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","variables","children","className","design","activeIndex","iconOnly","items","primary","secondary","vertical","thumbnails","styles","disableClickableNav","ElementType","unhandledProps","handledProps","getA11yProps","debugName","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","handleItemOverrides","predefinedProps","onClick","e","itemProps","renderItems","item","index","create","defaultProps","active","overrideProps","element","unstable_wrapWithFocusZone","root","getAttributes","forElements","propTypes","createCommon","content","oneOfType","number","string","bool","collectionShorthand","onItemClick","func","every","disallow","as","Object","keys","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import { tabListBehavior, Accessibility } from '@fluentui/accessibility';\nimport {\n  useTelemetry,\n  mergeVariablesOverrides,\n  getElementType,\n  useFluentContext,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { ShorthandCollection, ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport { CarouselNavigationItem, CarouselNavigationItemProps } from './CarouselNavigationItem';\n\nexport interface CarouselNavigationProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** Index of the currently active item. */\n  activeIndex?: number | string;\n\n  /** A navigation may have just icons. */\n  iconOnly?: boolean;\n\n  /** A navigation may have thumbnails. */\n  thumbnails?: boolean;\n\n  /** Shorthand array of props for Navigation. */\n  items?: ShorthandCollection<CarouselNavigationItemProps>;\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick?: ComponentEventHandler<CarouselNavigationItemProps>;\n\n  /** The carousel navigation can have primary type. */\n  primary?: boolean;\n\n  /** The carousel navigation can have secondary type. */\n  secondary?: boolean;\n\n  /** A vertical carousel navigation displays elements vertically. */\n  vertical?: boolean;\n\n  /** A navigation may be clickable */\n  disableClickableNav?: boolean;\n}\n\nexport type CarouselNavigationStylesProps = Required<\n  Pick<CarouselNavigationProps, 'activeIndex' | 'iconOnly' | 'primary' | 'vertical' | 'thumbnails'>\n>;\n\nexport const carouselNavigationClassName = 'ui-carousel__navigation';\n\n/**\n * A Carousel navigation helps switching between Carousel items.\n */\nexport const CarouselNavigation = (React.forwardRef<HTMLUListElement, CarouselNavigationProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(CarouselNavigation.displayName, context.telemetry);\n  setStart();\n  const {\n    accessibility,\n    variables,\n    children,\n    className,\n    design,\n    activeIndex,\n    iconOnly,\n    items,\n    primary,\n    secondary,\n    vertical,\n    thumbnails,\n    styles,\n    disableClickableNav,\n  } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(CarouselNavigation.handledProps, props);\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: CarouselNavigation.displayName,\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<CarouselNavigationStylesProps>(CarouselNavigation.displayName, {\n    className: carouselNavigationClassName,\n    mapPropsToStyles: () => ({\n      activeIndex,\n      iconOnly,\n      primary,\n      vertical,\n      thumbnails,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleItemOverrides = variables => predefinedProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(props, 'onItemClick', e, itemProps);\n      _.invoke(predefinedProps, 'onClick', e, itemProps);\n    },\n    variables: mergeVariablesOverrides(variables, predefinedProps.variables),\n  });\n\n  const renderItems = () => {\n    return _.map(items, (item, index) =>\n      CarouselNavigationItem.create(item, {\n        defaultProps: () =>\n          getA11yProps('item', {\n            active: index === activeIndex,\n            iconOnly,\n            index,\n            primary,\n            secondary,\n            vertical,\n            thumbnails,\n            disableClickableNav,\n          }),\n        overrideProps: handleItemOverrides(variables),\n      }),\n    );\n  };\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ref,\n        ...unhandledProps,\n      })}\n      {...rtlTextContainer.getAttributes({ forElements: [children] })}\n    >\n      {childrenExist(children) ? children : renderItems()}\n    </ElementType>,\n  );\n\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'ul', HTMLUListElement, CarouselNavigationProps> &\n  FluentComponentStaticProps<CarouselNavigationProps>;\n\nCarouselNavigation.displayName = 'CarouselNavigation';\n\nCarouselNavigation.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  iconOnly: PropTypes.bool,\n  thumbnails: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  onItemClick: PropTypes.func,\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  vertical: PropTypes.bool,\n  disableClickableNav: PropTypes.bool,\n};\n\nCarouselNavigation.defaultProps = {\n  accessibility: tabListBehavior,\n  as: 'ul',\n};\n\nCarouselNavigation.handledProps = Object.keys(CarouselNavigation.propTypes) as any;\n\nCarouselNavigation.create = createShorthandFactory({\n  Component: CarouselNavigation,\n  mappedArrayProp: 'items',\n});\n"],"file":"CarouselNavigation.js"}