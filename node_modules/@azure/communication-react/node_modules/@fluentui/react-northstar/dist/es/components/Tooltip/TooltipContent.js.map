{"version":3,"sources":["components/Tooltip/TooltipContent.tsx"],"names":["getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","customPropTypes","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getBasePlacement","tooltipContentClassName","TooltipContent","forwardRef","props","ref","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","content","design","open","placement","pointing","pointerRef","styles","variables","subtle","getA11Props","debugName","rtl","mapPropsToStyles","basePlacement","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","pointer","propTypes","createCommon","oneOf","bool","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  ForwardRefWithAs,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PopperJs from '@popperjs/core';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { getBasePlacement, PopperChildrenProps } from '../../utils/positioner';\nimport { FluentComponentStaticProps } from '../../types';\n\nexport interface TooltipContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** An actual placement value from Popper. */\n  placement?: PopperChildrenProps['placement'];\n\n  /** Defines whether tooltip is displayed. */\n  open?: boolean;\n\n  /** A tooltip can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /** A ref to a pointer element. */\n  pointerRef?: React.Ref<HTMLDivElement>;\n\n  /** Defines wether tooltip is subtle  */\n  subtle?: boolean;\n}\n\nexport type TooltipContentStylesProps = Required<Pick<TooltipContentProps, 'pointing' | 'open' | 'subtle'>> & {\n  basePlacement: PopperJs.BasePlacement;\n};\n\nexport const tooltipContentClassName = 'ui-tooltip__content';\n\n/**\n * A TooltipContent contains the content of a Tooltip component.\n */\nexport const TooltipContent = (React.forwardRef<HTMLDivElement, TooltipContentProps>((props, ref) => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TooltipContent.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    content,\n    design,\n    open,\n    placement,\n    pointing,\n    pointerRef,\n    styles,\n    variables,\n    subtle,\n  } = props;\n\n  const getA11Props = useAccessibility(accessibility, {\n    debugName: TooltipContent.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TooltipContentStylesProps>(TooltipContent.displayName, {\n    className: tooltipContentClassName,\n    mapPropsToStyles: () => ({\n      basePlacement: getBasePlacement(placement, context.rtl),\n      open,\n      pointing,\n      subtle,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TooltipContent.handledProps, props);\n\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        ref,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n        ...unhandledProps,\n      })}\n    >\n      {open && pointing && <div className={classes.pointer} ref={pointerRef} />}\n\n      <div {...getA11Props('content', { className: classes.content })}>\n        {childrenExist(children) ? children : content}\n      </div>\n    </ElementType>\n  );\n  setEnd();\n\n  return element;\n}) as unknown) as ForwardRefWithAs<'div', HTMLDivElement, TooltipContentProps> &\n  FluentComponentStaticProps<TooltipContentProps>;\n\nTooltipContent.displayName = 'TooltipContent';\n\nTooltipContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  placement: PropTypes.oneOf<PopperJs.Placement>([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start',\n  ]),\n  pointing: PropTypes.bool,\n  pointerRef: customPropTypes.ref,\n  subtle: PropTypes.bool,\n};\nTooltipContent.handledProps = Object.keys(TooltipContent.propTypes) as any;\n\nTooltipContent.create = createShorthandFactory({ Component: TooltipContent, mappedProp: 'content' });\n"],"file":"TooltipContent.js"}