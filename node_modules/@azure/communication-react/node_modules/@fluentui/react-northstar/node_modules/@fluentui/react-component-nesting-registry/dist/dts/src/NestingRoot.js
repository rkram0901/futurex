"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.NestingRoot = void 0;
var React = require("react");
var RefStack_1 = require("./utils/RefStack");
var NestingContext_1 = require("./NestingContext");
var NestingRoot = /** @class */ (function (_super) {
    __extends(NestingRoot, _super);
    function NestingRoot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.registry = new RefStack_1.RefStack();
        _this.parentRef = React.createRef();
        _this.getRefs = function () { return _this.registry.getContextRefs(_this.parentRef); };
        return _this;
    }
    NestingRoot.prototype.componentDidMount = function () {
        this.registry.register(this.parentRef);
    };
    NestingRoot.prototype.componentWillUnmount = function () {
        this.registry.unregister(this.parentRef);
    };
    NestingRoot.prototype.render = function () {
        return (React.createElement(NestingContext_1.NestingContext.Provider, { value: this.registry }, this.props.children(this.getRefs, this.parentRef)));
    };
    return NestingRoot;
}(React.Component));
exports.NestingRoot = NestingRoot;
