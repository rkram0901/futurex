{"version":3,"sources":["FocusZone/AutoFocusZone.tsx"],"names":["handleRef","callable","React","PropTypes","getElementType","getUnhandledProps","getNextElement","focusAsync","AutoFocusZone","root","createRef","findElementAndFocusAsync","current","firstFocusableSelector","props","focusSelector","firstFocusableChild","querySelector","firstChild","componentDidMount","render","unhandledProps","handledProps","ElementType","element","innerRef","children","Component","propTypes","as","elementType","oneOfType","func","string","any"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,+BAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AAGA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,kBAA3C;AAEA;;AACA,WAAaC,aAAb;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,IADF,gBACSP,KAAK,CAACQ,SAAN,EADT;;AAAA,UAgCEC,wBAhCF,GAgC6B,YAAM;AAC/B,UAAI,CAAC,MAAKF,IAAL,CAAUG,OAAf,EAAwB;AACxB,UAAQC,sBAAR,GAAmC,MAAKC,KAAxC,CAAQD,sBAAR;AAEA,UAAME,aAAa,GAAGd,QAAQ,CAACY,sBAAD,CAAR,EAAtB;AAEA,UAAMG,mBAAmB,GAAGD,aAAa,GACpC,MAAKN,IAAL,CAAUG,OAAV,CAAkBK,aAAlB,CAAgCF,aAAhC,CADoC,GAErCT,cAAc,CAAC,MAAKG,IAAL,CAAUG,OAAX,EAAoB,MAAKH,IAAL,CAAUG,OAAV,CAAkBM,UAAtC,EAAiE,IAAjE,EAAuE,KAAvE,EAA8E,KAA9E,EAAqF,IAArF,CAFlB;AAIAF,MAAAA,mBAAmB,IAAIT,UAAU,CAACS,mBAAD,CAAjC;AACD,KA3CH;;AAAA;AAAA;;AAAA;;AAAA,SAWEG,iBAXF,GAWE,6BAA0B;AACxB,SAAKR,wBAAL;AACD,GAbH;;AAAA,SAeES,MAfF,GAeE,kBAAsB;AAAA;;AACpB,QAAMC,cAAc,GAAGhB,iBAAiB,CAACG,aAAa,CAACc,YAAf,EAA6B,KAAKR,KAAlC,CAAxC;AACA,QAAMS,WAAW,GAAGnB,cAAc,CAAC,KAAKU,KAAN,CAAlC;AAEA,wBACE,oBAAC,WAAD;AACE,MAAA,GAAG,EAAE,aAACU,OAAD,EAA0B;AAC7BxB,QAAAA,SAAS,CAAC,MAAI,CAACS,IAAN,EAAYe,OAAZ,CAAT;AACAxB,QAAAA,SAAS,CAAC,MAAI,CAACc,KAAL,CAAWW,QAAZ,EAAsBD,OAAtB,CAAT;AACD;AAJH,OAKMH,cALN,GAOG,KAAKP,KAAL,CAAWY,QAPd,CADF;AAWD,GA9BH;;AAAA;AAAA,EAAmCxB,KAAK,CAACyB,SAAzC;AAAanB,a,CAGJoB,S,GAAY;AACjBC,EAAAA,EAAE,EAAE1B,SAAS,CAAC2B,WADG;AAEjBjB,EAAAA,sBAAsB,EAAEV,SAAS,CAAC4B,SAAV,CAAoB,CAAC5B,SAAS,CAAC6B,IAAX,EAAiB7B,SAAS,CAAC8B,MAA3B,CAApB,CAFP;AAGjBR,EAAAA,QAAQ,EAAEtB,SAAS,CAAC+B;AAHH,C;AAHR1B,a,CASJc,Y,GAAe,MAAOd,aAAa,CAACoB,SAArB,C","sourcesContent":["import { handleRef } from '@fluentui/react-component-ref';\nimport { callable } from '@fluentui/styles';\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport { getElementType } from '../utils/getElementType';\nimport { getUnhandledProps } from '../utils/getUnhandledProps';\nimport { AutoFocusZoneProps } from './AutoFocusZone.types';\nimport { getNextElement, focusAsync } from './focusUtilities';\n\n/** AutoFocusZone is used to focus inner element on mount. */\nexport class AutoFocusZone extends React.Component<AutoFocusZoneProps> {\n  root = React.createRef<HTMLElement>();\n\n  static propTypes = {\n    as: PropTypes.elementType,\n    firstFocusableSelector: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    innerRef: PropTypes.any,\n  };\n\n  static handledProps = _.keys(AutoFocusZone.propTypes) as any;\n\n  componentDidMount(): void {\n    this.findElementAndFocusAsync();\n  }\n\n  render(): JSX.Element {\n    const unhandledProps = getUnhandledProps(AutoFocusZone.handledProps, this.props);\n    const ElementType = getElementType(this.props);\n\n    return (\n      <ElementType\n        ref={(element: HTMLElement) => {\n          handleRef(this.root, element);\n          handleRef(this.props.innerRef, element);\n        }}\n        {...unhandledProps}\n      >\n        {this.props.children}\n      </ElementType>\n    );\n  }\n\n  findElementAndFocusAsync = () => {\n    if (!this.root.current) return;\n    const { firstFocusableSelector } = this.props;\n\n    const focusSelector = callable(firstFocusableSelector)();\n\n    const firstFocusableChild = focusSelector\n      ? (this.root.current.querySelector(focusSelector) as HTMLElement)\n      : getNextElement(this.root.current, this.root.current.firstChild as HTMLElement, true, false, false, true);\n\n    firstFocusableChild && focusAsync(firstFocusableChild);\n  };\n}\n"],"file":"AutoFocusZone.js"}