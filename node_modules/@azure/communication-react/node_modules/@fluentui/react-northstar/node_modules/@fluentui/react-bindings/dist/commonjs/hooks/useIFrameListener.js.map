{"version":3,"sources":["hooks/useIFrameListener.ts"],"names":["useIFrameListener","enableFrameFocusDispatch","callback","targetDocument","listener","React","useCallback","e","useEffect","addEventListener","FUI_FRAME_EVENT","removeEventListener"],"mappings":";;;;;AAAA;;AACA;;;;;;AAEA;AACA;AACA;AACO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAC/BC,wBAD+B,EAE/BC,QAF+B,EAG/BC,cAH+B,EAI5B;AACH,MAAMC,QAAQ,GAAGC,KAAK,CAACC,WAAN,CACf,UAACC,CAAD,EAAc;AACZ,QAAIL,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACK,CAAD,CAAR;AACD;AACF,GALc,EAMf,CAACL,QAAD,CANe,CAAjB;AASAG,EAAAA,KAAK,CAACG,SAAN,CAAgB,YAAM;AACpB,QAAIP,wBAAJ,EAA8B;AAC5BE,MAAAA,cAAc,QAAd,YAAAA,cAAc,CAAEM,gBAAhB,CAAiCC,uCAAjC,EAAkDN,QAAlD;AACD;;AACD,WAAO,YAAM;AACXD,MAAAA,cAAc,QAAd,YAAAA,cAAc,CAAEQ,mBAAhB,CAAoCD,uCAApC,EAAqDN,QAArD;AACD,KAFD;AAGD,GAPD,EAOG,CAACD,cAAD,EAAiBF,wBAAjB,EAA2CG,QAA3C,CAPH;AAQD,CAtBM","sourcesContent":["import * as React from 'react';\nimport { FUI_FRAME_EVENT } from './useIFrameFocusDispatch';\n\n/**\n * Set a listener for a custom event emmited by the useIFrameFocusDispatch to execute the callback\n */\nexport const useIFrameListener = (\n  enableFrameFocusDispatch: boolean,\n  callback: (e: Event) => void,\n  targetDocument: Document,\n) => {\n  const listener = React.useCallback(\n    (e: Event) => {\n      if (callback) {\n        callback(e);\n      }\n    },\n    [callback],\n  );\n\n  React.useEffect(() => {\n    if (enableFrameFocusDispatch) {\n      targetDocument?.addEventListener(FUI_FRAME_EVENT, listener);\n    }\n    return () => {\n      targetDocument?.removeEventListener(FUI_FRAME_EVENT, listener);\n    };\n  }, [targetDocument, enableFrameFocusDispatch, listener]);\n};\n"],"file":"useIFrameListener.js"}