"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NestingChild = void 0;
var React = require("react");
var NestingContext_1 = require("./NestingContext");
var NestingChildInner = /** @class */ (function (_super) {
    __extends(NestingChildInner, _super);
    function NestingChildInner() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.childRef = React.createRef();
        _this.getRefs = function () { return _this.props.getContextRefs(_this.childRef); };
        return _this;
    }
    NestingChildInner.prototype.componentDidMount = function () {
        this.props.register(this.childRef);
    };
    NestingChildInner.prototype.componentWillUnmount = function () {
        this.props.unregister(this.childRef);
    };
    NestingChildInner.prototype.render = function () {
        return this.props.children(this.getRefs, this.childRef);
    };
    return NestingChildInner;
}(React.Component));
var NestingChild = function (_a) {
    var children = _a.children;
    return (React.createElement(NestingContext_1.NestingContext.Consumer, null, function (contextValue) { return React.createElement(NestingChildInner, __assign({}, contextValue), children); }));
};
exports.NestingChild = NestingChild;
