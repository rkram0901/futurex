{"version":3,"sources":["FocusZone/FocusTrapZone.tsx"],"names":["EventListener","React","ReactDOM","PropTypes","getElementType","getUnhandledProps","getNextElement","getFirstTabbable","getLastTabbable","getWindow","getDocument","focusAsync","HIDDEN_FROM_ACC_TREE","handleRef","FocusTrapZone","_root","current","_previouslyFocusedElementOutsideTrapZone","_previouslyFocusedElementInTrapZone","_firstBumper","createRef","_lastBumper","_hasFocus","windowRef","elem","findDOMNode","shouldHandleOutsideClick","props","isClickableOutsideFocusTrap","focusTriggerOnOutsideClick","element","innerRef","_onRootFocus","ev","onFocus","_onRootBlur","onBlur","relatedTarget","doc","activeElement","contains","_onFirstBumperFocus","_onBumperFocus","_onLastBumperFocus","isFirstBumper","currentBumper","nextFocusable","_isBumper","_findElementAndFocusAsync","focus","_enableFocusTrapZone","disabled","_focusStack","push","_bringFocusIntoZone","_hideContentFromAccessibilityTree","disableFirstFocus","_getPreviouslyFocusedElementOutsideTrapZone","_releaseFocusTrapZone","ignoreExternalFocusing","filter","value","body","_focusAsync","lastActiveFocusTrap","length","_showContentInAccessibilityTree","hasAttribute","removeAttribute","focusPreviouslyFocusedInnerElement","firstFocusableSelector","focusSelector","firstFocusableChild","querySelector","firstChild","_onFocusCapture","onFocusCapture","target","currentTarget","_forceFocusInTrap","triggeredElement","preventDefault","stopPropagation","_handleOutsideFocus","focusedElement","_handleOutsideClick","clickedElement","isOutsideFocusTrapZone","isOutsideTriggerElement","_onKeyboardHandler","onKeyDown","elementToFocusOnDismiss","previouslyFocusedElement","bodyChildren","children","console","warn","index","currentChild","isOrHasFocusTrapZone","isAriaLiveRegion","getAttribute","setAttribute","hiddenElements","querySelectorAll","componentDidMount","componentDidUpdate","prevProps","forceFocusInsideTrapOnComponentUpdate","forceFocusInsideTrapOnOutsideFocus","prevForceFocusInsideTrap","undefined","newForceFocusInsideTrap","prevDisabled","newDisabled","componentWillUnmount","render","className","ariaLabelledBy","unhandledProps","propTypes","ElementType","bumperProps","style","pointerEvents","position","tabIndex","Component","as","elementType","string","object","bool","any","defaultProps"],"mappings":"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","sourcesContent":["import { EventListener } from '@fluentui/react-component-event-listener';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport * as _ from 'lodash';\n\nimport { getElementType } from '../utils/getElementType';\nimport { getUnhandledProps } from '../utils/getUnhandledProps';\nimport {\n  getNextElement,\n  getFirstTabbable,\n  getLastTabbable,\n  getWindow,\n  getDocument,\n  focusAsync,\n  HIDDEN_FROM_ACC_TREE,\n} from './focusUtilities';\nimport { FocusTrapZoneProps } from './FocusTrapZone.types';\nimport { handleRef } from '@fluentui/react-component-ref';\n\n/** FocusTrapZone is used to trap the focus in any html element placed in body\n *  and hide other elements outside of Focus Trap Zone from accessibility tree.\n *  Pressing tab will circle focus within the inner focusable elements of the FocusTrapZone. */\nexport class FocusTrapZone extends React.Component<FocusTrapZoneProps, {}> {\n  static _focusStack: FocusTrapZone[] = [];\n\n  _root: { current: HTMLElement | null } = { current: null };\n\n  _previouslyFocusedElementOutsideTrapZone?: HTMLElement;\n  _previouslyFocusedElementInTrapZone?: HTMLElement;\n\n  _firstBumper = React.createRef<HTMLDivElement>();\n  _lastBumper = React.createRef<HTMLDivElement>();\n  _hasFocus: boolean = false;\n\n  windowRef = React.createRef<Window>() as React.MutableRefObject<Window>;\n\n  // @ts-ignore\n  createRef = elem => {\n    this._root.current = ReactDOM.findDOMNode(elem) as HTMLElement;\n    // @ts-ignore\n    this.windowRef.current = getWindow(this._root.current);\n  };\n\n  shouldHandleOutsideClick = () => !this.props.isClickableOutsideFocusTrap || !this.props.focusTriggerOnOutsideClick;\n\n  static propTypes = {\n    as: PropTypes.elementType,\n    className: PropTypes.string,\n    elementToFocusOnDismiss: PropTypes.object,\n    ariaLabelledBy: PropTypes.string,\n    isClickableOutsideFocusTrap: PropTypes.bool,\n    ignoreExternalFocusing: PropTypes.bool,\n    forceFocusInsideTrapOnOutsideFocus: PropTypes.bool,\n    forceFocusInsideTrapOnComponentUpdate: PropTypes.bool,\n    firstFocusableSelector: PropTypes.string,\n    disableFirstFocus: PropTypes.bool,\n    focusPreviouslyFocusedInnerElement: PropTypes.bool,\n    focusTriggerOnOutsideClick: PropTypes.bool,\n    innerRef: PropTypes.any,\n  };\n\n  static defaultProps: FocusTrapZoneProps = {\n    as: 'div',\n    isClickableOutsideFocusTrap: true,\n    forceFocusInsideTrapOnOutsideFocus: false,\n  };\n\n  componentDidMount(): void {\n    this._enableFocusTrapZone();\n  }\n\n  componentDidUpdate(prevProps: FocusTrapZoneProps): void {\n    const { forceFocusInsideTrapOnComponentUpdate, forceFocusInsideTrapOnOutsideFocus, disabled } = this.props;\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const activeElement = doc.activeElement as HTMLElement;\n\n    // if after componentDidUpdate focus is not inside the focus trap, bring it back\n    if (\n      !disabled &&\n      // @ts-ignore\n      !this._root.current.contains(activeElement) &&\n      forceFocusInsideTrapOnComponentUpdate\n    ) {\n      this._bringFocusIntoZone();\n      return;\n    }\n\n    const prevForceFocusInsideTrap =\n      prevProps.forceFocusInsideTrapOnOutsideFocus !== undefined ? prevProps.forceFocusInsideTrapOnOutsideFocus : true;\n    const newForceFocusInsideTrap =\n      forceFocusInsideTrapOnOutsideFocus !== undefined ? forceFocusInsideTrapOnOutsideFocus : true;\n    const prevDisabled = prevProps.disabled !== undefined ? prevProps.disabled : false;\n    const newDisabled = disabled !== undefined ? disabled : false;\n\n    if ((!prevForceFocusInsideTrap && newForceFocusInsideTrap) || (prevDisabled && !newDisabled)) {\n      // Transition from forceFocusInsideTrap / FTZ disabled to enabled.\n      // Emulate what happens when a FocusTrapZone gets mounted.\n      this._enableFocusTrapZone();\n    } else if ((prevForceFocusInsideTrap && !newForceFocusInsideTrap) || (!prevDisabled && newDisabled)) {\n      // Transition from forceFocusInsideTrap / FTZ enabled to disabled.\n      // Emulate what happens when a FocusTrapZone gets unmounted.\n      this._releaseFocusTrapZone();\n    }\n  }\n\n  componentWillUnmount(): void {\n    // don't handle return focus unless forceFocusInsideTrapOnOutsideFocus is true or focus is still within FocusTrapZone\n    const doc = getDocument(this._root.current);\n    if (\n      !this.props.disabled ||\n      this.props.forceFocusInsideTrapOnOutsideFocus ||\n      // @ts-ignore\n      !this._root.current.contains(doc.activeElement as HTMLElement)\n    ) {\n      this._releaseFocusTrapZone();\n    }\n\n    // Dispose of element references so the DOM Nodes can be garbage-collected\n    delete this._previouslyFocusedElementInTrapZone;\n    delete this._previouslyFocusedElementOutsideTrapZone;\n  }\n\n  handleRef = (element: HTMLElement) => {\n    this.createRef(element);\n    handleRef(this.props.innerRef, element);\n  };\n\n  render(): JSX.Element {\n    const { className, forceFocusInsideTrapOnOutsideFocus, ariaLabelledBy, disabled = false } = this.props;\n    const unhandledProps = getUnhandledProps(_.keys(FocusTrapZone.propTypes) as any, this.props);\n    const ElementType = getElementType(this.props);\n\n    const bumperProps = {\n      'aria-hidden': true,\n      style: {\n        pointerEvents: 'none',\n        position: 'fixed', // 'fixed' prevents browsers from scrolling to bumpers when viewport does not contain them\n      },\n      tabIndex: disabled ? -1 : 0, // make bumpers tabbable only when enabled\n      'data-is-visible': true,\n    } as React.HTMLAttributes<HTMLDivElement>;\n\n    return (\n      <>\n        <ElementType\n          {...unhandledProps}\n          className={className}\n          ref={this.handleRef}\n          aria-labelledby={ariaLabelledBy}\n          onKeyDown={this._onKeyboardHandler}\n          onFocusCapture={this._onFocusCapture}\n          onFocus={this._onRootFocus}\n          onBlur={this._onRootBlur}\n        >\n          <div {...bumperProps} ref={this._firstBumper} onFocus={this._onFirstBumperFocus} />\n          {this.props.children}\n          <div {...bumperProps} ref={this._lastBumper} onFocus={this._onLastBumperFocus} />\n        </ElementType>\n\n        {forceFocusInsideTrapOnOutsideFocus && (\n          <EventListener capture listener={this._handleOutsideFocus} targetRef={this.windowRef} type=\"focus\" />\n        )}\n        {this.shouldHandleOutsideClick() && (\n          <EventListener capture listener={this._handleOutsideClick} targetRef={this.windowRef} type=\"click\" />\n        )}\n      </>\n    );\n  }\n\n  _onRootFocus = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this._hasFocus = true;\n  };\n\n  _onRootBlur = (ev: React.FocusEvent<HTMLDivElement>) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    let relatedTarget = ev.relatedTarget;\n    if (ev.relatedTarget === null) {\n      // In IE11, due to lack of support, event.relatedTarget is always\n      // null making every onBlur call to be \"outside\" of the ComboBox\n      // even when it's not. Using document.activeElement is another way\n      // for us to be able to get what the relatedTarget without relying\n      // on the event\n      const doc = getDocument(this._root.current);\n      // @ts-ignore\n      relatedTarget = doc.activeElement as Element;\n    }\n\n    // @ts-ignore\n    if (!this._root.current.contains(relatedTarget as HTMLElement)) {\n      this._hasFocus = false;\n    }\n  };\n\n  _onFirstBumperFocus = () => {\n    this._onBumperFocus(true);\n  };\n\n  _onLastBumperFocus = () => {\n    this._onBumperFocus(false);\n  };\n\n  _isBumper(element: HTMLElement): boolean {\n    return element === this._firstBumper.current || element === this._lastBumper.current;\n  }\n\n  _onBumperFocus = (isFirstBumper: boolean) => {\n    if (!this._root.current) {\n      return;\n    }\n\n    const currentBumper = (isFirstBumper === this._hasFocus\n      ? this._lastBumper.current\n      : this._firstBumper.current) as HTMLElement;\n\n    const nextFocusable =\n      isFirstBumper === this._hasFocus\n        ? getLastTabbable(this._root.current, currentBumper, true, false)\n        : getFirstTabbable(this._root.current, currentBumper, true, false);\n\n    if (nextFocusable) {\n      if (this._isBumper(nextFocusable)) {\n        // This can happen when FTZ contains no tabbable elements. Focus will take care of finding a focusable element in FTZ.\n        this._findElementAndFocusAsync();\n      } else {\n        nextFocusable.focus();\n      }\n    }\n  };\n\n  _focusAsync(element: HTMLElement): void {\n    if (!this._isBumper(element)) {\n      focusAsync(element);\n    }\n  }\n\n  _enableFocusTrapZone = () => {\n    const { disabled = false } = this.props;\n    if (disabled) {\n      return;\n    }\n\n    FocusTrapZone._focusStack.push(this);\n\n    this._bringFocusIntoZone();\n    this._hideContentFromAccessibilityTree();\n  };\n\n  _bringFocusIntoZone = () => {\n    const { disableFirstFocus = false } = this.props;\n\n    this._previouslyFocusedElementOutsideTrapZone = this._getPreviouslyFocusedElementOutsideTrapZone();\n\n    if (\n      // @ts-ignore\n      !this._root.current.contains(this._previouslyFocusedElementOutsideTrapZone) &&\n      !disableFirstFocus\n    ) {\n      this._findElementAndFocusAsync();\n    }\n  };\n\n  _releaseFocusTrapZone = () => {\n    const { ignoreExternalFocusing } = this.props;\n\n    FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter((value: FocusTrapZone) => {\n      return this !== value;\n    });\n\n    // try to focus element which triggered FocusTrapZone - prviously focused element outside trap zone\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const activeElement = doc.activeElement as HTMLElement;\n    if (\n      !ignoreExternalFocusing &&\n      this._previouslyFocusedElementOutsideTrapZone &&\n      // @ts-ignore\n      (this._root.current.contains(activeElement) || activeElement === doc.body)\n    ) {\n      this._focusAsync(this._previouslyFocusedElementOutsideTrapZone);\n    }\n\n    // if last active focus trap zone is going to be released - show previously hidden content in accessibility tree\n    const lastActiveFocusTrap =\n      FocusTrapZone._focusStack.length && FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1];\n\n    if (!lastActiveFocusTrap) {\n      this._showContentInAccessibilityTree();\n    } else if (\n      lastActiveFocusTrap._root.current &&\n      lastActiveFocusTrap._root.current.hasAttribute(HIDDEN_FROM_ACC_TREE)\n    ) {\n      lastActiveFocusTrap._root.current.removeAttribute(HIDDEN_FROM_ACC_TREE);\n      lastActiveFocusTrap._root.current.removeAttribute('aria-hidden');\n    }\n  };\n\n  _findElementAndFocusAsync = () => {\n    if (!this._root.current) {\n      return;\n    }\n\n    const { focusPreviouslyFocusedInnerElement, firstFocusableSelector } = this.props;\n\n    if (\n      focusPreviouslyFocusedInnerElement &&\n      this._previouslyFocusedElementInTrapZone &&\n      this._root.current.contains(this._previouslyFocusedElementInTrapZone)\n    ) {\n      // focus on the last item that had focus in the zone before we left the zone\n      this._focusAsync(this._previouslyFocusedElementInTrapZone);\n      return;\n    }\n\n    const focusSelector =\n      firstFocusableSelector &&\n      (typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector());\n\n    let firstFocusableChild: HTMLElement | null = null;\n\n    if (focusSelector) {\n      firstFocusableChild = this._root.current.querySelector(focusSelector);\n    }\n\n    // Fall back to first element if query selector did not match any elements.\n    if (!firstFocusableChild) {\n      firstFocusableChild = getNextElement(\n        this._root.current,\n        this._root.current.firstChild as HTMLElement,\n        false,\n        false,\n        false,\n        true,\n      );\n    }\n\n    firstFocusableChild && this._focusAsync(firstFocusableChild);\n  };\n\n  _onFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    this.props.onFocusCapture && this.props.onFocusCapture(ev);\n    if (ev.target !== ev.currentTarget && !this._isBumper(ev.target)) {\n      // every time focus changes within the trap zone, remember the focused element so that\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\n      this._previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\n    }\n  };\n\n  _forceFocusInTrap = (ev: Event, triggeredElement: HTMLElement) => {\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\n      // @ts-ignore\n      if (!this._root.current.contains(triggeredElement)) {\n        this._findElementAndFocusAsync();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  _handleOutsideFocus = (ev: FocusEvent): void => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const focusedElement = doc.activeElement as HTMLElement;\n    focusedElement && this._forceFocusInTrap(ev, focusedElement);\n  };\n\n  _handleOutsideClick = (ev: MouseEvent): void => {\n    const clickedElement = ev.target as HTMLElement;\n    const { isClickableOutsideFocusTrap, focusTriggerOnOutsideClick } = this.props;\n\n    if (!isClickableOutsideFocusTrap) {\n      clickedElement && this._forceFocusInTrap(ev, clickedElement);\n    } else if (!focusTriggerOnOutsideClick) {\n      const isOutsideFocusTrapZone = this._root.current && !this._root.current.contains(clickedElement);\n      const isOutsideTriggerElement =\n        this._previouslyFocusedElementOutsideTrapZone &&\n        !this._previouslyFocusedElementOutsideTrapZone.contains(clickedElement);\n      if (isOutsideFocusTrapZone && isOutsideTriggerElement) {\n        // set it to NULL, so the trigger will not be focused on componentWillUnmount\n        // @ts-ignore\n        this._previouslyFocusedElementOutsideTrapZone = null;\n      }\n    }\n  };\n\n  _onKeyboardHandler = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // do not propogate keyboard events outside focus trap zone\n    // https://github.com/microsoft/fluent-ui-react/pull/1180\n    ev.stopPropagation();\n  };\n\n  _getPreviouslyFocusedElementOutsideTrapZone = () => {\n    const { elementToFocusOnDismiss } = this.props;\n    let previouslyFocusedElement = this._previouslyFocusedElementOutsideTrapZone;\n\n    if (elementToFocusOnDismiss && previouslyFocusedElement !== elementToFocusOnDismiss) {\n      previouslyFocusedElement = elementToFocusOnDismiss;\n    } else if (!previouslyFocusedElement) {\n      const doc = getDocument(this._root.current);\n      // @ts-ignore\n      previouslyFocusedElement = doc.activeElement as HTMLElement;\n    }\n\n    return previouslyFocusedElement;\n  };\n\n  _hideContentFromAccessibilityTree = () => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const bodyChildren = (doc.body && doc.body.children) || [];\n\n    // @ts-ignore\n    if (bodyChildren.length && !doc.body.contains(this._root.current)) {\n      // In case popup render options will change\n      /* eslint-disable-next-line no-console */\n      console.warn(\n        'Body element does not contain trap zone element. Please, ensure the trap zone element is placed inside body, so it will work properly.',\n      );\n    }\n\n    for (let index = 0; index < bodyChildren.length; index++) {\n      const currentChild = bodyChildren[index] as HTMLElement;\n      const isOrHasFocusTrapZone = currentChild === this._root.current || currentChild.contains(this._root.current);\n      const isAriaLiveRegion = currentChild.hasAttribute('aria-live');\n\n      if (!isOrHasFocusTrapZone && !isAriaLiveRegion && currentChild.getAttribute('aria-hidden') !== 'true') {\n        currentChild.setAttribute('aria-hidden', 'true');\n        currentChild.setAttribute(HIDDEN_FROM_ACC_TREE, 'true');\n      }\n    }\n  };\n\n  _showContentInAccessibilityTree = () => {\n    const doc = getDocument(this._root.current);\n    // @ts-ignore\n    const hiddenElements = doc.querySelectorAll(`[${HIDDEN_FROM_ACC_TREE}=\"true\"]`);\n    for (let index = 0; index < hiddenElements.length; index++) {\n      const element = hiddenElements[index];\n      element.removeAttribute('aria-hidden');\n      element.removeAttribute(HIDDEN_FROM_ACC_TREE);\n    }\n  };\n}\n"],"file":"FocusTrapZone.js"}