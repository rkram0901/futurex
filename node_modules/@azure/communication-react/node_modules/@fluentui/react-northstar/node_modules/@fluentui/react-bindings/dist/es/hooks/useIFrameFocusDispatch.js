import * as React from 'react';
export var FUI_FRAME_EVENT = 'fuiframefocus';
/**
 * Watch the `document.activeElement` and dispatch a custom event if the current active element is a iframe.
 */

export var useIFrameFocusDispatch = function useIFrameFocusDispatch(enableFrameFocusDispatch, targetDocument, pollDuration) {
  if (pollDuration === void 0) {
    pollDuration = 1000;
  }

  var timeoutRef = React.useRef();
  React.useEffect(function () {
    if (enableFrameFocusDispatch) {
      var _targetDocument$defau;

      timeoutRef.current = targetDocument == null ? void 0 : (_targetDocument$defau = targetDocument.defaultView) == null ? void 0 : _targetDocument$defau.setInterval(function () {
        var activeElement = targetDocument == null ? void 0 : targetDocument.activeElement;

        if ((activeElement == null ? void 0 : activeElement.tagName) === 'IFRAME') {
          var event = new CustomEvent(FUI_FRAME_EVENT, {
            bubbles: true
          });
          activeElement.dispatchEvent(event);
        }
      }, pollDuration);
    }

    return function () {
      var _targetDocument$defau2;

      targetDocument == null ? void 0 : (_targetDocument$defau2 = targetDocument.defaultView) == null ? void 0 : _targetDocument$defau2.clearTimeout(timeoutRef.current);
    };
  }, [targetDocument, enableFrameFocusDispatch, pollDuration]);
};
//# sourceMappingURL=useIFrameFocusDispatch.js.map
