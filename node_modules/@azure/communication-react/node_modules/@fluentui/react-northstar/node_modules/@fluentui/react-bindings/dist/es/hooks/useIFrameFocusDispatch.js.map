{"version":3,"sources":["hooks/useIFrameFocusDispatch.ts"],"names":["React","FUI_FRAME_EVENT","useIFrameFocusDispatch","enableFrameFocusDispatch","targetDocument","pollDuration","timeoutRef","useRef","useEffect","current","defaultView","setInterval","activeElement","tagName","event","CustomEvent","bubbles","dispatchEvent","clearTimeout"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,eAAe,GAAG,eAAxB;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CACpCC,wBADoC,EAEpCC,cAFoC,EAGpCC,YAHoC,EAIjC;AAAA,MADHA,YACG;AADHA,IAAAA,YACG,GADoB,IACpB;AAAA;;AACH,MAAMC,UAAU,GAAGN,KAAK,CAACO,MAAN,EAAnB;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpB,QAAIL,wBAAJ,EAA8B;AAAA;;AAC5BG,MAAAA,UAAU,CAACG,OAAX,GAAqBL,cAArB,6CAAqBA,cAAc,CAAEM,WAArC,qBAAqB,sBAA6BC,WAA7B,CAAyC,YAAM;AAClE,YAAMC,aAAa,GAAGR,cAAH,oBAAGA,cAAc,CAAEQ,aAAtC;;AACA,YAAI,CAAAA,aAAa,QAAb,YAAAA,aAAa,CAAEC,OAAf,MAA2B,QAA/B,EAAyC;AACvC,cAAMC,KAAK,GAAG,IAAIC,WAAJ,CAAgBd,eAAhB,EAAiC;AAAEe,YAAAA,OAAO,EAAE;AAAX,WAAjC,CAAd;AACAJ,UAAAA,aAAa,CAACK,aAAd,CAA4BH,KAA5B;AACD;AACF,OANoB,EAMlBT,YANkB,CAArB;AAOD;;AACD,WAAO,YAAM;AAAA;;AACXD,MAAAA,cAAc,QAAd,sCAAAA,cAAc,CAAEM,WAAhB,4CAA6BQ,YAA7B,CAA0CZ,UAAU,CAACG,OAArD;AACD,KAFD;AAGD,GAbD,EAaG,CAACL,cAAD,EAAiBD,wBAAjB,EAA2CE,YAA3C,CAbH;AAcD,CArBM","sourcesContent":["import * as React from 'react';\n\nexport const FUI_FRAME_EVENT = 'fuiframefocus';\n\n/**\n * Watch the `document.activeElement` and dispatch a custom event if the current active element is a iframe.\n */\nexport const useIFrameFocusDispatch = (\n  enableFrameFocusDispatch: boolean,\n  targetDocument: Document,\n  pollDuration: number = 1000,\n) => {\n  const timeoutRef = React.useRef<number>();\n\n  React.useEffect(() => {\n    if (enableFrameFocusDispatch) {\n      timeoutRef.current = targetDocument?.defaultView?.setInterval(() => {\n        const activeElement = targetDocument?.activeElement;\n        if (activeElement?.tagName === 'IFRAME') {\n          const event = new CustomEvent(FUI_FRAME_EVENT, { bubbles: true });\n          activeElement.dispatchEvent(event);\n        }\n      }, pollDuration);\n    }\n    return () => {\n      targetDocument?.defaultView?.clearTimeout(timeoutRef.current);\n    };\n  }, [targetDocument, enableFrameFocusDispatch, pollDuration]);\n};\n"],"file":"useIFrameFocusDispatch.js"}