"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAccessibility = void 0;
var getKeyDownHandlers_1 = require("./getKeyDownHandlers");
var emptyBehavior = {
    attributes: {},
    keyHandlers: {},
};
var getAccessibility = function (displayName, behavior, behaviorProps, isRtlEnabled, actionHandlers) {
    if (behavior === null || behavior === undefined) {
        return emptyBehavior;
    }
    var definition = behavior(behaviorProps);
    var keyHandlers = actionHandlers && definition.keyActions
        ? getKeyDownHandlers_1.getKeyDownHandlers(actionHandlers, definition.keyActions, isRtlEnabled)
        : {};
    if (definition.focusZone) {
        definition.focusZone.props = __assign({ 
            // maintain behavior of focus zone in v7 behaviors
            preventFocusRestoration: true }, definition.focusZone.props);
    }
    if (process.env.NODE_ENV !== 'production') {
        // For the non-production builds we enable the runtime accessibility attributes validator.
        // We're adding the data-aa-class attribute which is being consumed by the validator, the
        // schema is located in @fluentui/ability-attributes package.
        if (definition.attributes) {
            Object.keys(definition.attributes).forEach(function (slotName) {
                var validatorName = definition.attributes[slotName]['data-aa-class'] ||
                    "" + displayName + (slotName === 'root' ? '' : "__" + slotName);
                if (!definition.attributes[slotName]) {
                    definition.attributes[slotName] = {};
                }
                definition.attributes[slotName]['data-aa-class'] = validatorName;
            });
        }
    }
    return __assign(__assign(__assign({}, emptyBehavior), definition), { keyHandlers: keyHandlers });
};
exports.getAccessibility = getAccessibility;
