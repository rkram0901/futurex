{"version":3,"sources":["hooks/useOnIFrameFocus.ts"],"names":["useIFrameFocusDispatch","useIFrameListener","useOnIFrameFocus","enableFrameFocusDispatch","targetDocument","cb"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,0BAAvC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA;AACA;AACA;;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC9BC,wBAD8B,EAE9BC,cAF8B,EAG9BC,EAH8B,EAI3B;AACHL,EAAAA,sBAAsB,CAACG,wBAAD,EAA2BC,cAA3B,CAAtB;AACAH,EAAAA,iBAAiB,CAACE,wBAAD,EAA2BE,EAA3B,EAA+BD,cAA/B,CAAjB;AACD,CAPM","sourcesContent":["import { useIFrameFocusDispatch } from './useIFrameFocusDispatch';\nimport { useIFrameListener } from './useIFrameListener';\n\n/**\n * It enabables a interval to check if the iframe is focused and executes the callback function.\n */\nexport const useOnIFrameFocus = (\n  enableFrameFocusDispatch: boolean,\n  targetDocument: Document,\n  cb: (e: Event) => void,\n) => {\n  useIFrameFocusDispatch(enableFrameFocusDispatch, targetDocument);\n  useIFrameListener(enableFrameFocusDispatch, cb, targetDocument);\n};\n"],"file":"useOnIFrameFocus.js"}