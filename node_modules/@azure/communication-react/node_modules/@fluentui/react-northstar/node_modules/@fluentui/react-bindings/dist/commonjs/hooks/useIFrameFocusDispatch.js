"use strict";

exports.__esModule = true;
exports.useIFrameFocusDispatch = exports.FUI_FRAME_EVENT = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var FUI_FRAME_EVENT = 'fuiframefocus';
/**
 * Watch the `document.activeElement` and dispatch a custom event if the current active element is a iframe.
 */

exports.FUI_FRAME_EVENT = FUI_FRAME_EVENT;

var useIFrameFocusDispatch = function useIFrameFocusDispatch(enableFrameFocusDispatch, targetDocument, pollDuration) {
  if (pollDuration === void 0) {
    pollDuration = 1000;
  }

  var timeoutRef = React.useRef();
  React.useEffect(function () {
    if (enableFrameFocusDispatch) {
      var _targetDocument$defau;

      timeoutRef.current = targetDocument == null ? void 0 : (_targetDocument$defau = targetDocument.defaultView) == null ? void 0 : _targetDocument$defau.setInterval(function () {
        var activeElement = targetDocument == null ? void 0 : targetDocument.activeElement;

        if ((activeElement == null ? void 0 : activeElement.tagName) === 'IFRAME') {
          var event = new CustomEvent(FUI_FRAME_EVENT, {
            bubbles: true
          });
          activeElement.dispatchEvent(event);
        }
      }, pollDuration);
    }

    return function () {
      var _targetDocument$defau2;

      targetDocument == null ? void 0 : (_targetDocument$defau2 = targetDocument.defaultView) == null ? void 0 : _targetDocument$defau2.clearTimeout(timeoutRef.current);
    };
  }, [targetDocument, enableFrameFocusDispatch, pollDuration]);
};

exports.useIFrameFocusDispatch = useIFrameFocusDispatch;
//# sourceMappingURL=useIFrameFocusDispatch.js.map
