"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
var shouldHandleOnKeys_1 = require("../../src/accessibility/shouldHandleOnKeys");
var getEventArg = function (keyCode, altKey, ctrlKey, metaKey, shiftKey) {
    return {
        keyCode: keyCode,
        altKey: altKey,
        ctrlKey: ctrlKey,
        metaKey: metaKey,
        shiftKey: shiftKey,
    };
};
describe('shouldHandleOnKeys', function () {
    test('should return `true`', function () {
        // keys mapping defined for actions
        var keyCombinations = [
            { keyCode: 27 },
            { keyCode: 28, altKey: true },
            { keyCode: 32, shiftKey: true, metaKey: true },
            { keyCode: 39, ctrlKey: true },
            { keyCode: 42, altKey: true, ctrlKey: true, shiftKey: true, metaKey: true },
        ];
        var events = __spreadArray(__spreadArray([], keyCombinations), [
            { keyCode: 27, altKey: true },
            { keyCode: 27, altKey: false },
        ]).map(function (keyCombination) {
            return getEventArg(keyCombination.keyCode, keyCombination.altKey, keyCombination.ctrlKey, keyCombination.metaKey, keyCombination.shiftKey);
        });
        events.forEach(function (event) {
            expect(shouldHandleOnKeys_1.shouldHandleOnKeys(event, keyCombinations)).toBe(true);
        });
    });
    test('should return `false`', function () {
        // keys mapping defined for actions
        var keyCombinations = [
            { keyCode: 27, ctrlKey: true },
            { keyCode: 32 },
            { keyCode: 32, altKey: true },
            { keyCode: 39, shiftKey: true, metaKey: true },
            { keyCode: 41, shiftKey: false },
        ];
        // other keys mapping, that will be passed as keydown event
        var events = [
            { keyCode: 27, ctrlKey: false },
            { keyCode: 31, altKey: true },
            { keyCode: 39, shiftKey: false, metaKey: false },
            { keyCode: 41, shiftKey: true },
        ].map(function (keyCombination) {
            return getEventArg(keyCombination.keyCode, keyCombination.altKey, keyCombination.ctrlKey, keyCombination.metaKey, keyCombination.shiftKey);
        });
        events.forEach(function (event) {
            expect(shouldHandleOnKeys_1.shouldHandleOnKeys(event, keyCombinations)).toBe(false);
        });
    });
});
