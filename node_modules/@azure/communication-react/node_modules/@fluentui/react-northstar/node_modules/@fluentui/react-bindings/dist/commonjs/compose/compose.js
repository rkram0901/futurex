"use strict";

exports.__esModule = true;
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _wasComposedPreviously = require("./wasComposedPreviously");

var _mergeComposeOptions = require("./mergeComposeOptions");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function compose(input, inputOptions) {
  if (inputOptions === void 0) {
    inputOptions = {};
  }

  var composeOptions = (0, _mergeComposeOptions.mergeComposeOptions)(input, inputOptions, (0, _wasComposedPreviously.wasComposedPreviously)(input) ? input.fluentComposeConfig : undefined);
  var Component = /*#__PURE__*/React.forwardRef(function (props, ref) {
    return composeOptions.render(props, ref, Object.assign({}, composeOptions, {
      state: composeOptions.state(props, ref, composeOptions),
      slots: Object.assign({}, composeOptions.slots, {
        __self: Component
      })
    }));
  });
  Component.displayName = composeOptions.displayName;

  if (input.defaultProps) {
    Component.defaultProps = input.defaultProps;
  }

  Component.fluentComposeConfig = composeOptions;
  return Component;
} // eslint-disable-next-line import/no-default-export


var _default = compose;
exports.default = _default;
//# sourceMappingURL=compose.js.map
