"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.treeTitleAsOptionBehavior = void 0;
var treeTitleBehavior_1 = require("./treeTitleBehavior");
var attributes_1 = require("../../attributes");
/**
 * @description
 * Adds role 'option' if the title is a leaf node inside the tree
 * Adds 'aria-selected' to a leaf treeTitle if it is selectable, based on the 'selected' property
 * @specification
 * Adds attribute 'tabIndex=-1' to 'root' slot if 'hasSubtree' property is false or undefined. Does not set the attribute if true.
 * Adds attribute 'role=option' to 'root' slot if 'hasSubtree' property is false or undefined. Does not set the attribute if true.
 * Adds attribute 'aria-setsize=3' based on the property 'treeSize' if the component has 'hasSubtree' property false or undefined. Does not set anything if true..
 * Adds attribute 'aria-posinset=2' based on the property 'index' if the component has 'hasSubtree' property false or undefined. Does not set anything if true..
 * Triggers 'performClick' action with 'Spacebar' on 'root'.
 */
var treeTitleAsOptionBehavior = function (props) {
    var _a;
    var behavior = treeTitleBehavior_1.treeTitleBehavior(props);
    var definition = __assign(__assign({}, behavior), { attributes: {
            root: __assign({}, (!props.hasSubtree && __assign((_a = { tabIndex: -1 }, _a[attributes_1.IS_FOCUSABLE_ATTRIBUTE] = true, _a.role = 'option', _a['aria-setsize'] = props.treeSize, _a['aria-posinset'] = props.index, _a), (props.selectable && { 'aria-selected': !!props.selected })))),
        } });
    if (process.env.NODE_ENV !== 'production') {
        if (!props.hasSubtree)
            definition.attributes.root['data-aa-class'] = 'TreeTitleOption';
        else
            definition.attributes.root['data-aa-class'] = behavior.attributes.root['data-aa-class'];
    }
    return definition;
};
exports.treeTitleAsOptionBehavior = treeTitleAsOptionBehavior;
