"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toolbarMenuItemBehavior = void 0;
var menuItemBehavior_1 = require("../Menu/menuItemBehavior");
/**
 * @description
 * The behavior is designed for particular structure of menu item. The item consists of root element and anchor inside the root element.
 *
 * @specification
 * Adds role 'presentation' to 'wrapper' slot.
 * Adds role 'menuitem' to 'root' slot.
 * Adds attribute 'tabIndex=0' to 'root' slot.
 * Adds attribute 'aria-label' based on the property 'aria-label' to 'root' slot.
 * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'root' slot.
 * Adds attribute 'aria-describedby' based on the property 'aria-describedby' to 'root' slot.
 * Adds attribute 'aria-expanded=true' based on the property 'menuOpen' if the component has 'hasMenu' property to 'root' slot.
 * Adds attribute 'aria-haspopup=true' to 'root' slot if 'hasMenu' property is set.
 * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.
 * Triggers 'closeMenuAndFocusTrigger' action with 'Escape' on 'wrapper'.
 * Triggers 'closeAllMenusAndFocusNextParentItem' action with 'ArrowRight' on 'wrapper'.
 * Triggers 'closeMenu' action with 'ArrowLeft' on 'wrapper'.
 * Triggers 'openMenu' action with 'ArrowRight' on 'wrapper'.
 * Adds attribute 'disabled=true' based on the property 'disabled'.
 * Adds attribute 'aria-disabled=true' based on the property 'disabledFocusable'.
 */
var toolbarMenuItemBehavior = function (props) {
    var defaultBehaviors = menuItemBehavior_1.menuItemBehavior(__assign(__assign({}, props), { vertical: true }));
    return __assign(__assign({}, defaultBehaviors), { attributes: __assign(__assign({}, defaultBehaviors.attributes), { root: __assign(__assign({}, defaultBehaviors.attributes.root), { disabled: props.disabled, 'aria-disabled': props.disabledFocusable }) }) });
};
exports.toolbarMenuItemBehavior = toolbarMenuItemBehavior;
